

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Oct 19 12:20:17 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 30/04/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F18875 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001C                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  008C                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0110                     	;# 
   134  0110                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0114                     	;# 
   141  0115                     	;# 
   142  0116                     	;# 
   143  0116                     	;# 
   144  0117                     	;# 
   145  0119                     	;# 
   146  0119                     	;# 
   147  0119                     	;# 
   148  011A                     	;# 
   149  011A                     	;# 
   150  011A                     	;# 
   151  011B                     	;# 
   152  011B                     	;# 
   153  011B                     	;# 
   154  011B                     	;# 
   155  011B                     	;# 
   156  011C                     	;# 
   157  011C                     	;# 
   158  011C                     	;# 
   159  011D                     	;# 
   160  011D                     	;# 
   161  011D                     	;# 
   162  011E                     	;# 
   163  011E                     	;# 
   164  011E                     	;# 
   165  011F                     	;# 
   166  011F                     	;# 
   167  011F                     	;# 
   168  011F                     	;# 
   169  011F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  018E                     	;# 
   173  018F                     	;# 
   174  0190                     	;# 
   175  0191                     	;# 
   176  0192                     	;# 
   177  0196                     	;# 
   178  0197                     	;# 
   179  0198                     	;# 
   180  0199                     	;# 
   181  019A                     	;# 
   182  019B                     	;# 
   183  019C                     	;# 
   184  020C                     	;# 
   185  020C                     	;# 
   186  020D                     	;# 
   187  020E                     	;# 
   188  020F                     	;# 
   189  020F                     	;# 
   190  0210                     	;# 
   191  0210                     	;# 
   192  0211                     	;# 
   193  0211                     	;# 
   194  0212                     	;# 
   195  0212                     	;# 
   196  0213                     	;# 
   197  0214                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0216                     	;# 
   201  0216                     	;# 
   202  0217                     	;# 
   203  0217                     	;# 
   204  0218                     	;# 
   205  0218                     	;# 
   206  0219                     	;# 
   207  021A                     	;# 
   208  021B                     	;# 
   209  021B                     	;# 
   210  021C                     	;# 
   211  021C                     	;# 
   212  021D                     	;# 
   213  021D                     	;# 
   214  021E                     	;# 
   215  021F                     	;# 
   216  028C                     	;# 
   217  028C                     	;# 
   218  028D                     	;# 
   219  028D                     	;# 
   220  028E                     	;# 
   221  028F                     	;# 
   222  0290                     	;# 
   223  0290                     	;# 
   224  0291                     	;# 
   225  0292                     	;# 
   226  0292                     	;# 
   227  0293                     	;# 
   228  0293                     	;# 
   229  0294                     	;# 
   230  0295                     	;# 
   231  0296                     	;# 
   232  0296                     	;# 
   233  0297                     	;# 
   234  0298                     	;# 
   235  0298                     	;# 
   236  0299                     	;# 
   237  0299                     	;# 
   238  029A                     	;# 
   239  029B                     	;# 
   240  029C                     	;# 
   241  029C                     	;# 
   242  029D                     	;# 
   243  030C                     	;# 
   244  030C                     	;# 
   245  030D                     	;# 
   246  030E                     	;# 
   247  030F                     	;# 
   248  0310                     	;# 
   249  0310                     	;# 
   250  0311                     	;# 
   251  0312                     	;# 
   252  0313                     	;# 
   253  0314                     	;# 
   254  0314                     	;# 
   255  0315                     	;# 
   256  0316                     	;# 
   257  0317                     	;# 
   258  0318                     	;# 
   259  0318                     	;# 
   260  0319                     	;# 
   261  031A                     	;# 
   262  031B                     	;# 
   263  031C                     	;# 
   264  031C                     	;# 
   265  031D                     	;# 
   266  031E                     	;# 
   267  031F                     	;# 
   268  038C                     	;# 
   269  038C                     	;# 
   270  038D                     	;# 
   271  038E                     	;# 
   272  0390                     	;# 
   273  0390                     	;# 
   274  0391                     	;# 
   275  0392                     	;# 
   276  040C                     	;# 
   277  040D                     	;# 
   278  040E                     	;# 
   279  040F                     	;# 
   280  0410                     	;# 
   281  0411                     	;# 
   282  0416                     	;# 
   283  0416                     	;# 
   284  0417                     	;# 
   285  0418                     	;# 
   286  0418                     	;# 
   287  0419                     	;# 
   288  041A                     	;# 
   289  041A                     	;# 
   290  041B                     	;# 
   291  041C                     	;# 
   292  041C                     	;# 
   293  041D                     	;# 
   294  041E                     	;# 
   295  041F                     	;# 
   296  048C                     	;# 
   297  048C                     	;# 
   298  048D                     	;# 
   299  048E                     	;# 
   300  048F                     	;# 
   301  048F                     	;# 
   302  0490                     	;# 
   303  0491                     	;# 
   304  0492                     	;# 
   305  0492                     	;# 
   306  0493                     	;# 
   307  0494                     	;# 
   308  0495                     	;# 
   309  0495                     	;# 
   310  0496                     	;# 
   311  0497                     	;# 
   312  0498                     	;# 
   313  0499                     	;# 
   314  049A                     	;# 
   315  049B                     	;# 
   316  049C                     	;# 
   317  049D                     	;# 
   318  050C                     	;# 
   319  050C                     	;# 
   320  050D                     	;# 
   321  050E                     	;# 
   322  050F                     	;# 
   323  050F                     	;# 
   324  0510                     	;# 
   325  0511                     	;# 
   326  0512                     	;# 
   327  0512                     	;# 
   328  0513                     	;# 
   329  0514                     	;# 
   330  0515                     	;# 
   331  0515                     	;# 
   332  0516                     	;# 
   333  0517                     	;# 
   334  0518                     	;# 
   335  0519                     	;# 
   336  051A                     	;# 
   337  051B                     	;# 
   338  051C                     	;# 
   339  051D                     	;# 
   340  058C                     	;# 
   341  058C                     	;# 
   342  058D                     	;# 
   343  058E                     	;# 
   344  058F                     	;# 
   345  058F                     	;# 
   346  0590                     	;# 
   347  0591                     	;# 
   348  0592                     	;# 
   349  0593                     	;# 
   350  060C                     	;# 
   351  060D                     	;# 
   352  060E                     	;# 
   353  060F                     	;# 
   354  0610                     	;# 
   355  0611                     	;# 
   356  0612                     	;# 
   357  0613                     	;# 
   358  0614                     	;# 
   359  0616                     	;# 
   360  0617                     	;# 
   361  0618                     	;# 
   362  0619                     	;# 
   363  061A                     	;# 
   364  061B                     	;# 
   365  061C                     	;# 
   366  061D                     	;# 
   367  061E                     	;# 
   368  068C                     	;# 
   369  068D                     	;# 
   370  068E                     	;# 
   371  068F                     	;# 
   372  0690                     	;# 
   373  0691                     	;# 
   374  0692                     	;# 
   375  0693                     	;# 
   376  0694                     	;# 
   377  070C                     	;# 
   378  070D                     	;# 
   379  070E                     	;# 
   380  070F                     	;# 
   381  0710                     	;# 
   382  0711                     	;# 
   383  0712                     	;# 
   384  0713                     	;# 
   385  0714                     	;# 
   386  0716                     	;# 
   387  0717                     	;# 
   388  0718                     	;# 
   389  0719                     	;# 
   390  071A                     	;# 
   391  071B                     	;# 
   392  071C                     	;# 
   393  071D                     	;# 
   394  071E                     	;# 
   395  0796                     	;# 
   396  0797                     	;# 
   397  0798                     	;# 
   398  0799                     	;# 
   399  079A                     	;# 
   400  079B                     	;# 
   401  080C                     	;# 
   402  080D                     	;# 
   403  080E                     	;# 
   404  080F                     	;# 
   405  0810                     	;# 
   406  0811                     	;# 
   407  0812                     	;# 
   408  0813                     	;# 
   409  0814                     	;# 
   410  081A                     	;# 
   411  081B                     	;# 
   412  081C                     	;# 
   413  081D                     	;# 
   414  081E                     	;# 
   415  081F                     	;# 
   416  088C                     	;# 
   417  088D                     	;# 
   418  088E                     	;# 
   419  088F                     	;# 
   420  0890                     	;# 
   421  0891                     	;# 
   422  0892                     	;# 
   423  0893                     	;# 
   424  0895                     	;# 
   425  0896                     	;# 
   426  0897                     	;# 
   427  0898                     	;# 
   428  0899                     	;# 
   429  089A                     	;# 
   430  089B                     	;# 
   431  090C                     	;# 
   432  090E                     	;# 
   433  090F                     	;# 
   434  091F                     	;# 
   435  091F                     	;# 
   436  098F                     	;# 
   437  098F                     	;# 
   438  0990                     	;# 
   439  0991                     	;# 
   440  0992                     	;# 
   441  0993                     	;# 
   442  0994                     	;# 
   443  0995                     	;# 
   444  0996                     	;# 
   445  0997                     	;# 
   446  0E0F                     	;# 
   447  0E10                     	;# 
   448  0E11                     	;# 
   449  0E12                     	;# 
   450  0E13                     	;# 
   451  0E14                     	;# 
   452  0E15                     	;# 
   453  0E16                     	;# 
   454  0E17                     	;# 
   455  0E18                     	;# 
   456  0E19                     	;# 
   457  0E1A                     	;# 
   458  0E1B                     	;# 
   459  0E1C                     	;# 
   460  0E1D                     	;# 
   461  0E1E                     	;# 
   462  0E1F                     	;# 
   463  0E20                     	;# 
   464  0E21                     	;# 
   465  0E22                     	;# 
   466  0E23                     	;# 
   467  0E24                     	;# 
   468  0E25                     	;# 
   469  0E26                     	;# 
   470  0E27                     	;# 
   471  0E28                     	;# 
   472  0E29                     	;# 
   473  0E2A                     	;# 
   474  0E2B                     	;# 
   475  0E2C                     	;# 
   476  0E2D                     	;# 
   477  0E2E                     	;# 
   478  0E2F                     	;# 
   479  0E30                     	;# 
   480  0E31                     	;# 
   481  0E32                     	;# 
   482  0E33                     	;# 
   483  0E34                     	;# 
   484  0E35                     	;# 
   485  0E36                     	;# 
   486  0E37                     	;# 
   487  0E8F                     	;# 
   488  0E90                     	;# 
   489  0E91                     	;# 
   490  0E92                     	;# 
   491  0E93                     	;# 
   492  0E94                     	;# 
   493  0E95                     	;# 
   494  0E96                     	;# 
   495  0E97                     	;# 
   496  0E9C                     	;# 
   497  0E9D                     	;# 
   498  0E9E                     	;# 
   499  0EA1                     	;# 
   500  0EA2                     	;# 
   501  0EA3                     	;# 
   502  0EA4                     	;# 
   503  0EA5                     	;# 
   504  0EA9                     	;# 
   505  0EAA                     	;# 
   506  0EAB                     	;# 
   507  0EAC                     	;# 
   508  0EB1                     	;# 
   509  0EB2                     	;# 
   510  0EB3                     	;# 
   511  0EB8                     	;# 
   512  0EB9                     	;# 
   513  0EBA                     	;# 
   514  0EBB                     	;# 
   515  0EBC                     	;# 
   516  0EBD                     	;# 
   517  0EBE                     	;# 
   518  0EC3                     	;# 
   519  0EC5                     	;# 
   520  0EC6                     	;# 
   521  0EC7                     	;# 
   522  0EC8                     	;# 
   523  0EC9                     	;# 
   524  0ECA                     	;# 
   525  0ECB                     	;# 
   526  0ECC                     	;# 
   527  0F10                     	;# 
   528  0F11                     	;# 
   529  0F12                     	;# 
   530  0F13                     	;# 
   531  0F14                     	;# 
   532  0F15                     	;# 
   533  0F16                     	;# 
   534  0F17                     	;# 
   535  0F18                     	;# 
   536  0F19                     	;# 
   537  0F1A                     	;# 
   538  0F1B                     	;# 
   539  0F1C                     	;# 
   540  0F1D                     	;# 
   541  0F1E                     	;# 
   542  0F1F                     	;# 
   543  0F20                     	;# 
   544  0F21                     	;# 
   545  0F22                     	;# 
   546  0F23                     	;# 
   547  0F24                     	;# 
   548  0F25                     	;# 
   549  0F26                     	;# 
   550  0F27                     	;# 
   551  0F28                     	;# 
   552  0F29                     	;# 
   553  0F2A                     	;# 
   554  0F2B                     	;# 
   555  0F2C                     	;# 
   556  0F2D                     	;# 
   557  0F2E                     	;# 
   558  0F2F                     	;# 
   559  0F30                     	;# 
   560  0F31                     	;# 
   561  0F32                     	;# 
   562  0F38                     	;# 
   563  0F39                     	;# 
   564  0F3A                     	;# 
   565  0F3B                     	;# 
   566  0F3C                     	;# 
   567  0F3D                     	;# 
   568  0F3E                     	;# 
   569  0F3F                     	;# 
   570  0F40                     	;# 
   571  0F41                     	;# 
   572  0F43                     	;# 
   573  0F44                     	;# 
   574  0F45                     	;# 
   575  0F46                     	;# 
   576  0F47                     	;# 
   577  0F48                     	;# 
   578  0F49                     	;# 
   579  0F4A                     	;# 
   580  0F4B                     	;# 
   581  0F4C                     	;# 
   582  0F4E                     	;# 
   583  0F4F                     	;# 
   584  0F50                     	;# 
   585  0F51                     	;# 
   586  0F52                     	;# 
   587  0F53                     	;# 
   588  0F54                     	;# 
   589  0F55                     	;# 
   590  0F56                     	;# 
   591  0F57                     	;# 
   592  0F59                     	;# 
   593  0F5A                     	;# 
   594  0F5B                     	;# 
   595  0F5C                     	;# 
   596  0F5D                     	;# 
   597  0F61                     	;# 
   598  0F62                     	;# 
   599  0F64                     	;# 
   600  0F65                     	;# 
   601  0F66                     	;# 
   602  0F67                     	;# 
   603  0F68                     	;# 
   604  0F69                     	;# 
   605  0F6A                     	;# 
   606  0F6B                     	;# 
   607  0F6C                     	;# 
   608  0F6D                     	;# 
   609  0FE4                     	;# 
   610  0FE5                     	;# 
   611  0FE6                     	;# 
   612  0FE7                     	;# 
   613  0FE8                     	;# 
   614  0FE9                     	;# 
   615  0FEA                     	;# 
   616  0FEB                     	;# 
   617  0FED                     	;# 
   618  0FEE                     	;# 
   619  0FEF                     	;# 
   620  0000                     	;# 
   621  0001                     	;# 
   622  0002                     	;# 
   623  0003                     	;# 
   624  0004                     	;# 
   625  0005                     	;# 
   626  0006                     	;# 
   627  0007                     	;# 
   628  0008                     	;# 
   629  0009                     	;# 
   630  000A                     	;# 
   631  000B                     	;# 
   632  000C                     	;# 
   633  000D                     	;# 
   634  000E                     	;# 
   635  000F                     	;# 
   636  0010                     	;# 
   637  0011                     	;# 
   638  0012                     	;# 
   639  0013                     	;# 
   640  0014                     	;# 
   641  0015                     	;# 
   642  0016                     	;# 
   643  0017                     	;# 
   644  0018                     	;# 
   645  0019                     	;# 
   646  001A                     	;# 
   647  001C                     	;# 
   648  001C                     	;# 
   649  001D                     	;# 
   650  001D                     	;# 
   651  001E                     	;# 
   652  001F                     	;# 
   653  008C                     	;# 
   654  008C                     	;# 
   655  008D                     	;# 
   656  008E                     	;# 
   657  008E                     	;# 
   658  008F                     	;# 
   659  0090                     	;# 
   660  0090                     	;# 
   661  0091                     	;# 
   662  0093                     	;# 
   663  0094                     	;# 
   664  0095                     	;# 
   665  0096                     	;# 
   666  0097                     	;# 
   667  0098                     	;# 
   668  0099                     	;# 
   669  009A                     	;# 
   670  009B                     	;# 
   671  009C                     	;# 
   672  009D                     	;# 
   673  009E                     	;# 
   674  010C                     	;# 
   675  010D                     	;# 
   676  010E                     	;# 
   677  010E                     	;# 
   678  010F                     	;# 
   679  0110                     	;# 
   680  0110                     	;# 
   681  0111                     	;# 
   682  0112                     	;# 
   683  0112                     	;# 
   684  0113                     	;# 
   685  0114                     	;# 
   686  0114                     	;# 
   687  0115                     	;# 
   688  0116                     	;# 
   689  0116                     	;# 
   690  0117                     	;# 
   691  0119                     	;# 
   692  0119                     	;# 
   693  0119                     	;# 
   694  011A                     	;# 
   695  011A                     	;# 
   696  011A                     	;# 
   697  011B                     	;# 
   698  011B                     	;# 
   699  011B                     	;# 
   700  011B                     	;# 
   701  011B                     	;# 
   702  011C                     	;# 
   703  011C                     	;# 
   704  011C                     	;# 
   705  011D                     	;# 
   706  011D                     	;# 
   707  011D                     	;# 
   708  011E                     	;# 
   709  011E                     	;# 
   710  011E                     	;# 
   711  011F                     	;# 
   712  011F                     	;# 
   713  011F                     	;# 
   714  011F                     	;# 
   715  011F                     	;# 
   716  018C                     	;# 
   717  018D                     	;# 
   718  018E                     	;# 
   719  018F                     	;# 
   720  0190                     	;# 
   721  0191                     	;# 
   722  0192                     	;# 
   723  0196                     	;# 
   724  0197                     	;# 
   725  0198                     	;# 
   726  0199                     	;# 
   727  019A                     	;# 
   728  019B                     	;# 
   729  019C                     	;# 
   730  020C                     	;# 
   731  020C                     	;# 
   732  020D                     	;# 
   733  020E                     	;# 
   734  020F                     	;# 
   735  020F                     	;# 
   736  0210                     	;# 
   737  0210                     	;# 
   738  0211                     	;# 
   739  0211                     	;# 
   740  0212                     	;# 
   741  0212                     	;# 
   742  0213                     	;# 
   743  0214                     	;# 
   744  0215                     	;# 
   745  0215                     	;# 
   746  0216                     	;# 
   747  0216                     	;# 
   748  0217                     	;# 
   749  0217                     	;# 
   750  0218                     	;# 
   751  0218                     	;# 
   752  0219                     	;# 
   753  021A                     	;# 
   754  021B                     	;# 
   755  021B                     	;# 
   756  021C                     	;# 
   757  021C                     	;# 
   758  021D                     	;# 
   759  021D                     	;# 
   760  021E                     	;# 
   761  021F                     	;# 
   762  028C                     	;# 
   763  028C                     	;# 
   764  028D                     	;# 
   765  028D                     	;# 
   766  028E                     	;# 
   767  028F                     	;# 
   768  0290                     	;# 
   769  0290                     	;# 
   770  0291                     	;# 
   771  0292                     	;# 
   772  0292                     	;# 
   773  0293                     	;# 
   774  0293                     	;# 
   775  0294                     	;# 
   776  0295                     	;# 
   777  0296                     	;# 
   778  0296                     	;# 
   779  0297                     	;# 
   780  0298                     	;# 
   781  0298                     	;# 
   782  0299                     	;# 
   783  0299                     	;# 
   784  029A                     	;# 
   785  029B                     	;# 
   786  029C                     	;# 
   787  029C                     	;# 
   788  029D                     	;# 
   789  030C                     	;# 
   790  030C                     	;# 
   791  030D                     	;# 
   792  030E                     	;# 
   793  030F                     	;# 
   794  0310                     	;# 
   795  0310                     	;# 
   796  0311                     	;# 
   797  0312                     	;# 
   798  0313                     	;# 
   799  0314                     	;# 
   800  0314                     	;# 
   801  0315                     	;# 
   802  0316                     	;# 
   803  0317                     	;# 
   804  0318                     	;# 
   805  0318                     	;# 
   806  0319                     	;# 
   807  031A                     	;# 
   808  031B                     	;# 
   809  031C                     	;# 
   810  031C                     	;# 
   811  031D                     	;# 
   812  031E                     	;# 
   813  031F                     	;# 
   814  038C                     	;# 
   815  038C                     	;# 
   816  038D                     	;# 
   817  038E                     	;# 
   818  0390                     	;# 
   819  0390                     	;# 
   820  0391                     	;# 
   821  0392                     	;# 
   822  040C                     	;# 
   823  040D                     	;# 
   824  040E                     	;# 
   825  040F                     	;# 
   826  0410                     	;# 
   827  0411                     	;# 
   828  0416                     	;# 
   829  0416                     	;# 
   830  0417                     	;# 
   831  0418                     	;# 
   832  0418                     	;# 
   833  0419                     	;# 
   834  041A                     	;# 
   835  041A                     	;# 
   836  041B                     	;# 
   837  041C                     	;# 
   838  041C                     	;# 
   839  041D                     	;# 
   840  041E                     	;# 
   841  041F                     	;# 
   842  048C                     	;# 
   843  048C                     	;# 
   844  048D                     	;# 
   845  048E                     	;# 
   846  048F                     	;# 
   847  048F                     	;# 
   848  0490                     	;# 
   849  0491                     	;# 
   850  0492                     	;# 
   851  0492                     	;# 
   852  0493                     	;# 
   853  0494                     	;# 
   854  0495                     	;# 
   855  0495                     	;# 
   856  0496                     	;# 
   857  0497                     	;# 
   858  0498                     	;# 
   859  0499                     	;# 
   860  049A                     	;# 
   861  049B                     	;# 
   862  049C                     	;# 
   863  049D                     	;# 
   864  050C                     	;# 
   865  050C                     	;# 
   866  050D                     	;# 
   867  050E                     	;# 
   868  050F                     	;# 
   869  050F                     	;# 
   870  0510                     	;# 
   871  0511                     	;# 
   872  0512                     	;# 
   873  0512                     	;# 
   874  0513                     	;# 
   875  0514                     	;# 
   876  0515                     	;# 
   877  0515                     	;# 
   878  0516                     	;# 
   879  0517                     	;# 
   880  0518                     	;# 
   881  0519                     	;# 
   882  051A                     	;# 
   883  051B                     	;# 
   884  051C                     	;# 
   885  051D                     	;# 
   886  058C                     	;# 
   887  058C                     	;# 
   888  058D                     	;# 
   889  058E                     	;# 
   890  058F                     	;# 
   891  058F                     	;# 
   892  0590                     	;# 
   893  0591                     	;# 
   894  0592                     	;# 
   895  0593                     	;# 
   896  060C                     	;# 
   897  060D                     	;# 
   898  060E                     	;# 
   899  060F                     	;# 
   900  0610                     	;# 
   901  0611                     	;# 
   902  0612                     	;# 
   903  0613                     	;# 
   904  0614                     	;# 
   905  0616                     	;# 
   906  0617                     	;# 
   907  0618                     	;# 
   908  0619                     	;# 
   909  061A                     	;# 
   910  061B                     	;# 
   911  061C                     	;# 
   912  061D                     	;# 
   913  061E                     	;# 
   914  068C                     	;# 
   915  068D                     	;# 
   916  068E                     	;# 
   917  068F                     	;# 
   918  0690                     	;# 
   919  0691                     	;# 
   920  0692                     	;# 
   921  0693                     	;# 
   922  0694                     	;# 
   923  070C                     	;# 
   924  070D                     	;# 
   925  070E                     	;# 
   926  070F                     	;# 
   927  0710                     	;# 
   928  0711                     	;# 
   929  0712                     	;# 
   930  0713                     	;# 
   931  0714                     	;# 
   932  0716                     	;# 
   933  0717                     	;# 
   934  0718                     	;# 
   935  0719                     	;# 
   936  071A                     	;# 
   937  071B                     	;# 
   938  071C                     	;# 
   939  071D                     	;# 
   940  071E                     	;# 
   941  0796                     	;# 
   942  0797                     	;# 
   943  0798                     	;# 
   944  0799                     	;# 
   945  079A                     	;# 
   946  079B                     	;# 
   947  080C                     	;# 
   948  080D                     	;# 
   949  080E                     	;# 
   950  080F                     	;# 
   951  0810                     	;# 
   952  0811                     	;# 
   953  0812                     	;# 
   954  0813                     	;# 
   955  0814                     	;# 
   956  081A                     	;# 
   957  081B                     	;# 
   958  081C                     	;# 
   959  081D                     	;# 
   960  081E                     	;# 
   961  081F                     	;# 
   962  088C                     	;# 
   963  088D                     	;# 
   964  088E                     	;# 
   965  088F                     	;# 
   966  0890                     	;# 
   967  0891                     	;# 
   968  0892                     	;# 
   969  0893                     	;# 
   970  0895                     	;# 
   971  0896                     	;# 
   972  0897                     	;# 
   973  0898                     	;# 
   974  0899                     	;# 
   975  089A                     	;# 
   976  089B                     	;# 
   977  090C                     	;# 
   978  090E                     	;# 
   979  090F                     	;# 
   980  091F                     	;# 
   981  091F                     	;# 
   982  098F                     	;# 
   983  098F                     	;# 
   984  0990                     	;# 
   985  0991                     	;# 
   986  0992                     	;# 
   987  0993                     	;# 
   988  0994                     	;# 
   989  0995                     	;# 
   990  0996                     	;# 
   991  0997                     	;# 
   992  0E0F                     	;# 
   993  0E10                     	;# 
   994  0E11                     	;# 
   995  0E12                     	;# 
   996  0E13                     	;# 
   997  0E14                     	;# 
   998  0E15                     	;# 
   999  0E16                     	;# 
  1000  0E17                     	;# 
  1001  0E18                     	;# 
  1002  0E19                     	;# 
  1003  0E1A                     	;# 
  1004  0E1B                     	;# 
  1005  0E1C                     	;# 
  1006  0E1D                     	;# 
  1007  0E1E                     	;# 
  1008  0E1F                     	;# 
  1009  0E20                     	;# 
  1010  0E21                     	;# 
  1011  0E22                     	;# 
  1012  0E23                     	;# 
  1013  0E24                     	;# 
  1014  0E25                     	;# 
  1015  0E26                     	;# 
  1016  0E27                     	;# 
  1017  0E28                     	;# 
  1018  0E29                     	;# 
  1019  0E2A                     	;# 
  1020  0E2B                     	;# 
  1021  0E2C                     	;# 
  1022  0E2D                     	;# 
  1023  0E2E                     	;# 
  1024  0E2F                     	;# 
  1025  0E30                     	;# 
  1026  0E31                     	;# 
  1027  0E32                     	;# 
  1028  0E33                     	;# 
  1029  0E34                     	;# 
  1030  0E35                     	;# 
  1031  0E36                     	;# 
  1032  0E37                     	;# 
  1033  0E8F                     	;# 
  1034  0E90                     	;# 
  1035  0E91                     	;# 
  1036  0E92                     	;# 
  1037  0E93                     	;# 
  1038  0E94                     	;# 
  1039  0E95                     	;# 
  1040  0E96                     	;# 
  1041  0E97                     	;# 
  1042  0E9C                     	;# 
  1043  0E9D                     	;# 
  1044  0E9E                     	;# 
  1045  0EA1                     	;# 
  1046  0EA2                     	;# 
  1047  0EA3                     	;# 
  1048  0EA4                     	;# 
  1049  0EA5                     	;# 
  1050  0EA9                     	;# 
  1051  0EAA                     	;# 
  1052  0EAB                     	;# 
  1053  0EAC                     	;# 
  1054  0EB1                     	;# 
  1055  0EB2                     	;# 
  1056  0EB3                     	;# 
  1057  0EB8                     	;# 
  1058  0EB9                     	;# 
  1059  0EBA                     	;# 
  1060  0EBB                     	;# 
  1061  0EBC                     	;# 
  1062  0EBD                     	;# 
  1063  0EBE                     	;# 
  1064  0EC3                     	;# 
  1065  0EC5                     	;# 
  1066  0EC6                     	;# 
  1067  0EC7                     	;# 
  1068  0EC8                     	;# 
  1069  0EC9                     	;# 
  1070  0ECA                     	;# 
  1071  0ECB                     	;# 
  1072  0ECC                     	;# 
  1073  0F10                     	;# 
  1074  0F11                     	;# 
  1075  0F12                     	;# 
  1076  0F13                     	;# 
  1077  0F14                     	;# 
  1078  0F15                     	;# 
  1079  0F16                     	;# 
  1080  0F17                     	;# 
  1081  0F18                     	;# 
  1082  0F19                     	;# 
  1083  0F1A                     	;# 
  1084  0F1B                     	;# 
  1085  0F1C                     	;# 
  1086  0F1D                     	;# 
  1087  0F1E                     	;# 
  1088  0F1F                     	;# 
  1089  0F20                     	;# 
  1090  0F21                     	;# 
  1091  0F22                     	;# 
  1092  0F23                     	;# 
  1093  0F24                     	;# 
  1094  0F25                     	;# 
  1095  0F26                     	;# 
  1096  0F27                     	;# 
  1097  0F28                     	;# 
  1098  0F29                     	;# 
  1099  0F2A                     	;# 
  1100  0F2B                     	;# 
  1101  0F2C                     	;# 
  1102  0F2D                     	;# 
  1103  0F2E                     	;# 
  1104  0F2F                     	;# 
  1105  0F30                     	;# 
  1106  0F31                     	;# 
  1107  0F32                     	;# 
  1108  0F38                     	;# 
  1109  0F39                     	;# 
  1110  0F3A                     	;# 
  1111  0F3B                     	;# 
  1112  0F3C                     	;# 
  1113  0F3D                     	;# 
  1114  0F3E                     	;# 
  1115  0F3F                     	;# 
  1116  0F40                     	;# 
  1117  0F41                     	;# 
  1118  0F43                     	;# 
  1119  0F44                     	;# 
  1120  0F45                     	;# 
  1121  0F46                     	;# 
  1122  0F47                     	;# 
  1123  0F48                     	;# 
  1124  0F49                     	;# 
  1125  0F4A                     	;# 
  1126  0F4B                     	;# 
  1127  0F4C                     	;# 
  1128  0F4E                     	;# 
  1129  0F4F                     	;# 
  1130  0F50                     	;# 
  1131  0F51                     	;# 
  1132  0F52                     	;# 
  1133  0F53                     	;# 
  1134  0F54                     	;# 
  1135  0F55                     	;# 
  1136  0F56                     	;# 
  1137  0F57                     	;# 
  1138  0F59                     	;# 
  1139  0F5A                     	;# 
  1140  0F5B                     	;# 
  1141  0F5C                     	;# 
  1142  0F5D                     	;# 
  1143  0F61                     	;# 
  1144  0F62                     	;# 
  1145  0F64                     	;# 
  1146  0F65                     	;# 
  1147  0F66                     	;# 
  1148  0F67                     	;# 
  1149  0F68                     	;# 
  1150  0F69                     	;# 
  1151  0F6A                     	;# 
  1152  0F6B                     	;# 
  1153  0F6C                     	;# 
  1154  0F6D                     	;# 
  1155  0FE4                     	;# 
  1156  0FE5                     	;# 
  1157  0FE6                     	;# 
  1158  0FE7                     	;# 
  1159  0FE8                     	;# 
  1160  0FE9                     	;# 
  1161  0FEA                     	;# 
  1162  0FEB                     	;# 
  1163  0FED                     	;# 
  1164  0FEE                     	;# 
  1165  0FEF                     	;# 
  1166  0000                     	;# 
  1167  0001                     	;# 
  1168  0002                     	;# 
  1169  0003                     	;# 
  1170  0004                     	;# 
  1171  0005                     	;# 
  1172  0006                     	;# 
  1173  0007                     	;# 
  1174  0008                     	;# 
  1175  0009                     	;# 
  1176  000A                     	;# 
  1177  000B                     	;# 
  1178  000C                     	;# 
  1179  000D                     	;# 
  1180  000E                     	;# 
  1181  000F                     	;# 
  1182  0010                     	;# 
  1183  0011                     	;# 
  1184  0012                     	;# 
  1185  0013                     	;# 
  1186  0014                     	;# 
  1187  0015                     	;# 
  1188  0016                     	;# 
  1189  0017                     	;# 
  1190  0018                     	;# 
  1191  0019                     	;# 
  1192  001A                     	;# 
  1193  001C                     	;# 
  1194  001C                     	;# 
  1195  001D                     	;# 
  1196  001D                     	;# 
  1197  001E                     	;# 
  1198  001F                     	;# 
  1199  008C                     	;# 
  1200  008C                     	;# 
  1201  008D                     	;# 
  1202  008E                     	;# 
  1203  008E                     	;# 
  1204  008F                     	;# 
  1205  0090                     	;# 
  1206  0090                     	;# 
  1207  0091                     	;# 
  1208  0093                     	;# 
  1209  0094                     	;# 
  1210  0095                     	;# 
  1211  0096                     	;# 
  1212  0097                     	;# 
  1213  0098                     	;# 
  1214  0099                     	;# 
  1215  009A                     	;# 
  1216  009B                     	;# 
  1217  009C                     	;# 
  1218  009D                     	;# 
  1219  009E                     	;# 
  1220  010C                     	;# 
  1221  010D                     	;# 
  1222  010E                     	;# 
  1223  010E                     	;# 
  1224  010F                     	;# 
  1225  0110                     	;# 
  1226  0110                     	;# 
  1227  0111                     	;# 
  1228  0112                     	;# 
  1229  0112                     	;# 
  1230  0113                     	;# 
  1231  0114                     	;# 
  1232  0114                     	;# 
  1233  0115                     	;# 
  1234  0116                     	;# 
  1235  0116                     	;# 
  1236  0117                     	;# 
  1237  0119                     	;# 
  1238  0119                     	;# 
  1239  0119                     	;# 
  1240  011A                     	;# 
  1241  011A                     	;# 
  1242  011A                     	;# 
  1243  011B                     	;# 
  1244  011B                     	;# 
  1245  011B                     	;# 
  1246  011B                     	;# 
  1247  011B                     	;# 
  1248  011C                     	;# 
  1249  011C                     	;# 
  1250  011C                     	;# 
  1251  011D                     	;# 
  1252  011D                     	;# 
  1253  011D                     	;# 
  1254  011E                     	;# 
  1255  011E                     	;# 
  1256  011E                     	;# 
  1257  011F                     	;# 
  1258  011F                     	;# 
  1259  011F                     	;# 
  1260  011F                     	;# 
  1261  011F                     	;# 
  1262  018C                     	;# 
  1263  018D                     	;# 
  1264  018E                     	;# 
  1265  018F                     	;# 
  1266  0190                     	;# 
  1267  0191                     	;# 
  1268  0192                     	;# 
  1269  0196                     	;# 
  1270  0197                     	;# 
  1271  0198                     	;# 
  1272  0199                     	;# 
  1273  019A                     	;# 
  1274  019B                     	;# 
  1275  019C                     	;# 
  1276  020C                     	;# 
  1277  020C                     	;# 
  1278  020D                     	;# 
  1279  020E                     	;# 
  1280  020F                     	;# 
  1281  020F                     	;# 
  1282  0210                     	;# 
  1283  0210                     	;# 
  1284  0211                     	;# 
  1285  0211                     	;# 
  1286  0212                     	;# 
  1287  0212                     	;# 
  1288  0213                     	;# 
  1289  0214                     	;# 
  1290  0215                     	;# 
  1291  0215                     	;# 
  1292  0216                     	;# 
  1293  0216                     	;# 
  1294  0217                     	;# 
  1295  0217                     	;# 
  1296  0218                     	;# 
  1297  0218                     	;# 
  1298  0219                     	;# 
  1299  021A                     	;# 
  1300  021B                     	;# 
  1301  021B                     	;# 
  1302  021C                     	;# 
  1303  021C                     	;# 
  1304  021D                     	;# 
  1305  021D                     	;# 
  1306  021E                     	;# 
  1307  021F                     	;# 
  1308  028C                     	;# 
  1309  028C                     	;# 
  1310  028D                     	;# 
  1311  028D                     	;# 
  1312  028E                     	;# 
  1313  028F                     	;# 
  1314  0290                     	;# 
  1315  0290                     	;# 
  1316  0291                     	;# 
  1317  0292                     	;# 
  1318  0292                     	;# 
  1319  0293                     	;# 
  1320  0293                     	;# 
  1321  0294                     	;# 
  1322  0295                     	;# 
  1323  0296                     	;# 
  1324  0296                     	;# 
  1325  0297                     	;# 
  1326  0298                     	;# 
  1327  0298                     	;# 
  1328  0299                     	;# 
  1329  0299                     	;# 
  1330  029A                     	;# 
  1331  029B                     	;# 
  1332  029C                     	;# 
  1333  029C                     	;# 
  1334  029D                     	;# 
  1335  030C                     	;# 
  1336  030C                     	;# 
  1337  030D                     	;# 
  1338  030E                     	;# 
  1339  030F                     	;# 
  1340  0310                     	;# 
  1341  0310                     	;# 
  1342  0311                     	;# 
  1343  0312                     	;# 
  1344  0313                     	;# 
  1345  0314                     	;# 
  1346  0314                     	;# 
  1347  0315                     	;# 
  1348  0316                     	;# 
  1349  0317                     	;# 
  1350  0318                     	;# 
  1351  0318                     	;# 
  1352  0319                     	;# 
  1353  031A                     	;# 
  1354  031B                     	;# 
  1355  031C                     	;# 
  1356  031C                     	;# 
  1357  031D                     	;# 
  1358  031E                     	;# 
  1359  031F                     	;# 
  1360  038C                     	;# 
  1361  038C                     	;# 
  1362  038D                     	;# 
  1363  038E                     	;# 
  1364  0390                     	;# 
  1365  0390                     	;# 
  1366  0391                     	;# 
  1367  0392                     	;# 
  1368  040C                     	;# 
  1369  040D                     	;# 
  1370  040E                     	;# 
  1371  040F                     	;# 
  1372  0410                     	;# 
  1373  0411                     	;# 
  1374  0416                     	;# 
  1375  0416                     	;# 
  1376  0417                     	;# 
  1377  0418                     	;# 
  1378  0418                     	;# 
  1379  0419                     	;# 
  1380  041A                     	;# 
  1381  041A                     	;# 
  1382  041B                     	;# 
  1383  041C                     	;# 
  1384  041C                     	;# 
  1385  041D                     	;# 
  1386  041E                     	;# 
  1387  041F                     	;# 
  1388  048C                     	;# 
  1389  048C                     	;# 
  1390  048D                     	;# 
  1391  048E                     	;# 
  1392  048F                     	;# 
  1393  048F                     	;# 
  1394  0490                     	;# 
  1395  0491                     	;# 
  1396  0492                     	;# 
  1397  0492                     	;# 
  1398  0493                     	;# 
  1399  0494                     	;# 
  1400  0495                     	;# 
  1401  0495                     	;# 
  1402  0496                     	;# 
  1403  0497                     	;# 
  1404  0498                     	;# 
  1405  0499                     	;# 
  1406  049A                     	;# 
  1407  049B                     	;# 
  1408  049C                     	;# 
  1409  049D                     	;# 
  1410  050C                     	;# 
  1411  050C                     	;# 
  1412  050D                     	;# 
  1413  050E                     	;# 
  1414  050F                     	;# 
  1415  050F                     	;# 
  1416  0510                     	;# 
  1417  0511                     	;# 
  1418  0512                     	;# 
  1419  0512                     	;# 
  1420  0513                     	;# 
  1421  0514                     	;# 
  1422  0515                     	;# 
  1423  0515                     	;# 
  1424  0516                     	;# 
  1425  0517                     	;# 
  1426  0518                     	;# 
  1427  0519                     	;# 
  1428  051A                     	;# 
  1429  051B                     	;# 
  1430  051C                     	;# 
  1431  051D                     	;# 
  1432  058C                     	;# 
  1433  058C                     	;# 
  1434  058D                     	;# 
  1435  058E                     	;# 
  1436  058F                     	;# 
  1437  058F                     	;# 
  1438  0590                     	;# 
  1439  0591                     	;# 
  1440  0592                     	;# 
  1441  0593                     	;# 
  1442  060C                     	;# 
  1443  060D                     	;# 
  1444  060E                     	;# 
  1445  060F                     	;# 
  1446  0610                     	;# 
  1447  0611                     	;# 
  1448  0612                     	;# 
  1449  0613                     	;# 
  1450  0614                     	;# 
  1451  0616                     	;# 
  1452  0617                     	;# 
  1453  0618                     	;# 
  1454  0619                     	;# 
  1455  061A                     	;# 
  1456  061B                     	;# 
  1457  061C                     	;# 
  1458  061D                     	;# 
  1459  061E                     	;# 
  1460  068C                     	;# 
  1461  068D                     	;# 
  1462  068E                     	;# 
  1463  068F                     	;# 
  1464  0690                     	;# 
  1465  0691                     	;# 
  1466  0692                     	;# 
  1467  0693                     	;# 
  1468  0694                     	;# 
  1469  070C                     	;# 
  1470  070D                     	;# 
  1471  070E                     	;# 
  1472  070F                     	;# 
  1473  0710                     	;# 
  1474  0711                     	;# 
  1475  0712                     	;# 
  1476  0713                     	;# 
  1477  0714                     	;# 
  1478  0716                     	;# 
  1479  0717                     	;# 
  1480  0718                     	;# 
  1481  0719                     	;# 
  1482  071A                     	;# 
  1483  071B                     	;# 
  1484  071C                     	;# 
  1485  071D                     	;# 
  1486  071E                     	;# 
  1487  0796                     	;# 
  1488  0797                     	;# 
  1489  0798                     	;# 
  1490  0799                     	;# 
  1491  079A                     	;# 
  1492  079B                     	;# 
  1493  080C                     	;# 
  1494  080D                     	;# 
  1495  080E                     	;# 
  1496  080F                     	;# 
  1497  0810                     	;# 
  1498  0811                     	;# 
  1499  0812                     	;# 
  1500  0813                     	;# 
  1501  0814                     	;# 
  1502  081A                     	;# 
  1503  081B                     	;# 
  1504  081C                     	;# 
  1505  081D                     	;# 
  1506  081E                     	;# 
  1507  081F                     	;# 
  1508  088C                     	;# 
  1509  088D                     	;# 
  1510  088E                     	;# 
  1511  088F                     	;# 
  1512  0890                     	;# 
  1513  0891                     	;# 
  1514  0892                     	;# 
  1515  0893                     	;# 
  1516  0895                     	;# 
  1517  0896                     	;# 
  1518  0897                     	;# 
  1519  0898                     	;# 
  1520  0899                     	;# 
  1521  089A                     	;# 
  1522  089B                     	;# 
  1523  090C                     	;# 
  1524  090E                     	;# 
  1525  090F                     	;# 
  1526  091F                     	;# 
  1527  091F                     	;# 
  1528  098F                     	;# 
  1529  098F                     	;# 
  1530  0990                     	;# 
  1531  0991                     	;# 
  1532  0992                     	;# 
  1533  0993                     	;# 
  1534  0994                     	;# 
  1535  0995                     	;# 
  1536  0996                     	;# 
  1537  0997                     	;# 
  1538  0E0F                     	;# 
  1539  0E10                     	;# 
  1540  0E11                     	;# 
  1541  0E12                     	;# 
  1542  0E13                     	;# 
  1543  0E14                     	;# 
  1544  0E15                     	;# 
  1545  0E16                     	;# 
  1546  0E17                     	;# 
  1547  0E18                     	;# 
  1548  0E19                     	;# 
  1549  0E1A                     	;# 
  1550  0E1B                     	;# 
  1551  0E1C                     	;# 
  1552  0E1D                     	;# 
  1553  0E1E                     	;# 
  1554  0E1F                     	;# 
  1555  0E20                     	;# 
  1556  0E21                     	;# 
  1557  0E22                     	;# 
  1558  0E23                     	;# 
  1559  0E24                     	;# 
  1560  0E25                     	;# 
  1561  0E26                     	;# 
  1562  0E27                     	;# 
  1563  0E28                     	;# 
  1564  0E29                     	;# 
  1565  0E2A                     	;# 
  1566  0E2B                     	;# 
  1567  0E2C                     	;# 
  1568  0E2D                     	;# 
  1569  0E2E                     	;# 
  1570  0E2F                     	;# 
  1571  0E30                     	;# 
  1572  0E31                     	;# 
  1573  0E32                     	;# 
  1574  0E33                     	;# 
  1575  0E34                     	;# 
  1576  0E35                     	;# 
  1577  0E36                     	;# 
  1578  0E37                     	;# 
  1579  0E8F                     	;# 
  1580  0E90                     	;# 
  1581  0E91                     	;# 
  1582  0E92                     	;# 
  1583  0E93                     	;# 
  1584  0E94                     	;# 
  1585  0E95                     	;# 
  1586  0E96                     	;# 
  1587  0E97                     	;# 
  1588  0E9C                     	;# 
  1589  0E9D                     	;# 
  1590  0E9E                     	;# 
  1591  0EA1                     	;# 
  1592  0EA2                     	;# 
  1593  0EA3                     	;# 
  1594  0EA4                     	;# 
  1595  0EA5                     	;# 
  1596  0EA9                     	;# 
  1597  0EAA                     	;# 
  1598  0EAB                     	;# 
  1599  0EAC                     	;# 
  1600  0EB1                     	;# 
  1601  0EB2                     	;# 
  1602  0EB3                     	;# 
  1603  0EB8                     	;# 
  1604  0EB9                     	;# 
  1605  0EBA                     	;# 
  1606  0EBB                     	;# 
  1607  0EBC                     	;# 
  1608  0EBD                     	;# 
  1609  0EBE                     	;# 
  1610  0EC3                     	;# 
  1611  0EC5                     	;# 
  1612  0EC6                     	;# 
  1613  0EC7                     	;# 
  1614  0EC8                     	;# 
  1615  0EC9                     	;# 
  1616  0ECA                     	;# 
  1617  0ECB                     	;# 
  1618  0ECC                     	;# 
  1619  0F10                     	;# 
  1620  0F11                     	;# 
  1621  0F12                     	;# 
  1622  0F13                     	;# 
  1623  0F14                     	;# 
  1624  0F15                     	;# 
  1625  0F16                     	;# 
  1626  0F17                     	;# 
  1627  0F18                     	;# 
  1628  0F19                     	;# 
  1629  0F1A                     	;# 
  1630  0F1B                     	;# 
  1631  0F1C                     	;# 
  1632  0F1D                     	;# 
  1633  0F1E                     	;# 
  1634  0F1F                     	;# 
  1635  0F20                     	;# 
  1636  0F21                     	;# 
  1637  0F22                     	;# 
  1638  0F23                     	;# 
  1639  0F24                     	;# 
  1640  0F25                     	;# 
  1641  0F26                     	;# 
  1642  0F27                     	;# 
  1643  0F28                     	;# 
  1644  0F29                     	;# 
  1645  0F2A                     	;# 
  1646  0F2B                     	;# 
  1647  0F2C                     	;# 
  1648  0F2D                     	;# 
  1649  0F2E                     	;# 
  1650  0F2F                     	;# 
  1651  0F30                     	;# 
  1652  0F31                     	;# 
  1653  0F32                     	;# 
  1654  0F38                     	;# 
  1655  0F39                     	;# 
  1656  0F3A                     	;# 
  1657  0F3B                     	;# 
  1658  0F3C                     	;# 
  1659  0F3D                     	;# 
  1660  0F3E                     	;# 
  1661  0F3F                     	;# 
  1662  0F40                     	;# 
  1663  0F41                     	;# 
  1664  0F43                     	;# 
  1665  0F44                     	;# 
  1666  0F45                     	;# 
  1667  0F46                     	;# 
  1668  0F47                     	;# 
  1669  0F48                     	;# 
  1670  0F49                     	;# 
  1671  0F4A                     	;# 
  1672  0F4B                     	;# 
  1673  0F4C                     	;# 
  1674  0F4E                     	;# 
  1675  0F4F                     	;# 
  1676  0F50                     	;# 
  1677  0F51                     	;# 
  1678  0F52                     	;# 
  1679  0F53                     	;# 
  1680  0F54                     	;# 
  1681  0F55                     	;# 
  1682  0F56                     	;# 
  1683  0F57                     	;# 
  1684  0F59                     	;# 
  1685  0F5A                     	;# 
  1686  0F5B                     	;# 
  1687  0F5C                     	;# 
  1688  0F5D                     	;# 
  1689  0F61                     	;# 
  1690  0F62                     	;# 
  1691  0F64                     	;# 
  1692  0F65                     	;# 
  1693  0F66                     	;# 
  1694  0F67                     	;# 
  1695  0F68                     	;# 
  1696  0F69                     	;# 
  1697  0F6A                     	;# 
  1698  0F6B                     	;# 
  1699  0F6C                     	;# 
  1700  0F6D                     	;# 
  1701  0FE4                     	;# 
  1702  0FE5                     	;# 
  1703  0FE6                     	;# 
  1704  0FE7                     	;# 
  1705  0FE8                     	;# 
  1706  0FE9                     	;# 
  1707  0FEA                     	;# 
  1708  0FEB                     	;# 
  1709  0FED                     	;# 
  1710  0FEE                     	;# 
  1711  0FEF                     	;# 
  1712  0000                     	;# 
  1713  0001                     	;# 
  1714  0002                     	;# 
  1715  0003                     	;# 
  1716  0004                     	;# 
  1717  0005                     	;# 
  1718  0006                     	;# 
  1719  0007                     	;# 
  1720  0008                     	;# 
  1721  0009                     	;# 
  1722  000A                     	;# 
  1723  000B                     	;# 
  1724  000C                     	;# 
  1725  000D                     	;# 
  1726  000E                     	;# 
  1727  000F                     	;# 
  1728  0010                     	;# 
  1729  0011                     	;# 
  1730  0012                     	;# 
  1731  0013                     	;# 
  1732  0014                     	;# 
  1733  0015                     	;# 
  1734  0016                     	;# 
  1735  0017                     	;# 
  1736  0018                     	;# 
  1737  0019                     	;# 
  1738  001A                     	;# 
  1739  001C                     	;# 
  1740  001C                     	;# 
  1741  001D                     	;# 
  1742  001D                     	;# 
  1743  001E                     	;# 
  1744  001F                     	;# 
  1745  008C                     	;# 
  1746  008C                     	;# 
  1747  008D                     	;# 
  1748  008E                     	;# 
  1749  008E                     	;# 
  1750  008F                     	;# 
  1751  0090                     	;# 
  1752  0090                     	;# 
  1753  0091                     	;# 
  1754  0093                     	;# 
  1755  0094                     	;# 
  1756  0095                     	;# 
  1757  0096                     	;# 
  1758  0097                     	;# 
  1759  0098                     	;# 
  1760  0099                     	;# 
  1761  009A                     	;# 
  1762  009B                     	;# 
  1763  009C                     	;# 
  1764  009D                     	;# 
  1765  009E                     	;# 
  1766  010C                     	;# 
  1767  010D                     	;# 
  1768  010E                     	;# 
  1769  010E                     	;# 
  1770  010F                     	;# 
  1771  0110                     	;# 
  1772  0110                     	;# 
  1773  0111                     	;# 
  1774  0112                     	;# 
  1775  0112                     	;# 
  1776  0113                     	;# 
  1777  0114                     	;# 
  1778  0114                     	;# 
  1779  0115                     	;# 
  1780  0116                     	;# 
  1781  0116                     	;# 
  1782  0117                     	;# 
  1783  0119                     	;# 
  1784  0119                     	;# 
  1785  0119                     	;# 
  1786  011A                     	;# 
  1787  011A                     	;# 
  1788  011A                     	;# 
  1789  011B                     	;# 
  1790  011B                     	;# 
  1791  011B                     	;# 
  1792  011B                     	;# 
  1793  011B                     	;# 
  1794  011C                     	;# 
  1795  011C                     	;# 
  1796  011C                     	;# 
  1797  011D                     	;# 
  1798  011D                     	;# 
  1799  011D                     	;# 
  1800  011E                     	;# 
  1801  011E                     	;# 
  1802  011E                     	;# 
  1803  011F                     	;# 
  1804  011F                     	;# 
  1805  011F                     	;# 
  1806  011F                     	;# 
  1807  011F                     	;# 
  1808  018C                     	;# 
  1809  018D                     	;# 
  1810  018E                     	;# 
  1811  018F                     	;# 
  1812  0190                     	;# 
  1813  0191                     	;# 
  1814  0192                     	;# 
  1815  0196                     	;# 
  1816  0197                     	;# 
  1817  0198                     	;# 
  1818  0199                     	;# 
  1819  019A                     	;# 
  1820  019B                     	;# 
  1821  019C                     	;# 
  1822  020C                     	;# 
  1823  020C                     	;# 
  1824  020D                     	;# 
  1825  020E                     	;# 
  1826  020F                     	;# 
  1827  020F                     	;# 
  1828  0210                     	;# 
  1829  0210                     	;# 
  1830  0211                     	;# 
  1831  0211                     	;# 
  1832  0212                     	;# 
  1833  0212                     	;# 
  1834  0213                     	;# 
  1835  0214                     	;# 
  1836  0215                     	;# 
  1837  0215                     	;# 
  1838  0216                     	;# 
  1839  0216                     	;# 
  1840  0217                     	;# 
  1841  0217                     	;# 
  1842  0218                     	;# 
  1843  0218                     	;# 
  1844  0219                     	;# 
  1845  021A                     	;# 
  1846  021B                     	;# 
  1847  021B                     	;# 
  1848  021C                     	;# 
  1849  021C                     	;# 
  1850  021D                     	;# 
  1851  021D                     	;# 
  1852  021E                     	;# 
  1853  021F                     	;# 
  1854  028C                     	;# 
  1855  028C                     	;# 
  1856  028D                     	;# 
  1857  028D                     	;# 
  1858  028E                     	;# 
  1859  028F                     	;# 
  1860  0290                     	;# 
  1861  0290                     	;# 
  1862  0291                     	;# 
  1863  0292                     	;# 
  1864  0292                     	;# 
  1865  0293                     	;# 
  1866  0293                     	;# 
  1867  0294                     	;# 
  1868  0295                     	;# 
  1869  0296                     	;# 
  1870  0296                     	;# 
  1871  0297                     	;# 
  1872  0298                     	;# 
  1873  0298                     	;# 
  1874  0299                     	;# 
  1875  0299                     	;# 
  1876  029A                     	;# 
  1877  029B                     	;# 
  1878  029C                     	;# 
  1879  029C                     	;# 
  1880  029D                     	;# 
  1881  030C                     	;# 
  1882  030C                     	;# 
  1883  030D                     	;# 
  1884  030E                     	;# 
  1885  030F                     	;# 
  1886  0310                     	;# 
  1887  0310                     	;# 
  1888  0311                     	;# 
  1889  0312                     	;# 
  1890  0313                     	;# 
  1891  0314                     	;# 
  1892  0314                     	;# 
  1893  0315                     	;# 
  1894  0316                     	;# 
  1895  0317                     	;# 
  1896  0318                     	;# 
  1897  0318                     	;# 
  1898  0319                     	;# 
  1899  031A                     	;# 
  1900  031B                     	;# 
  1901  031C                     	;# 
  1902  031C                     	;# 
  1903  031D                     	;# 
  1904  031E                     	;# 
  1905  031F                     	;# 
  1906  038C                     	;# 
  1907  038C                     	;# 
  1908  038D                     	;# 
  1909  038E                     	;# 
  1910  0390                     	;# 
  1911  0390                     	;# 
  1912  0391                     	;# 
  1913  0392                     	;# 
  1914  040C                     	;# 
  1915  040D                     	;# 
  1916  040E                     	;# 
  1917  040F                     	;# 
  1918  0410                     	;# 
  1919  0411                     	;# 
  1920  0416                     	;# 
  1921  0416                     	;# 
  1922  0417                     	;# 
  1923  0418                     	;# 
  1924  0418                     	;# 
  1925  0419                     	;# 
  1926  041A                     	;# 
  1927  041A                     	;# 
  1928  041B                     	;# 
  1929  041C                     	;# 
  1930  041C                     	;# 
  1931  041D                     	;# 
  1932  041E                     	;# 
  1933  041F                     	;# 
  1934  048C                     	;# 
  1935  048C                     	;# 
  1936  048D                     	;# 
  1937  048E                     	;# 
  1938  048F                     	;# 
  1939  048F                     	;# 
  1940  0490                     	;# 
  1941  0491                     	;# 
  1942  0492                     	;# 
  1943  0492                     	;# 
  1944  0493                     	;# 
  1945  0494                     	;# 
  1946  0495                     	;# 
  1947  0495                     	;# 
  1948  0496                     	;# 
  1949  0497                     	;# 
  1950  0498                     	;# 
  1951  0499                     	;# 
  1952  049A                     	;# 
  1953  049B                     	;# 
  1954  049C                     	;# 
  1955  049D                     	;# 
  1956  050C                     	;# 
  1957  050C                     	;# 
  1958  050D                     	;# 
  1959  050E                     	;# 
  1960  050F                     	;# 
  1961  050F                     	;# 
  1962  0510                     	;# 
  1963  0511                     	;# 
  1964  0512                     	;# 
  1965  0512                     	;# 
  1966  0513                     	;# 
  1967  0514                     	;# 
  1968  0515                     	;# 
  1969  0515                     	;# 
  1970  0516                     	;# 
  1971  0517                     	;# 
  1972  0518                     	;# 
  1973  0519                     	;# 
  1974  051A                     	;# 
  1975  051B                     	;# 
  1976  051C                     	;# 
  1977  051D                     	;# 
  1978  058C                     	;# 
  1979  058C                     	;# 
  1980  058D                     	;# 
  1981  058E                     	;# 
  1982  058F                     	;# 
  1983  058F                     	;# 
  1984  0590                     	;# 
  1985  0591                     	;# 
  1986  0592                     	;# 
  1987  0593                     	;# 
  1988  060C                     	;# 
  1989  060D                     	;# 
  1990  060E                     	;# 
  1991  060F                     	;# 
  1992  0610                     	;# 
  1993  0611                     	;# 
  1994  0612                     	;# 
  1995  0613                     	;# 
  1996  0614                     	;# 
  1997  0616                     	;# 
  1998  0617                     	;# 
  1999  0618                     	;# 
  2000  0619                     	;# 
  2001  061A                     	;# 
  2002  061B                     	;# 
  2003  061C                     	;# 
  2004  061D                     	;# 
  2005  061E                     	;# 
  2006  068C                     	;# 
  2007  068D                     	;# 
  2008  068E                     	;# 
  2009  068F                     	;# 
  2010  0690                     	;# 
  2011  0691                     	;# 
  2012  0692                     	;# 
  2013  0693                     	;# 
  2014  0694                     	;# 
  2015  070C                     	;# 
  2016  070D                     	;# 
  2017  070E                     	;# 
  2018  070F                     	;# 
  2019  0710                     	;# 
  2020  0711                     	;# 
  2021  0712                     	;# 
  2022  0713                     	;# 
  2023  0714                     	;# 
  2024  0716                     	;# 
  2025  0717                     	;# 
  2026  0718                     	;# 
  2027  0719                     	;# 
  2028  071A                     	;# 
  2029  071B                     	;# 
  2030  071C                     	;# 
  2031  071D                     	;# 
  2032  071E                     	;# 
  2033  0796                     	;# 
  2034  0797                     	;# 
  2035  0798                     	;# 
  2036  0799                     	;# 
  2037  079A                     	;# 
  2038  079B                     	;# 
  2039  080C                     	;# 
  2040  080D                     	;# 
  2041  080E                     	;# 
  2042  080F                     	;# 
  2043  0810                     	;# 
  2044  0811                     	;# 
  2045  0812                     	;# 
  2046  0813                     	;# 
  2047  0814                     	;# 
  2048  081A                     	;# 
  2049  081B                     	;# 
  2050  081C                     	;# 
  2051  081D                     	;# 
  2052  081E                     	;# 
  2053  081F                     	;# 
  2054  088C                     	;# 
  2055  088D                     	;# 
  2056  088E                     	;# 
  2057  088F                     	;# 
  2058  0890                     	;# 
  2059  0891                     	;# 
  2060  0892                     	;# 
  2061  0893                     	;# 
  2062  0895                     	;# 
  2063  0896                     	;# 
  2064  0897                     	;# 
  2065  0898                     	;# 
  2066  0899                     	;# 
  2067  089A                     	;# 
  2068  089B                     	;# 
  2069  090C                     	;# 
  2070  090E                     	;# 
  2071  090F                     	;# 
  2072  091F                     	;# 
  2073  091F                     	;# 
  2074  098F                     	;# 
  2075  098F                     	;# 
  2076  0990                     	;# 
  2077  0991                     	;# 
  2078  0992                     	;# 
  2079  0993                     	;# 
  2080  0994                     	;# 
  2081  0995                     	;# 
  2082  0996                     	;# 
  2083  0997                     	;# 
  2084  0E0F                     	;# 
  2085  0E10                     	;# 
  2086  0E11                     	;# 
  2087  0E12                     	;# 
  2088  0E13                     	;# 
  2089  0E14                     	;# 
  2090  0E15                     	;# 
  2091  0E16                     	;# 
  2092  0E17                     	;# 
  2093  0E18                     	;# 
  2094  0E19                     	;# 
  2095  0E1A                     	;# 
  2096  0E1B                     	;# 
  2097  0E1C                     	;# 
  2098  0E1D                     	;# 
  2099  0E1E                     	;# 
  2100  0E1F                     	;# 
  2101  0E20                     	;# 
  2102  0E21                     	;# 
  2103  0E22                     	;# 
  2104  0E23                     	;# 
  2105  0E24                     	;# 
  2106  0E25                     	;# 
  2107  0E26                     	;# 
  2108  0E27                     	;# 
  2109  0E28                     	;# 
  2110  0E29                     	;# 
  2111  0E2A                     	;# 
  2112  0E2B                     	;# 
  2113  0E2C                     	;# 
  2114  0E2D                     	;# 
  2115  0E2E                     	;# 
  2116  0E2F                     	;# 
  2117  0E30                     	;# 
  2118  0E31                     	;# 
  2119  0E32                     	;# 
  2120  0E33                     	;# 
  2121  0E34                     	;# 
  2122  0E35                     	;# 
  2123  0E36                     	;# 
  2124  0E37                     	;# 
  2125  0E8F                     	;# 
  2126  0E90                     	;# 
  2127  0E91                     	;# 
  2128  0E92                     	;# 
  2129  0E93                     	;# 
  2130  0E94                     	;# 
  2131  0E95                     	;# 
  2132  0E96                     	;# 
  2133  0E97                     	;# 
  2134  0E9C                     	;# 
  2135  0E9D                     	;# 
  2136  0E9E                     	;# 
  2137  0EA1                     	;# 
  2138  0EA2                     	;# 
  2139  0EA3                     	;# 
  2140  0EA4                     	;# 
  2141  0EA5                     	;# 
  2142  0EA9                     	;# 
  2143  0EAA                     	;# 
  2144  0EAB                     	;# 
  2145  0EAC                     	;# 
  2146  0EB1                     	;# 
  2147  0EB2                     	;# 
  2148  0EB3                     	;# 
  2149  0EB8                     	;# 
  2150  0EB9                     	;# 
  2151  0EBA                     	;# 
  2152  0EBB                     	;# 
  2153  0EBC                     	;# 
  2154  0EBD                     	;# 
  2155  0EBE                     	;# 
  2156  0EC3                     	;# 
  2157  0EC5                     	;# 
  2158  0EC6                     	;# 
  2159  0EC7                     	;# 
  2160  0EC8                     	;# 
  2161  0EC9                     	;# 
  2162  0ECA                     	;# 
  2163  0ECB                     	;# 
  2164  0ECC                     	;# 
  2165  0F10                     	;# 
  2166  0F11                     	;# 
  2167  0F12                     	;# 
  2168  0F13                     	;# 
  2169  0F14                     	;# 
  2170  0F15                     	;# 
  2171  0F16                     	;# 
  2172  0F17                     	;# 
  2173  0F18                     	;# 
  2174  0F19                     	;# 
  2175  0F1A                     	;# 
  2176  0F1B                     	;# 
  2177  0F1C                     	;# 
  2178  0F1D                     	;# 
  2179  0F1E                     	;# 
  2180  0F1F                     	;# 
  2181  0F20                     	;# 
  2182  0F21                     	;# 
  2183  0F22                     	;# 
  2184  0F23                     	;# 
  2185  0F24                     	;# 
  2186  0F25                     	;# 
  2187  0F26                     	;# 
  2188  0F27                     	;# 
  2189  0F28                     	;# 
  2190  0F29                     	;# 
  2191  0F2A                     	;# 
  2192  0F2B                     	;# 
  2193  0F2C                     	;# 
  2194  0F2D                     	;# 
  2195  0F2E                     	;# 
  2196  0F2F                     	;# 
  2197  0F30                     	;# 
  2198  0F31                     	;# 
  2199  0F32                     	;# 
  2200  0F38                     	;# 
  2201  0F39                     	;# 
  2202  0F3A                     	;# 
  2203  0F3B                     	;# 
  2204  0F3C                     	;# 
  2205  0F3D                     	;# 
  2206  0F3E                     	;# 
  2207  0F3F                     	;# 
  2208  0F40                     	;# 
  2209  0F41                     	;# 
  2210  0F43                     	;# 
  2211  0F44                     	;# 
  2212  0F45                     	;# 
  2213  0F46                     	;# 
  2214  0F47                     	;# 
  2215  0F48                     	;# 
  2216  0F49                     	;# 
  2217  0F4A                     	;# 
  2218  0F4B                     	;# 
  2219  0F4C                     	;# 
  2220  0F4E                     	;# 
  2221  0F4F                     	;# 
  2222  0F50                     	;# 
  2223  0F51                     	;# 
  2224  0F52                     	;# 
  2225  0F53                     	;# 
  2226  0F54                     	;# 
  2227  0F55                     	;# 
  2228  0F56                     	;# 
  2229  0F57                     	;# 
  2230  0F59                     	;# 
  2231  0F5A                     	;# 
  2232  0F5B                     	;# 
  2233  0F5C                     	;# 
  2234  0F5D                     	;# 
  2235  0F61                     	;# 
  2236  0F62                     	;# 
  2237  0F64                     	;# 
  2238  0F65                     	;# 
  2239  0F66                     	;# 
  2240  0F67                     	;# 
  2241  0F68                     	;# 
  2242  0F69                     	;# 
  2243  0F6A                     	;# 
  2244  0F6B                     	;# 
  2245  0F6C                     	;# 
  2246  0F6D                     	;# 
  2247  0FE4                     	;# 
  2248  0FE5                     	;# 
  2249  0FE6                     	;# 
  2250  0FE7                     	;# 
  2251  0FE8                     	;# 
  2252  0FE9                     	;# 
  2253  0FEA                     	;# 
  2254  0FEB                     	;# 
  2255  0FED                     	;# 
  2256  0FEE                     	;# 
  2257  0FEF                     	;# 
  2258  0000                     	;# 
  2259  0001                     	;# 
  2260  0002                     	;# 
  2261  0003                     	;# 
  2262  0004                     	;# 
  2263  0005                     	;# 
  2264  0006                     	;# 
  2265  0007                     	;# 
  2266  0008                     	;# 
  2267  0009                     	;# 
  2268  000A                     	;# 
  2269  000B                     	;# 
  2270  000C                     	;# 
  2271  000D                     	;# 
  2272  000E                     	;# 
  2273  000F                     	;# 
  2274  0010                     	;# 
  2275  0011                     	;# 
  2276  0012                     	;# 
  2277  0013                     	;# 
  2278  0014                     	;# 
  2279  0015                     	;# 
  2280  0016                     	;# 
  2281  0017                     	;# 
  2282  0018                     	;# 
  2283  0019                     	;# 
  2284  001A                     	;# 
  2285  001C                     	;# 
  2286  001C                     	;# 
  2287  001D                     	;# 
  2288  001D                     	;# 
  2289  001E                     	;# 
  2290  001F                     	;# 
  2291  008C                     	;# 
  2292  008C                     	;# 
  2293  008D                     	;# 
  2294  008E                     	;# 
  2295  008E                     	;# 
  2296  008F                     	;# 
  2297  0090                     	;# 
  2298  0090                     	;# 
  2299  0091                     	;# 
  2300  0093                     	;# 
  2301  0094                     	;# 
  2302  0095                     	;# 
  2303  0096                     	;# 
  2304  0097                     	;# 
  2305  0098                     	;# 
  2306  0099                     	;# 
  2307  009A                     	;# 
  2308  009B                     	;# 
  2309  009C                     	;# 
  2310  009D                     	;# 
  2311  009E                     	;# 
  2312  010C                     	;# 
  2313  010D                     	;# 
  2314  010E                     	;# 
  2315  010E                     	;# 
  2316  010F                     	;# 
  2317  0110                     	;# 
  2318  0110                     	;# 
  2319  0111                     	;# 
  2320  0112                     	;# 
  2321  0112                     	;# 
  2322  0113                     	;# 
  2323  0114                     	;# 
  2324  0114                     	;# 
  2325  0115                     	;# 
  2326  0116                     	;# 
  2327  0116                     	;# 
  2328  0117                     	;# 
  2329  0119                     	;# 
  2330  0119                     	;# 
  2331  0119                     	;# 
  2332  011A                     	;# 
  2333  011A                     	;# 
  2334  011A                     	;# 
  2335  011B                     	;# 
  2336  011B                     	;# 
  2337  011B                     	;# 
  2338  011B                     	;# 
  2339  011B                     	;# 
  2340  011C                     	;# 
  2341  011C                     	;# 
  2342  011C                     	;# 
  2343  011D                     	;# 
  2344  011D                     	;# 
  2345  011D                     	;# 
  2346  011E                     	;# 
  2347  011E                     	;# 
  2348  011E                     	;# 
  2349  011F                     	;# 
  2350  011F                     	;# 
  2351  011F                     	;# 
  2352  011F                     	;# 
  2353  011F                     	;# 
  2354  018C                     	;# 
  2355  018D                     	;# 
  2356  018E                     	;# 
  2357  018F                     	;# 
  2358  0190                     	;# 
  2359  0191                     	;# 
  2360  0192                     	;# 
  2361  0196                     	;# 
  2362  0197                     	;# 
  2363  0198                     	;# 
  2364  0199                     	;# 
  2365  019A                     	;# 
  2366  019B                     	;# 
  2367  019C                     	;# 
  2368  020C                     	;# 
  2369  020C                     	;# 
  2370  020D                     	;# 
  2371  020E                     	;# 
  2372  020F                     	;# 
  2373  020F                     	;# 
  2374  0210                     	;# 
  2375  0210                     	;# 
  2376  0211                     	;# 
  2377  0211                     	;# 
  2378  0212                     	;# 
  2379  0212                     	;# 
  2380  0213                     	;# 
  2381  0214                     	;# 
  2382  0215                     	;# 
  2383  0215                     	;# 
  2384  0216                     	;# 
  2385  0216                     	;# 
  2386  0217                     	;# 
  2387  0217                     	;# 
  2388  0218                     	;# 
  2389  0218                     	;# 
  2390  0219                     	;# 
  2391  021A                     	;# 
  2392  021B                     	;# 
  2393  021B                     	;# 
  2394  021C                     	;# 
  2395  021C                     	;# 
  2396  021D                     	;# 
  2397  021D                     	;# 
  2398  021E                     	;# 
  2399  021F                     	;# 
  2400  028C                     	;# 
  2401  028C                     	;# 
  2402  028D                     	;# 
  2403  028D                     	;# 
  2404  028E                     	;# 
  2405  028F                     	;# 
  2406  0290                     	;# 
  2407  0290                     	;# 
  2408  0291                     	;# 
  2409  0292                     	;# 
  2410  0292                     	;# 
  2411  0293                     	;# 
  2412  0293                     	;# 
  2413  0294                     	;# 
  2414  0295                     	;# 
  2415  0296                     	;# 
  2416  0296                     	;# 
  2417  0297                     	;# 
  2418  0298                     	;# 
  2419  0298                     	;# 
  2420  0299                     	;# 
  2421  0299                     	;# 
  2422  029A                     	;# 
  2423  029B                     	;# 
  2424  029C                     	;# 
  2425  029C                     	;# 
  2426  029D                     	;# 
  2427  030C                     	;# 
  2428  030C                     	;# 
  2429  030D                     	;# 
  2430  030E                     	;# 
  2431  030F                     	;# 
  2432  0310                     	;# 
  2433  0310                     	;# 
  2434  0311                     	;# 
  2435  0312                     	;# 
  2436  0313                     	;# 
  2437  0314                     	;# 
  2438  0314                     	;# 
  2439  0315                     	;# 
  2440  0316                     	;# 
  2441  0317                     	;# 
  2442  0318                     	;# 
  2443  0318                     	;# 
  2444  0319                     	;# 
  2445  031A                     	;# 
  2446  031B                     	;# 
  2447  031C                     	;# 
  2448  031C                     	;# 
  2449  031D                     	;# 
  2450  031E                     	;# 
  2451  031F                     	;# 
  2452  038C                     	;# 
  2453  038C                     	;# 
  2454  038D                     	;# 
  2455  038E                     	;# 
  2456  0390                     	;# 
  2457  0390                     	;# 
  2458  0391                     	;# 
  2459  0392                     	;# 
  2460  040C                     	;# 
  2461  040D                     	;# 
  2462  040E                     	;# 
  2463  040F                     	;# 
  2464  0410                     	;# 
  2465  0411                     	;# 
  2466  0416                     	;# 
  2467  0416                     	;# 
  2468  0417                     	;# 
  2469  0418                     	;# 
  2470  0418                     	;# 
  2471  0419                     	;# 
  2472  041A                     	;# 
  2473  041A                     	;# 
  2474  041B                     	;# 
  2475  041C                     	;# 
  2476  041C                     	;# 
  2477  041D                     	;# 
  2478  041E                     	;# 
  2479  041F                     	;# 
  2480  048C                     	;# 
  2481  048C                     	;# 
  2482  048D                     	;# 
  2483  048E                     	;# 
  2484  048F                     	;# 
  2485  048F                     	;# 
  2486  0490                     	;# 
  2487  0491                     	;# 
  2488  0492                     	;# 
  2489  0492                     	;# 
  2490  0493                     	;# 
  2491  0494                     	;# 
  2492  0495                     	;# 
  2493  0495                     	;# 
  2494  0496                     	;# 
  2495  0497                     	;# 
  2496  0498                     	;# 
  2497  0499                     	;# 
  2498  049A                     	;# 
  2499  049B                     	;# 
  2500  049C                     	;# 
  2501  049D                     	;# 
  2502  050C                     	;# 
  2503  050C                     	;# 
  2504  050D                     	;# 
  2505  050E                     	;# 
  2506  050F                     	;# 
  2507  050F                     	;# 
  2508  0510                     	;# 
  2509  0511                     	;# 
  2510  0512                     	;# 
  2511  0512                     	;# 
  2512  0513                     	;# 
  2513  0514                     	;# 
  2514  0515                     	;# 
  2515  0515                     	;# 
  2516  0516                     	;# 
  2517  0517                     	;# 
  2518  0518                     	;# 
  2519  0519                     	;# 
  2520  051A                     	;# 
  2521  051B                     	;# 
  2522  051C                     	;# 
  2523  051D                     	;# 
  2524  058C                     	;# 
  2525  058C                     	;# 
  2526  058D                     	;# 
  2527  058E                     	;# 
  2528  058F                     	;# 
  2529  058F                     	;# 
  2530  0590                     	;# 
  2531  0591                     	;# 
  2532  0592                     	;# 
  2533  0593                     	;# 
  2534  060C                     	;# 
  2535  060D                     	;# 
  2536  060E                     	;# 
  2537  060F                     	;# 
  2538  0610                     	;# 
  2539  0611                     	;# 
  2540  0612                     	;# 
  2541  0613                     	;# 
  2542  0614                     	;# 
  2543  0616                     	;# 
  2544  0617                     	;# 
  2545  0618                     	;# 
  2546  0619                     	;# 
  2547  061A                     	;# 
  2548  061B                     	;# 
  2549  061C                     	;# 
  2550  061D                     	;# 
  2551  061E                     	;# 
  2552  068C                     	;# 
  2553  068D                     	;# 
  2554  068E                     	;# 
  2555  068F                     	;# 
  2556  0690                     	;# 
  2557  0691                     	;# 
  2558  0692                     	;# 
  2559  0693                     	;# 
  2560  0694                     	;# 
  2561  070C                     	;# 
  2562  070D                     	;# 
  2563  070E                     	;# 
  2564  070F                     	;# 
  2565  0710                     	;# 
  2566  0711                     	;# 
  2567  0712                     	;# 
  2568  0713                     	;# 
  2569  0714                     	;# 
  2570  0716                     	;# 
  2571  0717                     	;# 
  2572  0718                     	;# 
  2573  0719                     	;# 
  2574  071A                     	;# 
  2575  071B                     	;# 
  2576  071C                     	;# 
  2577  071D                     	;# 
  2578  071E                     	;# 
  2579  0796                     	;# 
  2580  0797                     	;# 
  2581  0798                     	;# 
  2582  0799                     	;# 
  2583  079A                     	;# 
  2584  079B                     	;# 
  2585  080C                     	;# 
  2586  080D                     	;# 
  2587  080E                     	;# 
  2588  080F                     	;# 
  2589  0810                     	;# 
  2590  0811                     	;# 
  2591  0812                     	;# 
  2592  0813                     	;# 
  2593  0814                     	;# 
  2594  081A                     	;# 
  2595  081B                     	;# 
  2596  081C                     	;# 
  2597  081D                     	;# 
  2598  081E                     	;# 
  2599  081F                     	;# 
  2600  088C                     	;# 
  2601  088D                     	;# 
  2602  088E                     	;# 
  2603  088F                     	;# 
  2604  0890                     	;# 
  2605  0891                     	;# 
  2606  0892                     	;# 
  2607  0893                     	;# 
  2608  0895                     	;# 
  2609  0896                     	;# 
  2610  0897                     	;# 
  2611  0898                     	;# 
  2612  0899                     	;# 
  2613  089A                     	;# 
  2614  089B                     	;# 
  2615  090C                     	;# 
  2616  090E                     	;# 
  2617  090F                     	;# 
  2618  091F                     	;# 
  2619  091F                     	;# 
  2620  098F                     	;# 
  2621  098F                     	;# 
  2622  0990                     	;# 
  2623  0991                     	;# 
  2624  0992                     	;# 
  2625  0993                     	;# 
  2626  0994                     	;# 
  2627  0995                     	;# 
  2628  0996                     	;# 
  2629  0997                     	;# 
  2630  0E0F                     	;# 
  2631  0E10                     	;# 
  2632  0E11                     	;# 
  2633  0E12                     	;# 
  2634  0E13                     	;# 
  2635  0E14                     	;# 
  2636  0E15                     	;# 
  2637  0E16                     	;# 
  2638  0E17                     	;# 
  2639  0E18                     	;# 
  2640  0E19                     	;# 
  2641  0E1A                     	;# 
  2642  0E1B                     	;# 
  2643  0E1C                     	;# 
  2644  0E1D                     	;# 
  2645  0E1E                     	;# 
  2646  0E1F                     	;# 
  2647  0E20                     	;# 
  2648  0E21                     	;# 
  2649  0E22                     	;# 
  2650  0E23                     	;# 
  2651  0E24                     	;# 
  2652  0E25                     	;# 
  2653  0E26                     	;# 
  2654  0E27                     	;# 
  2655  0E28                     	;# 
  2656  0E29                     	;# 
  2657  0E2A                     	;# 
  2658  0E2B                     	;# 
  2659  0E2C                     	;# 
  2660  0E2D                     	;# 
  2661  0E2E                     	;# 
  2662  0E2F                     	;# 
  2663  0E30                     	;# 
  2664  0E31                     	;# 
  2665  0E32                     	;# 
  2666  0E33                     	;# 
  2667  0E34                     	;# 
  2668  0E35                     	;# 
  2669  0E36                     	;# 
  2670  0E37                     	;# 
  2671  0E8F                     	;# 
  2672  0E90                     	;# 
  2673  0E91                     	;# 
  2674  0E92                     	;# 
  2675  0E93                     	;# 
  2676  0E94                     	;# 
  2677  0E95                     	;# 
  2678  0E96                     	;# 
  2679  0E97                     	;# 
  2680  0E9C                     	;# 
  2681  0E9D                     	;# 
  2682  0E9E                     	;# 
  2683  0EA1                     	;# 
  2684  0EA2                     	;# 
  2685  0EA3                     	;# 
  2686  0EA4                     	;# 
  2687  0EA5                     	;# 
  2688  0EA9                     	;# 
  2689  0EAA                     	;# 
  2690  0EAB                     	;# 
  2691  0EAC                     	;# 
  2692  0EB1                     	;# 
  2693  0EB2                     	;# 
  2694  0EB3                     	;# 
  2695  0EB8                     	;# 
  2696  0EB9                     	;# 
  2697  0EBA                     	;# 
  2698  0EBB                     	;# 
  2699  0EBC                     	;# 
  2700  0EBD                     	;# 
  2701  0EBE                     	;# 
  2702  0EC3                     	;# 
  2703  0EC5                     	;# 
  2704  0EC6                     	;# 
  2705  0EC7                     	;# 
  2706  0EC8                     	;# 
  2707  0EC9                     	;# 
  2708  0ECA                     	;# 
  2709  0ECB                     	;# 
  2710  0ECC                     	;# 
  2711  0F10                     	;# 
  2712  0F11                     	;# 
  2713  0F12                     	;# 
  2714  0F13                     	;# 
  2715  0F14                     	;# 
  2716  0F15                     	;# 
  2717  0F16                     	;# 
  2718  0F17                     	;# 
  2719  0F18                     	;# 
  2720  0F19                     	;# 
  2721  0F1A                     	;# 
  2722  0F1B                     	;# 
  2723  0F1C                     	;# 
  2724  0F1D                     	;# 
  2725  0F1E                     	;# 
  2726  0F1F                     	;# 
  2727  0F20                     	;# 
  2728  0F21                     	;# 
  2729  0F22                     	;# 
  2730  0F23                     	;# 
  2731  0F24                     	;# 
  2732  0F25                     	;# 
  2733  0F26                     	;# 
  2734  0F27                     	;# 
  2735  0F28                     	;# 
  2736  0F29                     	;# 
  2737  0F2A                     	;# 
  2738  0F2B                     	;# 
  2739  0F2C                     	;# 
  2740  0F2D                     	;# 
  2741  0F2E                     	;# 
  2742  0F2F                     	;# 
  2743  0F30                     	;# 
  2744  0F31                     	;# 
  2745  0F32                     	;# 
  2746  0F38                     	;# 
  2747  0F39                     	;# 
  2748  0F3A                     	;# 
  2749  0F3B                     	;# 
  2750  0F3C                     	;# 
  2751  0F3D                     	;# 
  2752  0F3E                     	;# 
  2753  0F3F                     	;# 
  2754  0F40                     	;# 
  2755  0F41                     	;# 
  2756  0F43                     	;# 
  2757  0F44                     	;# 
  2758  0F45                     	;# 
  2759  0F46                     	;# 
  2760  0F47                     	;# 
  2761  0F48                     	;# 
  2762  0F49                     	;# 
  2763  0F4A                     	;# 
  2764  0F4B                     	;# 
  2765  0F4C                     	;# 
  2766  0F4E                     	;# 
  2767  0F4F                     	;# 
  2768  0F50                     	;# 
  2769  0F51                     	;# 
  2770  0F52                     	;# 
  2771  0F53                     	;# 
  2772  0F54                     	;# 
  2773  0F55                     	;# 
  2774  0F56                     	;# 
  2775  0F57                     	;# 
  2776  0F59                     	;# 
  2777  0F5A                     	;# 
  2778  0F5B                     	;# 
  2779  0F5C                     	;# 
  2780  0F5D                     	;# 
  2781  0F61                     	;# 
  2782  0F62                     	;# 
  2783  0F64                     	;# 
  2784  0F65                     	;# 
  2785  0F66                     	;# 
  2786  0F67                     	;# 
  2787  0F68                     	;# 
  2788  0F69                     	;# 
  2789  0F6A                     	;# 
  2790  0F6B                     	;# 
  2791  0F6C                     	;# 
  2792  0F6D                     	;# 
  2793  0FE4                     	;# 
  2794  0FE5                     	;# 
  2795  0FE6                     	;# 
  2796  0FE7                     	;# 
  2797  0FE8                     	;# 
  2798  0FE9                     	;# 
  2799  0FEA                     	;# 
  2800  0FEB                     	;# 
  2801  0FED                     	;# 
  2802  0FEE                     	;# 
  2803  0FEF                     	;# 
  2804  0000                     	;# 
  2805  0001                     	;# 
  2806  0002                     	;# 
  2807  0003                     	;# 
  2808  0004                     	;# 
  2809  0005                     	;# 
  2810  0006                     	;# 
  2811  0007                     	;# 
  2812  0008                     	;# 
  2813  0009                     	;# 
  2814  000A                     	;# 
  2815  000B                     	;# 
  2816  000C                     	;# 
  2817  000D                     	;# 
  2818  000E                     	;# 
  2819  000F                     	;# 
  2820  0010                     	;# 
  2821  0011                     	;# 
  2822  0012                     	;# 
  2823  0013                     	;# 
  2824  0014                     	;# 
  2825  0015                     	;# 
  2826  0016                     	;# 
  2827  0017                     	;# 
  2828  0018                     	;# 
  2829  0019                     	;# 
  2830  001A                     	;# 
  2831  001C                     	;# 
  2832  001C                     	;# 
  2833  001D                     	;# 
  2834  001D                     	;# 
  2835  001E                     	;# 
  2836  001F                     	;# 
  2837  008C                     	;# 
  2838  008C                     	;# 
  2839  008D                     	;# 
  2840  008E                     	;# 
  2841  008E                     	;# 
  2842  008F                     	;# 
  2843  0090                     	;# 
  2844  0090                     	;# 
  2845  0091                     	;# 
  2846  0093                     	;# 
  2847  0094                     	;# 
  2848  0095                     	;# 
  2849  0096                     	;# 
  2850  0097                     	;# 
  2851  0098                     	;# 
  2852  0099                     	;# 
  2853  009A                     	;# 
  2854  009B                     	;# 
  2855  009C                     	;# 
  2856  009D                     	;# 
  2857  009E                     	;# 
  2858  010C                     	;# 
  2859  010D                     	;# 
  2860  010E                     	;# 
  2861  010E                     	;# 
  2862  010F                     	;# 
  2863  0110                     	;# 
  2864  0110                     	;# 
  2865  0111                     	;# 
  2866  0112                     	;# 
  2867  0112                     	;# 
  2868  0113                     	;# 
  2869  0114                     	;# 
  2870  0114                     	;# 
  2871  0115                     	;# 
  2872  0116                     	;# 
  2873  0116                     	;# 
  2874  0117                     	;# 
  2875  0119                     	;# 
  2876  0119                     	;# 
  2877  0119                     	;# 
  2878  011A                     	;# 
  2879  011A                     	;# 
  2880  011A                     	;# 
  2881  011B                     	;# 
  2882  011B                     	;# 
  2883  011B                     	;# 
  2884  011B                     	;# 
  2885  011B                     	;# 
  2886  011C                     	;# 
  2887  011C                     	;# 
  2888  011C                     	;# 
  2889  011D                     	;# 
  2890  011D                     	;# 
  2891  011D                     	;# 
  2892  011E                     	;# 
  2893  011E                     	;# 
  2894  011E                     	;# 
  2895  011F                     	;# 
  2896  011F                     	;# 
  2897  011F                     	;# 
  2898  011F                     	;# 
  2899  011F                     	;# 
  2900  018C                     	;# 
  2901  018D                     	;# 
  2902  018E                     	;# 
  2903  018F                     	;# 
  2904  0190                     	;# 
  2905  0191                     	;# 
  2906  0192                     	;# 
  2907  0196                     	;# 
  2908  0197                     	;# 
  2909  0198                     	;# 
  2910  0199                     	;# 
  2911  019A                     	;# 
  2912  019B                     	;# 
  2913  019C                     	;# 
  2914  020C                     	;# 
  2915  020C                     	;# 
  2916  020D                     	;# 
  2917  020E                     	;# 
  2918  020F                     	;# 
  2919  020F                     	;# 
  2920  0210                     	;# 
  2921  0210                     	;# 
  2922  0211                     	;# 
  2923  0211                     	;# 
  2924  0212                     	;# 
  2925  0212                     	;# 
  2926  0213                     	;# 
  2927  0214                     	;# 
  2928  0215                     	;# 
  2929  0215                     	;# 
  2930  0216                     	;# 
  2931  0216                     	;# 
  2932  0217                     	;# 
  2933  0217                     	;# 
  2934  0218                     	;# 
  2935  0218                     	;# 
  2936  0219                     	;# 
  2937  021A                     	;# 
  2938  021B                     	;# 
  2939  021B                     	;# 
  2940  021C                     	;# 
  2941  021C                     	;# 
  2942  021D                     	;# 
  2943  021D                     	;# 
  2944  021E                     	;# 
  2945  021F                     	;# 
  2946  028C                     	;# 
  2947  028C                     	;# 
  2948  028D                     	;# 
  2949  028D                     	;# 
  2950  028E                     	;# 
  2951  028F                     	;# 
  2952  0290                     	;# 
  2953  0290                     	;# 
  2954  0291                     	;# 
  2955  0292                     	;# 
  2956  0292                     	;# 
  2957  0293                     	;# 
  2958  0293                     	;# 
  2959  0294                     	;# 
  2960  0295                     	;# 
  2961  0296                     	;# 
  2962  0296                     	;# 
  2963  0297                     	;# 
  2964  0298                     	;# 
  2965  0298                     	;# 
  2966  0299                     	;# 
  2967  0299                     	;# 
  2968  029A                     	;# 
  2969  029B                     	;# 
  2970  029C                     	;# 
  2971  029C                     	;# 
  2972  029D                     	;# 
  2973  030C                     	;# 
  2974  030C                     	;# 
  2975  030D                     	;# 
  2976  030E                     	;# 
  2977  030F                     	;# 
  2978  0310                     	;# 
  2979  0310                     	;# 
  2980  0311                     	;# 
  2981  0312                     	;# 
  2982  0313                     	;# 
  2983  0314                     	;# 
  2984  0314                     	;# 
  2985  0315                     	;# 
  2986  0316                     	;# 
  2987  0317                     	;# 
  2988  0318                     	;# 
  2989  0318                     	;# 
  2990  0319                     	;# 
  2991  031A                     	;# 
  2992  031B                     	;# 
  2993  031C                     	;# 
  2994  031C                     	;# 
  2995  031D                     	;# 
  2996  031E                     	;# 
  2997  031F                     	;# 
  2998  038C                     	;# 
  2999  038C                     	;# 
  3000  038D                     	;# 
  3001  038E                     	;# 
  3002  0390                     	;# 
  3003  0390                     	;# 
  3004  0391                     	;# 
  3005  0392                     	;# 
  3006  040C                     	;# 
  3007  040D                     	;# 
  3008  040E                     	;# 
  3009  040F                     	;# 
  3010  0410                     	;# 
  3011  0411                     	;# 
  3012  0416                     	;# 
  3013  0416                     	;# 
  3014  0417                     	;# 
  3015  0418                     	;# 
  3016  0418                     	;# 
  3017  0419                     	;# 
  3018  041A                     	;# 
  3019  041A                     	;# 
  3020  041B                     	;# 
  3021  041C                     	;# 
  3022  041C                     	;# 
  3023  041D                     	;# 
  3024  041E                     	;# 
  3025  041F                     	;# 
  3026  048C                     	;# 
  3027  048C                     	;# 
  3028  048D                     	;# 
  3029  048E                     	;# 
  3030  048F                     	;# 
  3031  048F                     	;# 
  3032  0490                     	;# 
  3033  0491                     	;# 
  3034  0492                     	;# 
  3035  0492                     	;# 
  3036  0493                     	;# 
  3037  0494                     	;# 
  3038  0495                     	;# 
  3039  0495                     	;# 
  3040  0496                     	;# 
  3041  0497                     	;# 
  3042  0498                     	;# 
  3043  0499                     	;# 
  3044  049A                     	;# 
  3045  049B                     	;# 
  3046  049C                     	;# 
  3047  049D                     	;# 
  3048  050C                     	;# 
  3049  050C                     	;# 
  3050  050D                     	;# 
  3051  050E                     	;# 
  3052  050F                     	;# 
  3053  050F                     	;# 
  3054  0510                     	;# 
  3055  0511                     	;# 
  3056  0512                     	;# 
  3057  0512                     	;# 
  3058  0513                     	;# 
  3059  0514                     	;# 
  3060  0515                     	;# 
  3061  0515                     	;# 
  3062  0516                     	;# 
  3063  0517                     	;# 
  3064  0518                     	;# 
  3065  0519                     	;# 
  3066  051A                     	;# 
  3067  051B                     	;# 
  3068  051C                     	;# 
  3069  051D                     	;# 
  3070  058C                     	;# 
  3071  058C                     	;# 
  3072  058D                     	;# 
  3073  058E                     	;# 
  3074  058F                     	;# 
  3075  058F                     	;# 
  3076  0590                     	;# 
  3077  0591                     	;# 
  3078  0592                     	;# 
  3079  0593                     	;# 
  3080  060C                     	;# 
  3081  060D                     	;# 
  3082  060E                     	;# 
  3083  060F                     	;# 
  3084  0610                     	;# 
  3085  0611                     	;# 
  3086  0612                     	;# 
  3087  0613                     	;# 
  3088  0614                     	;# 
  3089  0616                     	;# 
  3090  0617                     	;# 
  3091  0618                     	;# 
  3092  0619                     	;# 
  3093  061A                     	;# 
  3094  061B                     	;# 
  3095  061C                     	;# 
  3096  061D                     	;# 
  3097  061E                     	;# 
  3098  068C                     	;# 
  3099  068D                     	;# 
  3100  068E                     	;# 
  3101  068F                     	;# 
  3102  0690                     	;# 
  3103  0691                     	;# 
  3104  0692                     	;# 
  3105  0693                     	;# 
  3106  0694                     	;# 
  3107  070C                     	;# 
  3108  070D                     	;# 
  3109  070E                     	;# 
  3110  070F                     	;# 
  3111  0710                     	;# 
  3112  0711                     	;# 
  3113  0712                     	;# 
  3114  0713                     	;# 
  3115  0714                     	;# 
  3116  0716                     	;# 
  3117  0717                     	;# 
  3118  0718                     	;# 
  3119  0719                     	;# 
  3120  071A                     	;# 
  3121  071B                     	;# 
  3122  071C                     	;# 
  3123  071D                     	;# 
  3124  071E                     	;# 
  3125  0796                     	;# 
  3126  0797                     	;# 
  3127  0798                     	;# 
  3128  0799                     	;# 
  3129  079A                     	;# 
  3130  079B                     	;# 
  3131  080C                     	;# 
  3132  080D                     	;# 
  3133  080E                     	;# 
  3134  080F                     	;# 
  3135  0810                     	;# 
  3136  0811                     	;# 
  3137  0812                     	;# 
  3138  0813                     	;# 
  3139  0814                     	;# 
  3140  081A                     	;# 
  3141  081B                     	;# 
  3142  081C                     	;# 
  3143  081D                     	;# 
  3144  081E                     	;# 
  3145  081F                     	;# 
  3146  088C                     	;# 
  3147  088D                     	;# 
  3148  088E                     	;# 
  3149  088F                     	;# 
  3150  0890                     	;# 
  3151  0891                     	;# 
  3152  0892                     	;# 
  3153  0893                     	;# 
  3154  0895                     	;# 
  3155  0896                     	;# 
  3156  0897                     	;# 
  3157  0898                     	;# 
  3158  0899                     	;# 
  3159  089A                     	;# 
  3160  089B                     	;# 
  3161  090C                     	;# 
  3162  090E                     	;# 
  3163  090F                     	;# 
  3164  091F                     	;# 
  3165  091F                     	;# 
  3166  098F                     	;# 
  3167  098F                     	;# 
  3168  0990                     	;# 
  3169  0991                     	;# 
  3170  0992                     	;# 
  3171  0993                     	;# 
  3172  0994                     	;# 
  3173  0995                     	;# 
  3174  0996                     	;# 
  3175  0997                     	;# 
  3176  0E0F                     	;# 
  3177  0E10                     	;# 
  3178  0E11                     	;# 
  3179  0E12                     	;# 
  3180  0E13                     	;# 
  3181  0E14                     	;# 
  3182  0E15                     	;# 
  3183  0E16                     	;# 
  3184  0E17                     	;# 
  3185  0E18                     	;# 
  3186  0E19                     	;# 
  3187  0E1A                     	;# 
  3188  0E1B                     	;# 
  3189  0E1C                     	;# 
  3190  0E1D                     	;# 
  3191  0E1E                     	;# 
  3192  0E1F                     	;# 
  3193  0E20                     	;# 
  3194  0E21                     	;# 
  3195  0E22                     	;# 
  3196  0E23                     	;# 
  3197  0E24                     	;# 
  3198  0E25                     	;# 
  3199  0E26                     	;# 
  3200  0E27                     	;# 
  3201  0E28                     	;# 
  3202  0E29                     	;# 
  3203  0E2A                     	;# 
  3204  0E2B                     	;# 
  3205  0E2C                     	;# 
  3206  0E2D                     	;# 
  3207  0E2E                     	;# 
  3208  0E2F                     	;# 
  3209  0E30                     	;# 
  3210  0E31                     	;# 
  3211  0E32                     	;# 
  3212  0E33                     	;# 
  3213  0E34                     	;# 
  3214  0E35                     	;# 
  3215  0E36                     	;# 
  3216  0E37                     	;# 
  3217  0E8F                     	;# 
  3218  0E90                     	;# 
  3219  0E91                     	;# 
  3220  0E92                     	;# 
  3221  0E93                     	;# 
  3222  0E94                     	;# 
  3223  0E95                     	;# 
  3224  0E96                     	;# 
  3225  0E97                     	;# 
  3226  0E9C                     	;# 
  3227  0E9D                     	;# 
  3228  0E9E                     	;# 
  3229  0EA1                     	;# 
  3230  0EA2                     	;# 
  3231  0EA3                     	;# 
  3232  0EA4                     	;# 
  3233  0EA5                     	;# 
  3234  0EA9                     	;# 
  3235  0EAA                     	;# 
  3236  0EAB                     	;# 
  3237  0EAC                     	;# 
  3238  0EB1                     	;# 
  3239  0EB2                     	;# 
  3240  0EB3                     	;# 
  3241  0EB8                     	;# 
  3242  0EB9                     	;# 
  3243  0EBA                     	;# 
  3244  0EBB                     	;# 
  3245  0EBC                     	;# 
  3246  0EBD                     	;# 
  3247  0EBE                     	;# 
  3248  0EC3                     	;# 
  3249  0EC5                     	;# 
  3250  0EC6                     	;# 
  3251  0EC7                     	;# 
  3252  0EC8                     	;# 
  3253  0EC9                     	;# 
  3254  0ECA                     	;# 
  3255  0ECB                     	;# 
  3256  0ECC                     	;# 
  3257  0F10                     	;# 
  3258  0F11                     	;# 
  3259  0F12                     	;# 
  3260  0F13                     	;# 
  3261  0F14                     	;# 
  3262  0F15                     	;# 
  3263  0F16                     	;# 
  3264  0F17                     	;# 
  3265  0F18                     	;# 
  3266  0F19                     	;# 
  3267  0F1A                     	;# 
  3268  0F1B                     	;# 
  3269  0F1C                     	;# 
  3270  0F1D                     	;# 
  3271  0F1E                     	;# 
  3272  0F1F                     	;# 
  3273  0F20                     	;# 
  3274  0F21                     	;# 
  3275  0F22                     	;# 
  3276  0F23                     	;# 
  3277  0F24                     	;# 
  3278  0F25                     	;# 
  3279  0F26                     	;# 
  3280  0F27                     	;# 
  3281  0F28                     	;# 
  3282  0F29                     	;# 
  3283  0F2A                     	;# 
  3284  0F2B                     	;# 
  3285  0F2C                     	;# 
  3286  0F2D                     	;# 
  3287  0F2E                     	;# 
  3288  0F2F                     	;# 
  3289  0F30                     	;# 
  3290  0F31                     	;# 
  3291  0F32                     	;# 
  3292  0F38                     	;# 
  3293  0F39                     	;# 
  3294  0F3A                     	;# 
  3295  0F3B                     	;# 
  3296  0F3C                     	;# 
  3297  0F3D                     	;# 
  3298  0F3E                     	;# 
  3299  0F3F                     	;# 
  3300  0F40                     	;# 
  3301  0F41                     	;# 
  3302  0F43                     	;# 
  3303  0F44                     	;# 
  3304  0F45                     	;# 
  3305  0F46                     	;# 
  3306  0F47                     	;# 
  3307  0F48                     	;# 
  3308  0F49                     	;# 
  3309  0F4A                     	;# 
  3310  0F4B                     	;# 
  3311  0F4C                     	;# 
  3312  0F4E                     	;# 
  3313  0F4F                     	;# 
  3314  0F50                     	;# 
  3315  0F51                     	;# 
  3316  0F52                     	;# 
  3317  0F53                     	;# 
  3318  0F54                     	;# 
  3319  0F55                     	;# 
  3320  0F56                     	;# 
  3321  0F57                     	;# 
  3322  0F59                     	;# 
  3323  0F5A                     	;# 
  3324  0F5B                     	;# 
  3325  0F5C                     	;# 
  3326  0F5D                     	;# 
  3327  0F61                     	;# 
  3328  0F62                     	;# 
  3329  0F64                     	;# 
  3330  0F65                     	;# 
  3331  0F66                     	;# 
  3332  0F67                     	;# 
  3333  0F68                     	;# 
  3334  0F69                     	;# 
  3335  0F6A                     	;# 
  3336  0F6B                     	;# 
  3337  0F6C                     	;# 
  3338  0F6D                     	;# 
  3339  0FE4                     	;# 
  3340  0FE5                     	;# 
  3341  0FE6                     	;# 
  3342  0FE7                     	;# 
  3343  0FE8                     	;# 
  3344  0FE9                     	;# 
  3345  0FEA                     	;# 
  3346  0FEB                     	;# 
  3347  0FED                     	;# 
  3348  0FEE                     	;# 
  3349  0FEF                     	;# 
  3350  0000                     	;# 
  3351  0001                     	;# 
  3352  0002                     	;# 
  3353  0003                     	;# 
  3354  0004                     	;# 
  3355  0005                     	;# 
  3356  0006                     	;# 
  3357  0007                     	;# 
  3358  0008                     	;# 
  3359  0009                     	;# 
  3360  000A                     	;# 
  3361  000B                     	;# 
  3362  000C                     	;# 
  3363  000D                     	;# 
  3364  000E                     	;# 
  3365  000F                     	;# 
  3366  0010                     	;# 
  3367  0011                     	;# 
  3368  0012                     	;# 
  3369  0013                     	;# 
  3370  0014                     	;# 
  3371  0015                     	;# 
  3372  0016                     	;# 
  3373  0017                     	;# 
  3374  0018                     	;# 
  3375  0019                     	;# 
  3376  001A                     	;# 
  3377  001C                     	;# 
  3378  001C                     	;# 
  3379  001D                     	;# 
  3380  001D                     	;# 
  3381  001E                     	;# 
  3382  001F                     	;# 
  3383  008C                     	;# 
  3384  008C                     	;# 
  3385  008D                     	;# 
  3386  008E                     	;# 
  3387  008E                     	;# 
  3388  008F                     	;# 
  3389  0090                     	;# 
  3390  0090                     	;# 
  3391  0091                     	;# 
  3392  0093                     	;# 
  3393  0094                     	;# 
  3394  0095                     	;# 
  3395  0096                     	;# 
  3396  0097                     	;# 
  3397  0098                     	;# 
  3398  0099                     	;# 
  3399  009A                     	;# 
  3400  009B                     	;# 
  3401  009C                     	;# 
  3402  009D                     	;# 
  3403  009E                     	;# 
  3404  010C                     	;# 
  3405  010D                     	;# 
  3406  010E                     	;# 
  3407  010E                     	;# 
  3408  010F                     	;# 
  3409  0110                     	;# 
  3410  0110                     	;# 
  3411  0111                     	;# 
  3412  0112                     	;# 
  3413  0112                     	;# 
  3414  0113                     	;# 
  3415  0114                     	;# 
  3416  0114                     	;# 
  3417  0115                     	;# 
  3418  0116                     	;# 
  3419  0116                     	;# 
  3420  0117                     	;# 
  3421  0119                     	;# 
  3422  0119                     	;# 
  3423  0119                     	;# 
  3424  011A                     	;# 
  3425  011A                     	;# 
  3426  011A                     	;# 
  3427  011B                     	;# 
  3428  011B                     	;# 
  3429  011B                     	;# 
  3430  011B                     	;# 
  3431  011B                     	;# 
  3432  011C                     	;# 
  3433  011C                     	;# 
  3434  011C                     	;# 
  3435  011D                     	;# 
  3436  011D                     	;# 
  3437  011D                     	;# 
  3438  011E                     	;# 
  3439  011E                     	;# 
  3440  011E                     	;# 
  3441  011F                     	;# 
  3442  011F                     	;# 
  3443  011F                     	;# 
  3444  011F                     	;# 
  3445  011F                     	;# 
  3446  018C                     	;# 
  3447  018D                     	;# 
  3448  018E                     	;# 
  3449  018F                     	;# 
  3450  0190                     	;# 
  3451  0191                     	;# 
  3452  0192                     	;# 
  3453  0196                     	;# 
  3454  0197                     	;# 
  3455  0198                     	;# 
  3456  0199                     	;# 
  3457  019A                     	;# 
  3458  019B                     	;# 
  3459  019C                     	;# 
  3460  020C                     	;# 
  3461  020C                     	;# 
  3462  020D                     	;# 
  3463  020E                     	;# 
  3464  020F                     	;# 
  3465  020F                     	;# 
  3466  0210                     	;# 
  3467  0210                     	;# 
  3468  0211                     	;# 
  3469  0211                     	;# 
  3470  0212                     	;# 
  3471  0212                     	;# 
  3472  0213                     	;# 
  3473  0214                     	;# 
  3474  0215                     	;# 
  3475  0215                     	;# 
  3476  0216                     	;# 
  3477  0216                     	;# 
  3478  0217                     	;# 
  3479  0217                     	;# 
  3480  0218                     	;# 
  3481  0218                     	;# 
  3482  0219                     	;# 
  3483  021A                     	;# 
  3484  021B                     	;# 
  3485  021B                     	;# 
  3486  021C                     	;# 
  3487  021C                     	;# 
  3488  021D                     	;# 
  3489  021D                     	;# 
  3490  021E                     	;# 
  3491  021F                     	;# 
  3492  028C                     	;# 
  3493  028C                     	;# 
  3494  028D                     	;# 
  3495  028D                     	;# 
  3496  028E                     	;# 
  3497  028F                     	;# 
  3498  0290                     	;# 
  3499  0290                     	;# 
  3500  0291                     	;# 
  3501  0292                     	;# 
  3502  0292                     	;# 
  3503  0293                     	;# 
  3504  0293                     	;# 
  3505  0294                     	;# 
  3506  0295                     	;# 
  3507  0296                     	;# 
  3508  0296                     	;# 
  3509  0297                     	;# 
  3510  0298                     	;# 
  3511  0298                     	;# 
  3512  0299                     	;# 
  3513  0299                     	;# 
  3514  029A                     	;# 
  3515  029B                     	;# 
  3516  029C                     	;# 
  3517  029C                     	;# 
  3518  029D                     	;# 
  3519  030C                     	;# 
  3520  030C                     	;# 
  3521  030D                     	;# 
  3522  030E                     	;# 
  3523  030F                     	;# 
  3524  0310                     	;# 
  3525  0310                     	;# 
  3526  0311                     	;# 
  3527  0312                     	;# 
  3528  0313                     	;# 
  3529  0314                     	;# 
  3530  0314                     	;# 
  3531  0315                     	;# 
  3532  0316                     	;# 
  3533  0317                     	;# 
  3534  0318                     	;# 
  3535  0318                     	;# 
  3536  0319                     	;# 
  3537  031A                     	;# 
  3538  031B                     	;# 
  3539  031C                     	;# 
  3540  031C                     	;# 
  3541  031D                     	;# 
  3542  031E                     	;# 
  3543  031F                     	;# 
  3544  038C                     	;# 
  3545  038C                     	;# 
  3546  038D                     	;# 
  3547  038E                     	;# 
  3548  0390                     	;# 
  3549  0390                     	;# 
  3550  0391                     	;# 
  3551  0392                     	;# 
  3552  040C                     	;# 
  3553  040D                     	;# 
  3554  040E                     	;# 
  3555  040F                     	;# 
  3556  0410                     	;# 
  3557  0411                     	;# 
  3558  0416                     	;# 
  3559  0416                     	;# 
  3560  0417                     	;# 
  3561  0418                     	;# 
  3562  0418                     	;# 
  3563  0419                     	;# 
  3564  041A                     	;# 
  3565  041A                     	;# 
  3566  041B                     	;# 
  3567  041C                     	;# 
  3568  041C                     	;# 
  3569  041D                     	;# 
  3570  041E                     	;# 
  3571  041F                     	;# 
  3572  048C                     	;# 
  3573  048C                     	;# 
  3574  048D                     	;# 
  3575  048E                     	;# 
  3576  048F                     	;# 
  3577  048F                     	;# 
  3578  0490                     	;# 
  3579  0491                     	;# 
  3580  0492                     	;# 
  3581  0492                     	;# 
  3582  0493                     	;# 
  3583  0494                     	;# 
  3584  0495                     	;# 
  3585  0495                     	;# 
  3586  0496                     	;# 
  3587  0497                     	;# 
  3588  0498                     	;# 
  3589  0499                     	;# 
  3590  049A                     	;# 
  3591  049B                     	;# 
  3592  049C                     	;# 
  3593  049D                     	;# 
  3594  050C                     	;# 
  3595  050C                     	;# 
  3596  050D                     	;# 
  3597  050E                     	;# 
  3598  050F                     	;# 
  3599  050F                     	;# 
  3600  0510                     	;# 
  3601  0511                     	;# 
  3602  0512                     	;# 
  3603  0512                     	;# 
  3604  0513                     	;# 
  3605  0514                     	;# 
  3606  0515                     	;# 
  3607  0515                     	;# 
  3608  0516                     	;# 
  3609  0517                     	;# 
  3610  0518                     	;# 
  3611  0519                     	;# 
  3612  051A                     	;# 
  3613  051B                     	;# 
  3614  051C                     	;# 
  3615  051D                     	;# 
  3616  058C                     	;# 
  3617  058C                     	;# 
  3618  058D                     	;# 
  3619  058E                     	;# 
  3620  058F                     	;# 
  3621  058F                     	;# 
  3622  0590                     	;# 
  3623  0591                     	;# 
  3624  0592                     	;# 
  3625  0593                     	;# 
  3626  060C                     	;# 
  3627  060D                     	;# 
  3628  060E                     	;# 
  3629  060F                     	;# 
  3630  0610                     	;# 
  3631  0611                     	;# 
  3632  0612                     	;# 
  3633  0613                     	;# 
  3634  0614                     	;# 
  3635  0616                     	;# 
  3636  0617                     	;# 
  3637  0618                     	;# 
  3638  0619                     	;# 
  3639  061A                     	;# 
  3640  061B                     	;# 
  3641  061C                     	;# 
  3642  061D                     	;# 
  3643  061E                     	;# 
  3644  068C                     	;# 
  3645  068D                     	;# 
  3646  068E                     	;# 
  3647  068F                     	;# 
  3648  0690                     	;# 
  3649  0691                     	;# 
  3650  0692                     	;# 
  3651  0693                     	;# 
  3652  0694                     	;# 
  3653  070C                     	;# 
  3654  070D                     	;# 
  3655  070E                     	;# 
  3656  070F                     	;# 
  3657  0710                     	;# 
  3658  0711                     	;# 
  3659  0712                     	;# 
  3660  0713                     	;# 
  3661  0714                     	;# 
  3662  0716                     	;# 
  3663  0717                     	;# 
  3664  0718                     	;# 
  3665  0719                     	;# 
  3666  071A                     	;# 
  3667  071B                     	;# 
  3668  071C                     	;# 
  3669  071D                     	;# 
  3670  071E                     	;# 
  3671  0796                     	;# 
  3672  0797                     	;# 
  3673  0798                     	;# 
  3674  0799                     	;# 
  3675  079A                     	;# 
  3676  079B                     	;# 
  3677  080C                     	;# 
  3678  080D                     	;# 
  3679  080E                     	;# 
  3680  080F                     	;# 
  3681  0810                     	;# 
  3682  0811                     	;# 
  3683  0812                     	;# 
  3684  0813                     	;# 
  3685  0814                     	;# 
  3686  081A                     	;# 
  3687  081B                     	;# 
  3688  081C                     	;# 
  3689  081D                     	;# 
  3690  081E                     	;# 
  3691  081F                     	;# 
  3692  088C                     	;# 
  3693  088D                     	;# 
  3694  088E                     	;# 
  3695  088F                     	;# 
  3696  0890                     	;# 
  3697  0891                     	;# 
  3698  0892                     	;# 
  3699  0893                     	;# 
  3700  0895                     	;# 
  3701  0896                     	;# 
  3702  0897                     	;# 
  3703  0898                     	;# 
  3704  0899                     	;# 
  3705  089A                     	;# 
  3706  089B                     	;# 
  3707  090C                     	;# 
  3708  090E                     	;# 
  3709  090F                     	;# 
  3710  091F                     	;# 
  3711  091F                     	;# 
  3712  098F                     	;# 
  3713  098F                     	;# 
  3714  0990                     	;# 
  3715  0991                     	;# 
  3716  0992                     	;# 
  3717  0993                     	;# 
  3718  0994                     	;# 
  3719  0995                     	;# 
  3720  0996                     	;# 
  3721  0997                     	;# 
  3722  0E0F                     	;# 
  3723  0E10                     	;# 
  3724  0E11                     	;# 
  3725  0E12                     	;# 
  3726  0E13                     	;# 
  3727  0E14                     	;# 
  3728  0E15                     	;# 
  3729  0E16                     	;# 
  3730  0E17                     	;# 
  3731  0E18                     	;# 
  3732  0E19                     	;# 
  3733  0E1A                     	;# 
  3734  0E1B                     	;# 
  3735  0E1C                     	;# 
  3736  0E1D                     	;# 
  3737  0E1E                     	;# 
  3738  0E1F                     	;# 
  3739  0E20                     	;# 
  3740  0E21                     	;# 
  3741  0E22                     	;# 
  3742  0E23                     	;# 
  3743  0E24                     	;# 
  3744  0E25                     	;# 
  3745  0E26                     	;# 
  3746  0E27                     	;# 
  3747  0E28                     	;# 
  3748  0E29                     	;# 
  3749  0E2A                     	;# 
  3750  0E2B                     	;# 
  3751  0E2C                     	;# 
  3752  0E2D                     	;# 
  3753  0E2E                     	;# 
  3754  0E2F                     	;# 
  3755  0E30                     	;# 
  3756  0E31                     	;# 
  3757  0E32                     	;# 
  3758  0E33                     	;# 
  3759  0E34                     	;# 
  3760  0E35                     	;# 
  3761  0E36                     	;# 
  3762  0E37                     	;# 
  3763  0E8F                     	;# 
  3764  0E90                     	;# 
  3765  0E91                     	;# 
  3766  0E92                     	;# 
  3767  0E93                     	;# 
  3768  0E94                     	;# 
  3769  0E95                     	;# 
  3770  0E96                     	;# 
  3771  0E97                     	;# 
  3772  0E9C                     	;# 
  3773  0E9D                     	;# 
  3774  0E9E                     	;# 
  3775  0EA1                     	;# 
  3776  0EA2                     	;# 
  3777  0EA3                     	;# 
  3778  0EA4                     	;# 
  3779  0EA5                     	;# 
  3780  0EA9                     	;# 
  3781  0EAA                     	;# 
  3782  0EAB                     	;# 
  3783  0EAC                     	;# 
  3784  0EB1                     	;# 
  3785  0EB2                     	;# 
  3786  0EB3                     	;# 
  3787  0EB8                     	;# 
  3788  0EB9                     	;# 
  3789  0EBA                     	;# 
  3790  0EBB                     	;# 
  3791  0EBC                     	;# 
  3792  0EBD                     	;# 
  3793  0EBE                     	;# 
  3794  0EC3                     	;# 
  3795  0EC5                     	;# 
  3796  0EC6                     	;# 
  3797  0EC7                     	;# 
  3798  0EC8                     	;# 
  3799  0EC9                     	;# 
  3800  0ECA                     	;# 
  3801  0ECB                     	;# 
  3802  0ECC                     	;# 
  3803  0F10                     	;# 
  3804  0F11                     	;# 
  3805  0F12                     	;# 
  3806  0F13                     	;# 
  3807  0F14                     	;# 
  3808  0F15                     	;# 
  3809  0F16                     	;# 
  3810  0F17                     	;# 
  3811  0F18                     	;# 
  3812  0F19                     	;# 
  3813  0F1A                     	;# 
  3814  0F1B                     	;# 
  3815  0F1C                     	;# 
  3816  0F1D                     	;# 
  3817  0F1E                     	;# 
  3818  0F1F                     	;# 
  3819  0F20                     	;# 
  3820  0F21                     	;# 
  3821  0F22                     	;# 
  3822  0F23                     	;# 
  3823  0F24                     	;# 
  3824  0F25                     	;# 
  3825  0F26                     	;# 
  3826  0F27                     	;# 
  3827  0F28                     	;# 
  3828  0F29                     	;# 
  3829  0F2A                     	;# 
  3830  0F2B                     	;# 
  3831  0F2C                     	;# 
  3832  0F2D                     	;# 
  3833  0F2E                     	;# 
  3834  0F2F                     	;# 
  3835  0F30                     	;# 
  3836  0F31                     	;# 
  3837  0F32                     	;# 
  3838  0F38                     	;# 
  3839  0F39                     	;# 
  3840  0F3A                     	;# 
  3841  0F3B                     	;# 
  3842  0F3C                     	;# 
  3843  0F3D                     	;# 
  3844  0F3E                     	;# 
  3845  0F3F                     	;# 
  3846  0F40                     	;# 
  3847  0F41                     	;# 
  3848  0F43                     	;# 
  3849  0F44                     	;# 
  3850  0F45                     	;# 
  3851  0F46                     	;# 
  3852  0F47                     	;# 
  3853  0F48                     	;# 
  3854  0F49                     	;# 
  3855  0F4A                     	;# 
  3856  0F4B                     	;# 
  3857  0F4C                     	;# 
  3858  0F4E                     	;# 
  3859  0F4F                     	;# 
  3860  0F50                     	;# 
  3861  0F51                     	;# 
  3862  0F52                     	;# 
  3863  0F53                     	;# 
  3864  0F54                     	;# 
  3865  0F55                     	;# 
  3866  0F56                     	;# 
  3867  0F57                     	;# 
  3868  0F59                     	;# 
  3869  0F5A                     	;# 
  3870  0F5B                     	;# 
  3871  0F5C                     	;# 
  3872  0F5D                     	;# 
  3873  0F61                     	;# 
  3874  0F62                     	;# 
  3875  0F64                     	;# 
  3876  0F65                     	;# 
  3877  0F66                     	;# 
  3878  0F67                     	;# 
  3879  0F68                     	;# 
  3880  0F69                     	;# 
  3881  0F6A                     	;# 
  3882  0F6B                     	;# 
  3883  0F6C                     	;# 
  3884  0F6D                     	;# 
  3885  0FE4                     	;# 
  3886  0FE5                     	;# 
  3887  0FE6                     	;# 
  3888  0FE7                     	;# 
  3889  0FE8                     	;# 
  3890  0FE9                     	;# 
  3891  0FEA                     	;# 
  3892  0FEB                     	;# 
  3893  0FED                     	;# 
  3894  0FEE                     	;# 
  3895  0FEF                     	;# 
  3896                           
  3897                           	psect	stringtext1
  3898  100B                     __pstringtext1:
  3899  100B                     _dpowers:
  3900  100B  3401               	retlw	1
  3901  100C  3400               	retlw	0
  3902  100D  340A               	retlw	10
  3903  100E  3400               	retlw	0
  3904  100F  3464               	retlw	100
  3905  1010  3400               	retlw	0
  3906  1011  34E8               	retlw	232
  3907  1012  3403               	retlw	3
  3908  1013  3410               	retlw	16
  3909  1014  3427               	retlw	39
  3910  1015                     __end_of_dpowers:
  3911                           
  3912                           	psect	stringtext2
  3913  07E8                     __pstringtext2:
  3914  07E8                     _hexpowers:
  3915  07E8  3401               	retlw	1
  3916  07E9  3400               	retlw	0
  3917  07EA  3410               	retlw	16
  3918  07EB  3400               	retlw	0
  3919  07EC  3400               	retlw	0
  3920  07ED  3401               	retlw	1
  3921  07EE  3400               	retlw	0
  3922  07EF  3410               	retlw	16
  3923  07F0                     __end_of_hexpowers:
  3924  0013                     _TRISCbits	set	19
  3925  000B                     _INTCONbits	set	11
  3926  0014                     _TRISD	set	20
  3927  0013                     _TRISC	set	19
  3928  0012                     _TRISB	set	18
  3929  0011                     _TRISA	set	17
  3930  0015                     _TRISE	set	21
  3931  0018                     _LATC	set	24
  3932  0017                     _LATB	set	23
  3933  0016                     _LATA	set	22
  3934  0019                     _LATD	set	25
  3935  001A                     _LATE	set	26
  3936  018E                     _SSP1MSK	set	398
  3937  018D                     _SSP1ADD	set	397
  3938  018F                     _SSP1STAT	set	399
  3939  0191                     _SSP1CON2	set	401
  3940  0190                     _SSP1CON1bits	set	400
  3941  018C                     _SSP1BUF	set	396
  3942  018F                     _SSP1STATbits	set	399
  3943  0191                     _SSP1CON2bits	set	401
  3944  0190                     _SSP1CON1	set	400
  3945  0719                     _PIE3bits	set	1817
  3946  070F                     _PIR3bits	set	1807
  3947  079B                     _PMD5	set	1947
  3948  079A                     _PMD4	set	1946
  3949  0799                     _PMD3	set	1945
  3950  0798                     _PMD2	set	1944
  3951  0797                     _PMD1	set	1943
  3952  0796                     _PMD0	set	1942
  3953  0892                     _OSCTUNE	set	2194
  3954  0893                     _OSCFRQ	set	2195
  3955  0891                     _OSCEN	set	2193
  3956  088F                     _OSCCON3	set	2191
  3957  088D                     _OSCCON1	set	2189
  3958  0EC6                     _SSP1DATPPS	set	3782
  3959  0EC5                     _SSP1CLKPPS	set	3781
  3960  0F24                     _RC4PPS	set	3876
  3961  0F23                     _RC3PPS	set	3875
  3962  0F67                     _SLRCONE	set	3943
  3963  0F5C                     _SLRCOND	set	3932
  3964  0F51                     _SLRCONC	set	3921
  3965  0F46                     _SLRCONB	set	3910
  3966  0F3B                     _SLRCONA	set	3899
  3967  0F5B                     _ODCOND	set	3931
  3968  0F50                     _ODCONC	set	3920
  3969  0F45                     _ODCONB	set	3909
  3970  0F3A                     _ODCONA	set	3898
  3971  0F66                     _ODCONE	set	3942
  3972  0F4F                     _WPUC	set	3919
  3973  0F39                     _WPUA	set	3897
  3974  0F44                     _WPUB	set	3908
  3975  0F65                     _WPUE	set	3941
  3976  0F5A                     _WPUD	set	3930
  3977  0F38                     _ANSELA	set	3896
  3978  0F64                     _ANSELE	set	3940
  3979  0F43                     _ANSELB	set	3907
  3980  0F4E                     _ANSELC	set	3918
  3981  0F59                     _ANSELD	set	3929
  3982  7A7C                     _WPUC4	set	31356
  3983  7A7B                     _WPUC3	set	31355
  3984  07F0                     STR_5:
  3985  07F0  3430               	retlw	48	;'0'
  3986  07F1  3431               	retlw	49	;'1'
  3987  07F2  3432               	retlw	50	;'2'
  3988  07F3  3433               	retlw	51	;'3'
  3989  07F4  3434               	retlw	52	;'4'
  3990  07F5  3435               	retlw	53	;'5'
  3991  07F6  3436               	retlw	54	;'6'
  3992  07F7  3437               	retlw	55	;'7'
  3993  07F8  3438               	retlw	56	;'8'
  3994  07F9  3439               	retlw	57	;'9'
  3995  07FA  3461               	retlw	97	;'a'
  3996  07FB  3462               	retlw	98	;'b'
  3997  07FC  3463               	retlw	99	;'c'
  3998  07FD  3464               	retlw	100	;'d'
  3999  07FE  3465               	retlw	101	;'e'
  4000  07FF  3466               	retlw	102	;'f'
  4001  0800  3400               	retlw	0
  4002                           
  4003                           	psect	stringtext3
  4004  1000                     __pstringtext3:
  4005  1000                     STR_2:
  4006  1000  3443               	retlw	67	;'C'
  4007  1001  346C               	retlw	108	;'l'
  4008  1002  346F               	retlw	111	;'o'
  4009  1003  3463               	retlw	99	;'c'
  4010  1004  346B               	retlw	107	;'k'
  4011  1005  3420               	retlw	32	;' '
  4012  1006  3425               	retlw	37	;'%'
  4013  1007  3430               	retlw	48	;'0'
  4014  1008  3432               	retlw	50	;'2'
  4015  1009  3464               	retlw	100	;'d'
  4016  100A  3400               	retlw	0
  4017                           
  4018                           	psect	stringtext4
  4019  1015                     __pstringtext4:
  4020  1015                     STR_4:
  4021  1015  3425               	retlw	37	;'%'
  4022  1016  3430               	retlw	48	;'0'
  4023  1017  3432               	retlw	50	;'2'
  4024  1018  3478               	retlw	120	;'x'
  4025  1019  3420               	retlw	32	;' '
  4026  101A  3425               	retlw	37	;'%'
  4027  101B  3430               	retlw	48	;'0'
  4028  101C  3432               	retlw	50	;'2'
  4029  101D  3478               	retlw	120	;'x'
  4030  101E  3400               	retlw	0
  4031                           
  4032                           	psect	stringtext5
  4033  101F                     __pstringtext5:
  4034  101F                     STR_3:
  4035  101F  3425               	retlw	37	;'%'
  4036  1020  3430               	retlw	48	;'0'
  4037  1021  3432               	retlw	50	;'2'
  4038  1022  3464               	retlw	100	;'d'
  4039  1023  3420               	retlw	32	;' '
  4040  1024  3443               	retlw	67	;'C'
  4041  1025  3400               	retlw	0
  4042                           
  4043                           	psect	stringtext6
  4044  1026                     __pstringtext6:
  4045  1026                     STR_1:
  4046  1026  3454               	retlw	84	;'T'
  4047  1027  3465               	retlw	101	;'e'
  4048  1028  346D               	retlw	109	;'m'
  4049  1029  3470               	retlw	112	;'p'
  4050  102A  3400               	retlw	0
  4051                           
  4052                           	psect	stringtext7
  4053  0000                     __pstringtext7:
  4054                           
  4055                           	psect	cinit
  4056  001E                     start_initialization:	
  4057                           ; #config settings
  4058                           
  4059  001E                     __initialization:
  4060                           
  4061                           ; Clear objects allocated to BANK0
  4062  001E  0020               	movlb	0	; select bank0
  4063  001F  01CE               	clrf	__pbssBANK0& (0+127)
  4064  0020  01CF               	clrf	(__pbssBANK0+1)& (0+127)
  4065  0021  01D0               	clrf	(__pbssBANK0+2)& (0+127)
  4066  0022  01D1               	clrf	(__pbssBANK0+3)& (0+127)
  4067  0023                     end_of_initialization:	
  4068                           ;End of C runtime variable initialization code
  4069                           
  4070  0023                     __end_of__initialization:
  4071  0023  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4072  0024  0020               	movlb	0
  4073  0025  3185  2D44         	ljmp	_main	;jump to C main() function
  4074                           
  4075                           	psect	bssBANK0
  4076  004E                     __pbssBANK0:
  4077  004E                     _i2c1_driver_i2cISR:
  4078  004E                     	ds	2
  4079  0050                     _i2c1_driver_busCollisionISR:
  4080  0050                     	ds	2
  4081                           
  4082                           	psect	cstackCOMMON
  4083  0070                     __pcstackCOMMON:
  4084  0070                     ?_isdigit:
  4085  0070                     ?_i2c1_driver_open:	
  4086                           ; 1 bit 
  4087                           
  4088  0070                     ?_PMD_Initialize:	
  4089                           ; 1 bit 
  4090                           
  4091  0070                     ??_PMD_Initialize:	
  4092                           ; 1 bytes @ 0x0
  4093                           
  4094  0070                     ?_OSCILLATOR_Initialize:	
  4095                           ; 1 bytes @ 0x0
  4096                           
  4097  0070                     ??_OSCILLATOR_Initialize:	
  4098                           ; 1 bytes @ 0x0
  4099                           
  4100  0070                     ??_isdigit:	
  4101                           ; 1 bytes @ 0x0
  4102                           
  4103  0070                     ?_ReadI2C:	
  4104                           ; 1 bytes @ 0x0
  4105                           
  4106  0070                     ??_ReadI2C:	
  4107                           ; 1 bytes @ 0x0
  4108                           
  4109  0070                     ?_WriteI2C:	
  4110                           ; 1 bytes @ 0x0
  4111                           
  4112  0070                     ??_WriteI2C:	
  4113                           ; 1 bytes @ 0x0
  4114                           
  4115  0070                     ?_PIN_MANAGER_Initialize:	
  4116                           ; 1 bytes @ 0x0
  4117                           
  4118  0070                     ??_PIN_MANAGER_Initialize:	
  4119                           ; 1 bytes @ 0x0
  4120                           
  4121  0070                     ?_SYSTEM_Initialize:	
  4122                           ; 1 bytes @ 0x0
  4123                           
  4124  0070                     ??_SYSTEM_Initialize:	
  4125                           ; 1 bytes @ 0x0
  4126                           
  4127  0070                     ??_i2c1_driver_open:	
  4128                           ; 1 bytes @ 0x0
  4129                           
  4130  0070                     ?_INTERRUPT_InterruptManager:	
  4131                           ; 1 bytes @ 0x0
  4132                           
  4133  0070                     ??_INTERRUPT_InterruptManager:	
  4134                           ; 1 bytes @ 0x0
  4135                           
  4136  0070                     ?_tsttc:	
  4137                           ; 1 bytes @ 0x0
  4138                           
  4139  0070                     ?_LCDsend:	
  4140                           ; 1 bytes @ 0x0
  4141                           
  4142  0070                     ?_LCDrecv:	
  4143                           ; 1 bytes @ 0x0
  4144                           
  4145  0070                     ?_LCDinit:	
  4146                           ; 1 bytes @ 0x0
  4147                           
  4148  0070                     ?_LCDcmd:	
  4149                           ; 1 bytes @ 0x0
  4150                           
  4151  0070                     ?_LCDchar:	
  4152                           ; 1 bytes @ 0x0
  4153                           
  4154  0070                     ?_main:	
  4155                           ; 1 bytes @ 0x0
  4156                           
  4157  0070                     ?___wmul:	
  4158                           ; 1 bytes @ 0x0
  4159                           
  4160  0070                     ?___lwdiv:	
  4161                           ; 2 bytes @ 0x0
  4162                           
  4163  0070                     _isdigit$1516:	
  4164                           ; 2 bytes @ 0x0
  4165                           
  4166  0070                     ___wmul@multiplier:	
  4167                           ; 1 bytes @ 0x0
  4168                           
  4169  0070                     ___lwdiv@divisor:	
  4170                           ; 2 bytes @ 0x0
  4171                           
  4172                           
  4173                           ; 2 bytes @ 0x0
  4174  0070                     	ds	1
  4175  0071                     WriteI2C@data_out:
  4176  0071                     isdigit@c:	
  4177                           ; 1 bytes @ 0x1
  4178                           
  4179                           
  4180                           ; 1 bytes @ 0x1
  4181  0071                     	ds	1
  4182  0072                     ??_tsttc:
  4183  0072                     ??_LCDsend:	
  4184                           ; 1 bytes @ 0x2
  4185                           
  4186  0072                     ??_LCDrecv:	
  4187                           ; 1 bytes @ 0x2
  4188                           
  4189  0072                     ?_LCDsend2x4:	
  4190                           ; 1 bytes @ 0x2
  4191                           
  4192  0072                     LCDsend2x4@mode:	
  4193                           ; 1 bytes @ 0x2
  4194                           
  4195  0072                     ___wmul@multiplicand:	
  4196                           ; 1 bytes @ 0x2
  4197                           
  4198  0072                     ___lwdiv@dividend:	
  4199                           ; 2 bytes @ 0x2
  4200                           
  4201                           
  4202                           ; 2 bytes @ 0x2
  4203  0072                     	ds	1
  4204  0073                     ??_LCDsend2x4:
  4205  0073                     tsttc@value:	
  4206                           ; 1 bytes @ 0x3
  4207                           
  4208  0073                     LCDsend@c:	
  4209                           ; 1 bytes @ 0x3
  4210                           
  4211                           
  4212                           ; 1 bytes @ 0x3
  4213  0073                     	ds	1
  4214  0074                     ??___wmul:
  4215  0074                     ??___lwdiv:	
  4216                           ; 1 bytes @ 0x4
  4217                           
  4218  0074                     LCDrecv@hc:	
  4219                           ; 1 bytes @ 0x4
  4220                           
  4221  0074                     ___wmul@product:	
  4222                           ; 1 bytes @ 0x4
  4223                           
  4224                           
  4225                           ; 2 bytes @ 0x4
  4226  0074                     	ds	1
  4227  0075                     LCDrecv@lc:
  4228  0075                     LCDsend2x4@c:	
  4229                           ; 1 bytes @ 0x5
  4230                           
  4231  0075                     ___lwdiv@quotient:	
  4232                           ; 1 bytes @ 0x5
  4233                           
  4234                           
  4235                           ; 2 bytes @ 0x5
  4236  0075                     	ds	1
  4237  0076                     LCDrecv@mode:
  4238  0076                     LCDsend2x4@hc:	
  4239                           ; 1 bytes @ 0x6
  4240                           
  4241                           
  4242                           ; 1 bytes @ 0x6
  4243  0076                     	ds	1
  4244  0077                     LCDsend2x4@lc:
  4245  0077                     ___lwdiv@counter:	
  4246                           ; 1 bytes @ 0x7
  4247                           
  4248                           
  4249                           ; 1 bytes @ 0x7
  4250  0077                     	ds	1
  4251  0078                     ??_LCDinit:
  4252  0078                     ??_LCDcmd:	
  4253                           ; 1 bytes @ 0x8
  4254                           
  4255  0078                     ??_LCDchar:	
  4256                           ; 1 bytes @ 0x8
  4257                           
  4258  0078                     ?___lwmod:	
  4259                           ; 1 bytes @ 0x8
  4260                           
  4261  0078                     LCDcmd@c:	
  4262                           ; 2 bytes @ 0x8
  4263                           
  4264  0078                     LCDchar@c:	
  4265                           ; 1 bytes @ 0x8
  4266                           
  4267  0078                     ___lwmod@divisor:	
  4268                           ; 1 bytes @ 0x8
  4269                           
  4270                           
  4271                           ; 2 bytes @ 0x8
  4272  0078                     	ds	1
  4273  0079                     ?_LCDstr:
  4274  0079                     LCDstr@p:	
  4275                           ; 1 bytes @ 0x9
  4276                           
  4277                           
  4278                           ; 2 bytes @ 0x9
  4279  0079                     	ds	1
  4280  007A                     ___lwmod@dividend:
  4281                           
  4282                           ; 2 bytes @ 0xA
  4283  007A                     	ds	1
  4284  007B                     ??_LCDstr:
  4285                           
  4286                           ; 1 bytes @ 0xB
  4287  007B                     	ds	1
  4288  007C                     ??___lwmod:
  4289                           
  4290                           ; 1 bytes @ 0xC
  4291  007C                     	ds	1
  4292  007D                     ___lwmod@counter:
  4293                           
  4294                           ; 1 bytes @ 0xD
  4295  007D                     	ds	1
  4296                           
  4297                           	psect	cstackBANK0
  4298  0020                     __pcstackBANK0:
  4299  0020                     ?_sprintf:
  4300  0020                     LCDstr@c:	
  4301                           ; 2 bytes @ 0x0
  4302                           
  4303  0020                     sprintf@f:	
  4304                           ; 1 bytes @ 0x0
  4305                           
  4306                           
  4307                           ; 2 bytes @ 0x0
  4308  0020                     	ds	6
  4309  0026                     ??_sprintf:
  4310                           
  4311                           ; 1 bytes @ 0x6
  4312  0026                     	ds	4
  4313  002A                     sprintf@idx:
  4314                           
  4315                           ; 1 bytes @ 0xA
  4316  002A                     	ds	1
  4317  002B                     sprintf@ap:
  4318                           
  4319                           ; 1 bytes @ 0xB
  4320  002B                     	ds	1
  4321  002C                     sprintf@prec:
  4322                           
  4323                           ; 1 bytes @ 0xC
  4324  002C                     	ds	1
  4325  002D                     sprintf@val:
  4326                           
  4327                           ; 2 bytes @ 0xD
  4328  002D                     	ds	2
  4329  002F                     sprintf@flag:
  4330                           
  4331                           ; 1 bytes @ 0xF
  4332  002F                     	ds	1
  4333  0030                     sprintf@width:
  4334                           
  4335                           ; 2 bytes @ 0x10
  4336  0030                     	ds	2
  4337  0032                     sprintf@sp:
  4338                           
  4339                           ; 1 bytes @ 0x12
  4340  0032                     	ds	1
  4341  0033                     sprintf@c:
  4342                           
  4343                           ; 1 bytes @ 0x13
  4344  0033                     	ds	1
  4345  0034                     ??_main:
  4346                           
  4347                           ; 1 bytes @ 0x14
  4348  0034                     	ds	4
  4349  0038                     main@buf:
  4350                           
  4351                           ; 17 bytes @ 0x18
  4352  0038                     	ds	17
  4353  0049                     main@c:
  4354                           
  4355                           ; 1 bytes @ 0x29
  4356  0049                     	ds	1
  4357  004A                     main@c1:
  4358                           
  4359                           ; 1 bytes @ 0x2A
  4360  004A                     	ds	1
  4361  004B                     main@c2:
  4362                           
  4363                           ; 1 bytes @ 0x2B
  4364  004B                     	ds	1
  4365  004C                     main@counter:
  4366                           
  4367                           ; 2 bytes @ 0x2C
  4368  004C                     	ds	2
  4369                           
  4370                           	psect	maintext
  4371  0544                     __pmaintext:	
  4372 ;;
  4373 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  4374 ;;
  4375 ;; *************** function _main *****************
  4376 ;; Defined at:
  4377 ;;		line 195 in file "main.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;		None
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  buf            17   24[BANK0 ] unsigned char [17]
  4382 ;;  counter         2   44[BANK0 ] unsigned int 
  4383 ;;  c2              1   43[BANK0 ] unsigned char 
  4384 ;;  c1              1   42[BANK0 ] unsigned char 
  4385 ;;  c               1   41[BANK0 ] unsigned char 
  4386 ;;  lc              1    0        unsigned char 
  4387 ;;  hc              1    0        unsigned char 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4392 ;; Tracked objects:
  4393 ;;		On entry : B1F/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4398 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4399 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4400 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4401 ;;Total ram usage:       26 bytes
  4402 ;; Hardware stack levels required when called:    5
  4403 ;; This function calls:
  4404 ;;		_LCDcmd
  4405 ;;		_LCDinit
  4406 ;;		_LCDrecv
  4407 ;;		_LCDstr
  4408 ;;		_SYSTEM_Initialize
  4409 ;;		_i2c1_driver_open
  4410 ;;		_sprintf
  4411 ;;		_tsttc
  4412 ;; This function is called by:
  4413 ;;		Startup code after reset
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           
  4418                           ;psect for function _main
  4419  0544                     _main:
  4420  0544                     l2596:	
  4421                           ;incstack = 0
  4422                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4423                           
  4424                           
  4425                           ;main.c: 197: unsigned char c;;main.c: 198: unsigned char hc;;main.c: 199: unsigned char
      +                           lc;;main.c: 200: unsigned char c1;;main.c: 201: unsigned char c2;;main.c: 202: unsigned
      +                           char buf[17];;main.c: 203: unsigned int counter = 0;
  4426  0544  0020               	movlb	0	; select bank0
  4427  0545  01CC               	clrf	main@counter
  4428  0546  01CD               	clrf	main@counter+1
  4429  0547                     l2598:
  4430                           
  4431                           ;main.c: 206: SYSTEM_Initialize();
  4432  0547  318F  27D8  3185   	fcall	_SYSTEM_Initialize
  4433  054A                     l2600:
  4434                           
  4435                           ;main.c: 223: i2c1_driver_open();
  4436  054A  318F  27E2  3185   	fcall	_i2c1_driver_open
  4437  054D                     l2602:
  4438                           
  4439                           ;main.c: 224: TRISCbits.TRISC3 = 1;
  4440  054D  0020               	movlb	0	; select bank0
  4441  054E  1593               	bsf	19,3	;volatile
  4442  054F                     l2604:
  4443                           
  4444                           ;main.c: 225: TRISCbits.TRISC4 = 1;
  4445  054F  1613               	bsf	19,4	;volatile
  4446  0550                     l2606:
  4447                           
  4448                           ;main.c: 226: WPUC3 = 1;
  4449  0550  003E               	movlb	30	; select bank30
  4450  0551  15CF               	bsf	79,3	;volatile
  4451  0552                     l2608:
  4452                           
  4453                           ;main.c: 227: WPUC4 = 1;
  4454  0552  164F               	bsf	79,4	;volatile
  4455  0553                     l2610:
  4456                           
  4457                           ;main.c: 228: LCDinit();
  4458  0553  3185  25EA  3185   	fcall	_LCDinit
  4459  0556                     l2612:
  4460                           
  4461                           ;main.c: 231: {;main.c: 234: __nop();
  4462  0556  0000               	nop
  4463  0557                     l2614:
  4464                           
  4465                           ;main.c: 235: c = tsttc();
  4466  0557  3183  2384  3185   	fcall	_tsttc
  4467  055A  0020               	movlb	0	; select bank0
  4468  055B  00B4               	movwf	??_main
  4469  055C  0834               	movf	??_main,w
  4470  055D  00C9               	movwf	main@c
  4471  055E                     l2616:
  4472                           
  4473                           ;main.c: 238: LCDcmd(0x80);
  4474  055E  3080               	movlw	128
  4475  055F  318F  27B8  3185   	fcall	_LCDcmd
  4476  0562                     l2618:
  4477                           
  4478                           ;main.c: 239: LCDstr("Temp");
  4479  0562  3026               	movlw	low (STR_1| (0+32768))
  4480  0563  00F9               	movwf	LCDstr@p
  4481  0564  3090               	movlw	high (STR_1| (0+32768))
  4482  0565  00FA               	movwf	LCDstr@p+1
  4483  0566  3187  27B3  3185   	fcall	_LCDstr
  4484  0569                     l2620:
  4485                           
  4486                           ;main.c: 240: LCDcmd(0x85);
  4487  0569  3085               	movlw	133
  4488  056A  318F  27B8  3185   	fcall	_LCDcmd
  4489  056D                     l2622:
  4490                           
  4491                           ;main.c: 241: sprintf( buf,"Clock %02d", counter );
  4492  056D  3000               	movlw	low (STR_2| (0+32768))
  4493  056E  0020               	movlb	0	; select bank0
  4494  056F  00A0               	movwf	sprintf@f
  4495  0570  3090               	movlw	high (STR_2| (0+32768))
  4496  0571  00A1               	movwf	sprintf@f+1
  4497  0572  084D               	movf	main@counter+1,w
  4498  0573  00A3               	movwf	?_sprintf+3
  4499  0574  084C               	movf	main@counter,w
  4500  0575  00A2               	movwf	?_sprintf+2
  4501  0576  3038               	movlw	(low (main@buf| 0))& (0+255)
  4502  0577  3180  2027  3185   	fcall	_sprintf
  4503  057A                     l2624:
  4504                           
  4505                           ;main.c: 242: LCDstr(buf);
  4506  057A  3038               	movlw	low main@buf
  4507  057B  00F9               	movwf	LCDstr@p
  4508  057C  3000               	movlw	high main@buf
  4509  057D  00FA               	movwf	LCDstr@p+1
  4510  057E  3187  27B3  3185   	fcall	_LCDstr
  4511  0581                     l2626:
  4512                           
  4513                           ;main.c: 243: LCDcmd(0xc0);
  4514  0581  30C0               	movlw	192
  4515  0582  318F  27B8  3185   	fcall	_LCDcmd
  4516  0585                     l2628:
  4517                           
  4518                           ;main.c: 245: sprintf(buf, "%02d C", c);
  4519  0585  301F               	movlw	low (STR_3| (0+32768))
  4520  0586  0020               	movlb	0	; select bank0
  4521  0587  00A0               	movwf	sprintf@f
  4522  0588  3090               	movlw	high (STR_3| (0+32768))
  4523  0589  00A1               	movwf	sprintf@f+1
  4524  058A  0849               	movf	main@c,w
  4525  058B  00B4               	movwf	??_main
  4526  058C  01B5               	clrf	??_main+1
  4527  058D  0834               	movf	??_main,w
  4528  058E  00A2               	movwf	?_sprintf+2
  4529  058F  0835               	movf	??_main+1,w
  4530  0590  00A3               	movwf	?_sprintf+3
  4531  0591  3038               	movlw	(low (main@buf| 0))& (0+255)
  4532  0592  3180  2027  3185   	fcall	_sprintf
  4533  0595                     l2630:
  4534                           
  4535                           ;main.c: 246: LCDstr(buf);
  4536  0595  3038               	movlw	low main@buf
  4537  0596  00F9               	movwf	LCDstr@p
  4538  0597  3000               	movlw	high main@buf
  4539  0598  00FA               	movwf	LCDstr@p+1
  4540  0599  3187  27B3  3185   	fcall	_LCDstr
  4541  059C                     l2632:
  4542                           
  4543                           ;main.c: 247: LCDcmd(0x81);
  4544  059C  3081               	movlw	129
  4545  059D  318F  27B8  3185   	fcall	_LCDcmd
  4546  05A0                     l2634:
  4547                           
  4548                           ;main.c: 250: c1 = LCDrecv(0);
  4549  05A0  3000               	movlw	0
  4550  05A1  3182  223E  3185   	fcall	_LCDrecv
  4551  05A4  0020               	movlb	0	; select bank0
  4552  05A5  00B4               	movwf	??_main
  4553  05A6  0834               	movf	??_main,w
  4554  05A7  00CA               	movwf	main@c1
  4555  05A8                     l2636:
  4556                           
  4557                           ;main.c: 251: c2 = LCDrecv(0x01);
  4558  05A8  3001               	movlw	1
  4559  05A9  3182  223E  3185   	fcall	_LCDrecv
  4560  05AC  0020               	movlb	0	; select bank0
  4561  05AD  00B4               	movwf	??_main
  4562  05AE  0834               	movf	??_main,w
  4563  05AF  00CB               	movwf	main@c2
  4564  05B0                     l2638:
  4565                           
  4566                           ;main.c: 252: LCDcmd(0xc8);
  4567  05B0  30C8               	movlw	200
  4568  05B1  318F  27B8  3185   	fcall	_LCDcmd
  4569  05B4                     l2640:
  4570                           
  4571                           ;main.c: 253: sprintf(buf, "%02x %02x", c1, c2);
  4572  05B4  3015               	movlw	low (STR_4| (0+32768))
  4573  05B5  0020               	movlb	0	; select bank0
  4574  05B6  00A0               	movwf	sprintf@f
  4575  05B7  3090               	movlw	high (STR_4| (0+32768))
  4576  05B8  00A1               	movwf	sprintf@f+1
  4577  05B9  084A               	movf	main@c1,w
  4578  05BA  00B4               	movwf	??_main
  4579  05BB  01B5               	clrf	??_main+1
  4580  05BC  0834               	movf	??_main,w
  4581  05BD  00A2               	movwf	?_sprintf+2
  4582  05BE  0835               	movf	??_main+1,w
  4583  05BF  00A3               	movwf	?_sprintf+3
  4584  05C0  084B               	movf	main@c2,w
  4585  05C1  00B6               	movwf	??_main+2
  4586  05C2  01B7               	clrf	??_main+3
  4587  05C3  0836               	movf	??_main+2,w
  4588  05C4  00A4               	movwf	?_sprintf+4
  4589  05C5  0837               	movf	??_main+3,w
  4590  05C6  00A5               	movwf	?_sprintf+5
  4591  05C7  3038               	movlw	(low (main@buf| 0))& (0+255)
  4592  05C8  3180  2027  3185   	fcall	_sprintf
  4593  05CB                     l2642:
  4594                           
  4595                           ;main.c: 254: LCDstr(buf);
  4596  05CB  3038               	movlw	low main@buf
  4597  05CC  00F9               	movwf	LCDstr@p
  4598  05CD  3000               	movlw	high main@buf
  4599  05CE  00FA               	movwf	LCDstr@p+1
  4600  05CF  3187  27B3  3185   	fcall	_LCDstr
  4601  05D2                     l2644:
  4602                           
  4603                           ;main.c: 255: __nop();
  4604  05D2  0000               	nop
  4605  05D3                     l2646:
  4606                           
  4607                           ;main.c: 256: _delay((unsigned long)((3000)*(1000000/4000.0)));
  4608  05D3  3004               	movlw	4
  4609  05D4  0020               	movlb	0	; select bank0
  4610  05D5  00B5               	movwf	??_main+1
  4611  05D6  30CF               	movlw	207
  4612  05D7  00B4               	movwf	??_main
  4613  05D8  3001               	movlw	1
  4614  05D9                     u2567:
  4615  05D9  0B89               	decfsz	9,f
  4616  05DA  2DD9               	goto	u2567
  4617  05DB  0BB4               	decfsz	??_main,f
  4618  05DC  2DD9               	goto	u2567
  4619  05DD  0BB5               	decfsz	??_main+1,f
  4620  05DE  2DD9               	goto	u2567
  4621  05DF  3200               	nop2
  4622  05E0                     l2648:
  4623                           
  4624                           ;main.c: 257: counter = counter + 3;
  4625  05E0  0020               	movlb	0	; select bank0
  4626  05E1  084C               	movf	main@counter,w
  4627  05E2  3E03               	addlw	3
  4628  05E3  00CC               	movwf	main@counter
  4629  05E4  3000               	movlw	0
  4630  05E5  3D4D               	addwfc	main@counter+1,w
  4631  05E6  00CD               	movwf	main@counter+1
  4632  05E7  2D56               	goto	l2612
  4633  05E8  3180  281C         	ljmp	start
  4634  05EA                     __end_of_main:
  4635                           
  4636                           	psect	text1
  4637  0384                     __ptext1:	
  4638 ;; *************** function _tsttc *****************
  4639 ;; Defined at:
  4640 ;;		line 52 in file "main.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;		None
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  value           1    3[COMMON] unsigned char 
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  1    wreg      unsigned char 
  4647 ;; Registers used:
  4648 ;;		wreg, status,2, status,0, pclath, cstack
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4656 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4657 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;Total ram usage:        2 bytes
  4659 ;; Hardware stack levels used:    1
  4660 ;; Hardware stack levels required when called:    2
  4661 ;; This function calls:
  4662 ;;		_ReadI2C
  4663 ;;		_WriteI2C
  4664 ;; This function is called by:
  4665 ;;		_main
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           
  4670                           ;psect for function _tsttc
  4671  0384                     _tsttc:
  4672  0384                     l359:	
  4673                           ;incstack = 0
  4674                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
  4675                           ;main.c: 54: unsigned char value;;main.c: 55: do{
  4676                           
  4677  0384                     l2294:	
  4678                           ;main.c: 56: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4679                           
  4680  0384  0023               	movlb	3	; select bank3
  4681  0385  0C0F               	rrf	15,w	;volatile
  4682  0386  0C89               	rrf	9,f
  4683  0387  3901               	andlw	1
  4684  0388  00F2               	movwf	??_tsttc
  4685  0389  0811               	movf	17,w	;volatile
  4686  038A  391F               	andlw	31
  4687  038B  0472               	iorwf	??_tsttc,w
  4688  038C  1D03               	btfss	3,2
  4689  038D  2B8F               	goto	u1821
  4690  038E  2B90               	goto	u1820
  4691  038F                     u1821:
  4692  038F  2B84               	goto	l2294
  4693  0390                     u1820:
  4694  0390                     l362:
  4695                           
  4696                           ;main.c: 57: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
  4697  0390  1411               	bsf	17,0	;volatile
  4698  0391                     l363:
  4699  0391  1811               	btfsc	17,0	;volatile
  4700  0392  2B94               	goto	u1831
  4701  0393  2B95               	goto	u1830
  4702  0394                     u1831:
  4703  0394  2B91               	goto	l363
  4704  0395                     u1830:
  4705  0395                     l2296:
  4706  0395  0C0F               	rrf	15,w	;volatile
  4707  0396  0C89               	rrf	9,f
  4708  0397  3901               	andlw	1
  4709  0398  00F2               	movwf	??_tsttc
  4710  0399  0811               	movf	17,w	;volatile
  4711  039A  391F               	andlw	31
  4712  039B  0472               	iorwf	??_tsttc,w
  4713  039C  1D03               	btfss	3,2
  4714  039D  2B9F               	goto	u1841
  4715  039E  2BA0               	goto	u1840
  4716  039F                     u1841:
  4717  039F  2B95               	goto	l2296
  4718  03A0                     u1840:
  4719  03A0                     l2298:
  4720                           
  4721                           ;main.c: 59: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4722  03A0  309A               	movlw	154
  4723  03A1  3186  265B  3183   	fcall	_WriteI2C
  4724  03A4                     l2300:
  4725  03A4  0023               	movlb	3	; select bank3
  4726  03A5  0C0F               	rrf	15,w	;volatile
  4727  03A6  0C89               	rrf	9,f
  4728  03A7  3901               	andlw	1
  4729  03A8  00F2               	movwf	??_tsttc
  4730  03A9  0811               	movf	17,w	;volatile
  4731  03AA  391F               	andlw	31
  4732  03AB  0472               	iorwf	??_tsttc,w
  4733  03AC  1D03               	btfss	3,2
  4734  03AD  2BAF               	goto	u1851
  4735  03AE  2BB0               	goto	u1850
  4736  03AF                     u1851:
  4737  03AF  2BA4               	goto	l2300
  4738  03B0                     u1850:
  4739  03B0                     l2302:
  4740                           
  4741                           ;main.c: 60: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4742  03B0  3001               	movlw	1
  4743  03B1  3186  265B  3183   	fcall	_WriteI2C
  4744  03B4                     l2304:
  4745  03B4  0023               	movlb	3	; select bank3
  4746  03B5  0C0F               	rrf	15,w	;volatile
  4747  03B6  0C89               	rrf	9,f
  4748  03B7  3901               	andlw	1
  4749  03B8  00F2               	movwf	??_tsttc
  4750  03B9  0811               	movf	17,w	;volatile
  4751  03BA  391F               	andlw	31
  4752  03BB  0472               	iorwf	??_tsttc,w
  4753  03BC  1D03               	btfss	3,2
  4754  03BD  2BBF               	goto	u1861
  4755  03BE  2BC0               	goto	u1860
  4756  03BF                     u1861:
  4757  03BF  2BB4               	goto	l2304
  4758  03C0                     u1860:
  4759  03C0                     l374:
  4760                           
  4761                           ;main.c: 61: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
  4762  03C0  1491               	bsf	17,1	;volatile
  4763  03C1                     l375:
  4764  03C1  1891               	btfsc	17,1	;volatile
  4765  03C2  2BC4               	goto	u1871
  4766  03C3  2BC5               	goto	u1870
  4767  03C4                     u1871:
  4768  03C4  2BC1               	goto	l375
  4769  03C5                     u1870:
  4770  03C5                     l2306:
  4771  03C5  0C0F               	rrf	15,w	;volatile
  4772  03C6  0C89               	rrf	9,f
  4773  03C7  3901               	andlw	1
  4774  03C8  00F2               	movwf	??_tsttc
  4775  03C9  0811               	movf	17,w	;volatile
  4776  03CA  391F               	andlw	31
  4777  03CB  0472               	iorwf	??_tsttc,w
  4778  03CC  1D03               	btfss	3,2
  4779  03CD  2BCF               	goto	u1881
  4780  03CE  2BD0               	goto	u1880
  4781  03CF                     u1881:
  4782  03CF  2BC5               	goto	l2306
  4783  03D0                     u1880:
  4784  03D0                     l2308:
  4785                           
  4786                           ;main.c: 62: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4787  03D0  309B               	movlw	155
  4788  03D1  3186  265B  3183   	fcall	_WriteI2C
  4789  03D4                     l2310:
  4790  03D4  0023               	movlb	3	; select bank3
  4791  03D5  0C0F               	rrf	15,w	;volatile
  4792  03D6  0C89               	rrf	9,f
  4793  03D7  3901               	andlw	1
  4794  03D8  00F2               	movwf	??_tsttc
  4795  03D9  0811               	movf	17,w	;volatile
  4796  03DA  391F               	andlw	31
  4797  03DB  0472               	iorwf	??_tsttc,w
  4798  03DC  1D03               	btfss	3,2
  4799  03DD  2BDF               	goto	u1891
  4800  03DE  2BE0               	goto	u1890
  4801  03DF                     u1891:
  4802  03DF  2BD4               	goto	l2310
  4803  03E0                     u1890:
  4804  03E0                     l2312:
  4805                           
  4806                           ;main.c: 63: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4807  03E0  3187  27CE  3183   	fcall	_ReadI2C
  4808  03E3  00F2               	movwf	??_tsttc
  4809  03E4  0872               	movf	??_tsttc,w
  4810  03E5  00F3               	movwf	tsttc@value
  4811  03E6                     l2314:
  4812  03E6  0023               	movlb	3	; select bank3
  4813  03E7  0C0F               	rrf	15,w	;volatile
  4814  03E8  0C89               	rrf	9,f
  4815  03E9  3901               	andlw	1
  4816  03EA  00F2               	movwf	??_tsttc
  4817  03EB  0811               	movf	17,w	;volatile
  4818  03EC  391F               	andlw	31
  4819  03ED  0472               	iorwf	??_tsttc,w
  4820  03EE  1D03               	btfss	3,2
  4821  03EF  2BF1               	goto	u1901
  4822  03F0  2BF2               	goto	u1900
  4823  03F1                     u1901:
  4824  03F1  2BE6               	goto	l2314
  4825  03F2                     u1900:
  4826  03F2                     l386:
  4827                           
  4828                           ;main.c: 64: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4829  03F2  1691               	bsf	17,5	;volatile
  4830  03F3  1611               	bsf	17,4	;volatile
  4831  03F4                     l387:
  4832  03F4  1A11               	btfsc	17,4	;volatile
  4833  03F5  2BF7               	goto	u1911
  4834  03F6  2BF8               	goto	u1910
  4835  03F7                     u1911:
  4836  03F7  2BF4               	goto	l387
  4837  03F8                     u1910:
  4838  03F8                     l2316:
  4839  03F8  0C0F               	rrf	15,w	;volatile
  4840  03F9  0C89               	rrf	9,f
  4841  03FA  3901               	andlw	1
  4842  03FB  00F2               	movwf	??_tsttc
  4843  03FC  0811               	movf	17,w	;volatile
  4844  03FD  391F               	andlw	31
  4845  03FE  0472               	iorwf	??_tsttc,w
  4846  03FF  1D03               	btfss	3,2
  4847  0400  2C02               	goto	u1921
  4848  0401  2C03               	goto	u1920
  4849  0402                     u1921:
  4850  0402  2BF8               	goto	l2316
  4851  0403                     u1920:
  4852  0403                     l392:
  4853                           
  4854                           ;main.c: 65: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  4855  0403  1511               	bsf	17,2	;volatile
  4856  0404                     l393:
  4857  0404  1911               	btfsc	17,2	;volatile
  4858  0405  2C07               	goto	u1931
  4859  0406  2C08               	goto	u1930
  4860  0407                     u1931:
  4861  0407  2C04               	goto	l393
  4862  0408                     u1930:
  4863  0408                     l395:
  4864                           
  4865                           ;main.c: 66: } while (!(value & 0x40));
  4866  0408  1F73               	btfss	tsttc@value,6
  4867  0409  2C0B               	goto	u1941
  4868  040A  2C0C               	goto	u1940
  4869  040B                     u1941:
  4870  040B  2B84               	goto	l359
  4871  040C                     u1940:
  4872  040C                     l2318:
  4873  040C  0C0F               	rrf	15,w	;volatile
  4874  040D  0C89               	rrf	9,f
  4875  040E  3901               	andlw	1
  4876  040F  00F2               	movwf	??_tsttc
  4877  0410  0811               	movf	17,w	;volatile
  4878  0411  391F               	andlw	31
  4879  0412  0472               	iorwf	??_tsttc,w
  4880  0413  1D03               	btfss	3,2
  4881  0414  2C16               	goto	u1951
  4882  0415  2C17               	goto	u1950
  4883  0416                     u1951:
  4884  0416  2C0C               	goto	l2318
  4885  0417                     u1950:
  4886  0417                     l399:
  4887                           
  4888                           ;main.c: 69: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
  4889  0417  1411               	bsf	17,0	;volatile
  4890  0418                     l400:
  4891  0418  1811               	btfsc	17,0	;volatile
  4892  0419  2C1B               	goto	u1961
  4893  041A  2C1C               	goto	u1960
  4894  041B                     u1961:
  4895  041B  2C18               	goto	l400
  4896  041C                     u1960:
  4897  041C                     l2320:
  4898  041C  0C0F               	rrf	15,w	;volatile
  4899  041D  0C89               	rrf	9,f
  4900  041E  3901               	andlw	1
  4901  041F  00F2               	movwf	??_tsttc
  4902  0420  0811               	movf	17,w	;volatile
  4903  0421  391F               	andlw	31
  4904  0422  0472               	iorwf	??_tsttc,w
  4905  0423  1D03               	btfss	3,2
  4906  0424  2C26               	goto	u1971
  4907  0425  2C27               	goto	u1970
  4908  0426                     u1971:
  4909  0426  2C1C               	goto	l2320
  4910  0427                     u1970:
  4911  0427                     l2322:
  4912                           
  4913                           ;main.c: 70: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4914  0427  309A               	movlw	154
  4915  0428  3186  265B  3183   	fcall	_WriteI2C
  4916  042B                     l2324:
  4917  042B  0023               	movlb	3	; select bank3
  4918  042C  0C0F               	rrf	15,w	;volatile
  4919  042D  0C89               	rrf	9,f
  4920  042E  3901               	andlw	1
  4921  042F  00F2               	movwf	??_tsttc
  4922  0430  0811               	movf	17,w	;volatile
  4923  0431  391F               	andlw	31
  4924  0432  0472               	iorwf	??_tsttc,w
  4925  0433  1D03               	btfss	3,2
  4926  0434  2C36               	goto	u1981
  4927  0435  2C37               	goto	u1980
  4928  0436                     u1981:
  4929  0436  2C2B               	goto	l2324
  4930  0437                     u1980:
  4931  0437                     l2326:
  4932                           
  4933                           ;main.c: 71: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4934  0437  3000               	movlw	0
  4935  0438  3186  265B  3183   	fcall	_WriteI2C
  4936  043B                     l2328:
  4937  043B  0023               	movlb	3	; select bank3
  4938  043C  0C0F               	rrf	15,w	;volatile
  4939  043D  0C89               	rrf	9,f
  4940  043E  3901               	andlw	1
  4941  043F  00F2               	movwf	??_tsttc
  4942  0440  0811               	movf	17,w	;volatile
  4943  0441  391F               	andlw	31
  4944  0442  0472               	iorwf	??_tsttc,w
  4945  0443  1D03               	btfss	3,2
  4946  0444  2C46               	goto	u1991
  4947  0445  2C47               	goto	u1990
  4948  0446                     u1991:
  4949  0446  2C3B               	goto	l2328
  4950  0447                     u1990:
  4951  0447                     l411:
  4952                           
  4953                           ;main.c: 72: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
  4954  0447  1491               	bsf	17,1	;volatile
  4955  0448                     l412:
  4956  0448  1891               	btfsc	17,1	;volatile
  4957  0449  2C4B               	goto	u2001
  4958  044A  2C4C               	goto	u2000
  4959  044B                     u2001:
  4960  044B  2C48               	goto	l412
  4961  044C                     u2000:
  4962  044C                     l2330:
  4963  044C  0C0F               	rrf	15,w	;volatile
  4964  044D  0C89               	rrf	9,f
  4965  044E  3901               	andlw	1
  4966  044F  00F2               	movwf	??_tsttc
  4967  0450  0811               	movf	17,w	;volatile
  4968  0451  391F               	andlw	31
  4969  0452  0472               	iorwf	??_tsttc,w
  4970  0453  1D03               	btfss	3,2
  4971  0454  2C56               	goto	u2011
  4972  0455  2C57               	goto	u2010
  4973  0456                     u2011:
  4974  0456  2C4C               	goto	l2330
  4975  0457                     u2010:
  4976  0457                     l2332:
  4977                           
  4978                           ;main.c: 73: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4979  0457  309B               	movlw	155
  4980  0458  3186  265B  3183   	fcall	_WriteI2C
  4981  045B                     l2334:
  4982  045B  0023               	movlb	3	; select bank3
  4983  045C  0C0F               	rrf	15,w	;volatile
  4984  045D  0C89               	rrf	9,f
  4985  045E  3901               	andlw	1
  4986  045F  00F2               	movwf	??_tsttc
  4987  0460  0811               	movf	17,w	;volatile
  4988  0461  391F               	andlw	31
  4989  0462  0472               	iorwf	??_tsttc,w
  4990  0463  1D03               	btfss	3,2
  4991  0464  2C66               	goto	u2021
  4992  0465  2C67               	goto	u2020
  4993  0466                     u2021:
  4994  0466  2C5B               	goto	l2334
  4995  0467                     u2020:
  4996  0467                     l2336:
  4997                           
  4998                           ;main.c: 74: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4999  0467  3187  27CE  3183   	fcall	_ReadI2C
  5000  046A  00F2               	movwf	??_tsttc
  5001  046B  0872               	movf	??_tsttc,w
  5002  046C  00F3               	movwf	tsttc@value
  5003  046D                     l2338:
  5004  046D  0023               	movlb	3	; select bank3
  5005  046E  0C0F               	rrf	15,w	;volatile
  5006  046F  0C89               	rrf	9,f
  5007  0470  3901               	andlw	1
  5008  0471  00F2               	movwf	??_tsttc
  5009  0472  0811               	movf	17,w	;volatile
  5010  0473  391F               	andlw	31
  5011  0474  0472               	iorwf	??_tsttc,w
  5012  0475  1D03               	btfss	3,2
  5013  0476  2C78               	goto	u2031
  5014  0477  2C79               	goto	u2030
  5015  0478                     u2031:
  5016  0478  2C6D               	goto	l2338
  5017  0479                     u2030:
  5018  0479                     l423:
  5019                           
  5020                           ;main.c: 75: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  5021  0479  1691               	bsf	17,5	;volatile
  5022  047A  1611               	bsf	17,4	;volatile
  5023  047B                     l424:
  5024  047B  1A11               	btfsc	17,4	;volatile
  5025  047C  2C7E               	goto	u2041
  5026  047D  2C7F               	goto	u2040
  5027  047E                     u2041:
  5028  047E  2C7B               	goto	l424
  5029  047F                     u2040:
  5030  047F                     l2340:
  5031  047F  0C0F               	rrf	15,w	;volatile
  5032  0480  0C89               	rrf	9,f
  5033  0481  3901               	andlw	1
  5034  0482  00F2               	movwf	??_tsttc
  5035  0483  0811               	movf	17,w	;volatile
  5036  0484  391F               	andlw	31
  5037  0485  0472               	iorwf	??_tsttc,w
  5038  0486  1D03               	btfss	3,2
  5039  0487  2C89               	goto	u2051
  5040  0488  2C8A               	goto	u2050
  5041  0489                     u2051:
  5042  0489  2C7F               	goto	l2340
  5043  048A                     u2050:
  5044  048A                     l429:
  5045                           
  5046                           ;main.c: 76: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  5047  048A  1511               	bsf	17,2	;volatile
  5048  048B                     l430:
  5049  048B  1911               	btfsc	17,2	;volatile
  5050  048C  2C8E               	goto	u2061
  5051  048D  2C8F               	goto	u2060
  5052  048E                     u2061:
  5053  048E  2C8B               	goto	l430
  5054  048F                     u2060:
  5055  048F                     l2342:
  5056                           
  5057                           ;main.c: 78: return value;
  5058  048F  0873               	movf	tsttc@value,w
  5059  0490                     l433:
  5060  0490  0008               	return
  5061  0491                     __end_of_tsttc:
  5062                           
  5063                           	psect	text2
  5064  0027                     __ptext2:	
  5065 ;; *************** function _sprintf *****************
  5066 ;; Defined at:
  5067 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  sp              1    wreg     PTR unsigned char 
  5070 ;;		 -> main@buf(17), 
  5071 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  5072 ;;		 -> STR_4(10), STR_3(7), STR_2(11), 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  sp              1   18[BANK0 ] PTR unsigned char 
  5075 ;;		 -> main@buf(17), 
  5076 ;;  idx             1   10[BANK0 ] unsigned char 
  5077 ;;  tmpval          4    0        struct .
  5078 ;;  width           2   16[BANK0 ] int 
  5079 ;;  val             2   13[BANK0 ] unsigned int 
  5080 ;;  cp              2    0        PTR const unsigned char 
  5081 ;;  len             2    0        unsigned int 
  5082 ;;  c               1   19[BANK0 ] unsigned char 
  5083 ;;  flag            1   15[BANK0 ] unsigned char 
  5084 ;;  prec            1   12[BANK0 ] char 
  5085 ;;  ap              1   11[BANK0 ] PTR void [1]
  5086 ;;		 -> ?_sprintf(2), 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  2    0[BANK0 ] int 
  5089 ;; Registers used:
  5090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5096 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5097 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5100 ;;Total ram usage:       20 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    2
  5103 ;; This function calls:
  5104 ;;		___lwdiv
  5105 ;;		___lwmod
  5106 ;;		___wmul
  5107 ;;		_isdigit
  5108 ;; This function is called by:
  5109 ;;		_main
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           
  5114                           ;psect for function _sprintf
  5115  0027                     _sprintf:
  5116                           
  5117                           ;incstack = 0
  5118                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5119                           ;sprintf@sp stored from wreg
  5120  0027  0020               	movlb	0	; select bank0
  5121  0028  00B2               	movwf	sprintf@sp
  5122  0029                     l2454:
  5123                           
  5124                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  5125  0029  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  5126  002A  00A6               	movwf	??_sprintf
  5127  002B  0826               	movf	??_sprintf,w
  5128  002C  00AB               	movwf	sprintf@ap
  5129                           
  5130                           ;doprnt.c: 553: while((c = *f++)) {
  5131  002D  2A25               	goto	l2582
  5132  002E                     l2456:
  5133                           
  5134                           ;doprnt.c: 555: if(c != '%')
  5135  002E  3025               	movlw	37
  5136  002F  0633               	xorwf	sprintf@c,w
  5137  0030  1903               	btfsc	3,2
  5138  0031  2833               	goto	u2351
  5139  0032  2834               	goto	u2350
  5140  0033                     u2351:
  5141  0033  2840               	goto	l2462
  5142  0034                     u2350:
  5143  0034                     l2458:
  5144                           
  5145                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  5146  0034  0833               	movf	sprintf@c,w
  5147  0035  00A6               	movwf	??_sprintf
  5148  0036  0832               	movf	sprintf@sp,w
  5149  0037  0086               	movwf	6
  5150  0038  0187               	clrf	7
  5151  0039  0826               	movf	??_sprintf,w
  5152  003A  0081               	movwf	1
  5153  003B                     l2460:
  5154  003B  3001               	movlw	1
  5155  003C  00A6               	movwf	??_sprintf
  5156  003D  0826               	movf	??_sprintf,w
  5157  003E  07B2               	addwf	sprintf@sp,f
  5158                           
  5159                           ;doprnt.c: 559: continue;
  5160  003F  2A25               	goto	l2582
  5161  0040                     l2462:
  5162                           
  5163                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  5164  0040  01B0               	clrf	sprintf@width
  5165  0041  01B1               	clrf	sprintf@width+1
  5166                           
  5167                           ;doprnt.c: 565: flag = 0;
  5168  0042  01AF               	clrf	sprintf@flag
  5169  0043  2849               	goto	l2468
  5170  0044                     l764:	
  5171                           ;doprnt.c: 596: case '0':
  5172                           
  5173                           
  5174                           ;doprnt.c: 597: flag |= 0x04;
  5175  0044  152F               	bsf	sprintf@flag,2
  5176  0045                     l2464:
  5177                           
  5178                           ;doprnt.c: 598: f++;
  5179  0045  3001               	movlw	1
  5180  0046  07A0               	addwf	sprintf@f,f
  5181  0047  3000               	movlw	0
  5182  0048  3DA1               	addwfc	sprintf@f+1,f
  5183  0049                     l2468:	
  5184                           ;doprnt.c: 599: continue;
  5185                           
  5186  0049  0820               	movf	sprintf@f,w
  5187  004A  0084               	movwf	4
  5188  004B  0821               	movf	sprintf@f+1,w
  5189  004C  0085               	movwf	5
  5190  004D  0800               	movf	0,w	;code access
  5191                           
  5192                           ; Switch size 1, requested type "simple"
  5193                           ; Number of cases is 1, Range of values is 48 to 48
  5194                           ; switch strategies available:
  5195                           ; Name         Instructions Cycles
  5196                           ; simple_byte            4     3 (average)
  5197                           ; direct_byte           11     9 (fixed)
  5198                           ; jumptable            263     9 (fixed)
  5199                           ;	Chosen strategy is simple_byte
  5200  004E  3A30               	xorlw	48	; case 48
  5201  004F  1903               	skipnz
  5202  0050  2844               	goto	l764
  5203  0051  2852               	goto	l2470
  5204  0052                     l2470:
  5205                           
  5206                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  5207  0052  0820               	movf	sprintf@f,w
  5208  0053  0084               	movwf	4
  5209  0054  0821               	movf	sprintf@f+1,w
  5210  0055  0085               	movwf	5
  5211  0056  0800               	movf	0,w	;code access
  5212  0057  318F  27EE  3180   	fcall	_isdigit
  5213  005A  1C03               	btfss	3,0
  5214  005B  285D               	goto	u2361
  5215  005C  285E               	goto	u2360
  5216  005D                     u2361:
  5217  005D  2894               	goto	l2484
  5218  005E                     u2360:
  5219  005E                     l2472:
  5220                           
  5221                           ;doprnt.c: 615: width = 0;
  5222  005E  0020               	movlb	0	; select bank0
  5223  005F  01B0               	clrf	sprintf@width
  5224  0060  01B1               	clrf	sprintf@width+1
  5225  0061                     l2474:
  5226                           
  5227                           ;doprnt.c: 617: width *= 10;
  5228  0061  300A               	movlw	10
  5229  0062  00F0               	movwf	___wmul@multiplier
  5230  0063  3000               	movlw	0
  5231  0064  00F1               	movwf	___wmul@multiplier+1
  5232  0065  0020               	movlb	0	; select bank0
  5233  0066  0831               	movf	sprintf@width+1,w
  5234  0067  00F3               	movwf	___wmul@multiplicand+1
  5235  0068  0830               	movf	sprintf@width,w
  5236  0069  00F2               	movwf	___wmul@multiplicand
  5237  006A  3187  2794  3180   	fcall	___wmul
  5238  006D  0871               	movf	?___wmul+1,w
  5239  006E  0020               	movlb	0	; select bank0
  5240  006F  00B1               	movwf	sprintf@width+1
  5241  0070  0870               	movf	?___wmul,w
  5242  0071  00B0               	movwf	sprintf@width
  5243  0072                     l2476:
  5244                           
  5245                           ;doprnt.c: 618: width += *f++ - '0';
  5246  0072  0820               	movf	sprintf@f,w
  5247  0073  0084               	movwf	4
  5248  0074  0821               	movf	sprintf@f+1,w
  5249  0075  0085               	movwf	5
  5250  0076  0800               	movf	0,w	;code access
  5251  0077  3ED0               	addlw	208
  5252  0078  00A6               	movwf	??_sprintf
  5253  0079  30FF               	movlw	255
  5254  007A  1803               	skipnc
  5255  007B  3000               	movlw	0
  5256  007C  00A7               	movwf	??_sprintf+1
  5257  007D  0826               	movf	??_sprintf,w
  5258  007E  07B0               	addwf	sprintf@width,f
  5259  007F  0827               	movf	??_sprintf+1,w
  5260  0080  3DB1               	addwfc	sprintf@width+1,f
  5261  0081                     l2478:
  5262  0081  3001               	movlw	1
  5263  0082  07A0               	addwf	sprintf@f,f
  5264  0083  3000               	movlw	0
  5265  0084  3DA1               	addwfc	sprintf@f+1,f
  5266  0085                     l2480:
  5267                           
  5268                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  5269  0085  0820               	movf	sprintf@f,w
  5270  0086  0084               	movwf	4
  5271  0087  0821               	movf	sprintf@f+1,w
  5272  0088  0085               	movwf	5
  5273  0089  0800               	movf	0,w	;code access
  5274  008A  318F  27EE  3180   	fcall	_isdigit
  5275  008D  1803               	btfsc	3,0
  5276  008E  2890               	goto	u2371
  5277  008F  2891               	goto	u2370
  5278  0090                     u2371:
  5279  0090  2861               	goto	l2474
  5280  0091                     u2370:
  5281  0091  2894               	goto	l2484
  5282  0092                     l777:	
  5283                           ;doprnt.c: 744: case 'x':
  5284                           
  5285                           
  5286                           ;doprnt.c: 747: flag |= 0x80;
  5287  0092  17AF               	bsf	sprintf@flag,7
  5288                           
  5289                           ;doprnt.c: 749: break;
  5290  0093  28AF               	goto	l776
  5291  0094                     l2484:
  5292  0094  0020               	movlb	0	; select bank0
  5293  0095  0821               	movf	sprintf@f+1,w
  5294  0096  00A7               	movwf	??_sprintf+1
  5295  0097  0820               	movf	sprintf@f,w
  5296  0098  00A6               	movwf	??_sprintf
  5297  0099  0AA0               	incf	sprintf@f,f
  5298  009A  1903               	skipnz
  5299  009B  0AA1               	incf	sprintf@f+1,f
  5300  009C  0826               	movf	??_sprintf,w
  5301  009D  0084               	movwf	4
  5302  009E  0827               	movf	??_sprintf+1,w
  5303  009F  0085               	movwf	5
  5304  00A0  0800               	movf	0,w	;code access
  5305  00A1  00B3               	movwf	sprintf@c
  5306                           
  5307                           ; Switch size 1, requested type "simple"
  5308                           ; Number of cases is 4, Range of values is 0 to 120
  5309                           ; switch strategies available:
  5310                           ; Name         Instructions Cycles
  5311                           ; simple_byte           13     7 (average)
  5312                           ; direct_byte          248     6 (fixed)
  5313                           ; jumptable            260     6 (fixed)
  5314                           ;	Chosen strategy is simple_byte
  5315  00A2  3A00               	xorlw	0	; case 0
  5316  00A3  1903               	skipnz
  5317  00A4  2A39               	goto	l2584
  5318  00A5  3A64               	xorlw	100	; case 100
  5319  00A6  1903               	skipnz
  5320  00A7  28AF               	goto	l776
  5321  00A8  3A0D               	xorlw	13	; case 105
  5322  00A9  1903               	skipnz
  5323  00AA  28AF               	goto	l776
  5324  00AB  3A11               	xorlw	17	; case 120
  5325  00AC  1903               	skipnz
  5326  00AD  2892               	goto	l777
  5327  00AE  2A25               	goto	l2582
  5328  00AF                     l776:
  5329                           
  5330                           ;doprnt.c: 1277: if((flag & 0x80) == 0x00)
  5331  00AF  1BAF               	btfsc	sprintf@flag,7
  5332  00B0  28B2               	goto	u2381
  5333  00B1  28B3               	goto	u2380
  5334  00B2                     u2381:
  5335  00B2  28CC               	goto	l2496
  5336  00B3                     u2380:
  5337  00B3                     l2486:
  5338                           
  5339                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  5340  00B3  082B               	movf	sprintf@ap,w
  5341  00B4  0086               	movwf	6
  5342  00B5  0187               	clrf	7
  5343  00B6  3F40               	moviw [0]fsr1
  5344  00B7  00AD               	movwf	sprintf@val
  5345  00B8  3F41               	moviw [1]fsr1
  5346  00B9  00AE               	movwf	sprintf@val+1
  5347  00BA                     l2488:
  5348  00BA  3002               	movlw	2
  5349  00BB  00A6               	movwf	??_sprintf
  5350  00BC  0826               	movf	??_sprintf,w
  5351  00BD  07AB               	addwf	sprintf@ap,f
  5352  00BE                     l2490:
  5353                           
  5354                           ;doprnt.c: 1287: if((int)val < 0) {
  5355  00BE  1FAE               	btfss	sprintf@val+1,7
  5356  00BF  28C1               	goto	u2391
  5357  00C0  28C2               	goto	u2390
  5358  00C1                     u2391:
  5359  00C1  2926               	goto	l2522
  5360  00C2                     u2390:
  5361  00C2                     l2492:
  5362                           
  5363                           ;doprnt.c: 1288: flag |= 0x03;
  5364  00C2  3003               	movlw	3
  5365  00C3  00A6               	movwf	??_sprintf
  5366  00C4  0826               	movf	??_sprintf,w
  5367  00C5  04AF               	iorwf	sprintf@flag,f
  5368  00C6                     l2494:
  5369                           
  5370                           ;doprnt.c: 1289: val = -val;
  5371  00C6  09AD               	comf	sprintf@val,f
  5372  00C7  09AE               	comf	sprintf@val+1,f
  5373  00C8  0AAD               	incf	sprintf@val,f
  5374  00C9  1903               	skipnz
  5375  00CA  0AAE               	incf	sprintf@val+1,f
  5376  00CB  2926               	goto	l2522
  5377  00CC                     l2496:
  5378                           
  5379                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  5380  00CC  082B               	movf	sprintf@ap,w
  5381  00CD  0086               	movwf	6
  5382  00CE  0187               	clrf	7
  5383  00CF  3F40               	moviw [0]fsr1
  5384  00D0  00AD               	movwf	sprintf@val
  5385  00D1  3F41               	moviw [1]fsr1
  5386  00D2  00AE               	movwf	sprintf@val+1
  5387  00D3                     l2498:
  5388  00D3  3002               	movlw	2
  5389  00D4  00A6               	movwf	??_sprintf
  5390  00D5  0826               	movf	??_sprintf,w
  5391  00D6  07AB               	addwf	sprintf@ap,f
  5392  00D7  2926               	goto	l2522
  5393  00D8                     l783:	
  5394                           ;doprnt.c: 1325: case 0x00:
  5395                           
  5396                           
  5397                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5398  00D8  01B3               	clrf	sprintf@c
  5399  00D9  0AB3               	incf	sprintf@c,f
  5400  00DA                     l2504:
  5401                           
  5402                           ;doprnt.c: 1332: if(val < dpowers[c])
  5403  00DA  0833               	movf	sprintf@c,w
  5404  00DB  00A6               	movwf	??_sprintf
  5405  00DC  01A7               	clrf	??_sprintf+1
  5406  00DD  35A6               	lslf	??_sprintf,f
  5407  00DE  0DA7               	rlf	??_sprintf+1,f
  5408  00DF  300B               	movlw	low (_dpowers| (0+32768))
  5409  00E0  0726               	addwf	??_sprintf,w
  5410  00E1  0084               	movwf	4
  5411  00E2  3090               	movlw	high (_dpowers| (0+32768))
  5412  00E3  3D27               	addwfc	??_sprintf+1,w
  5413  00E4  0085               	movwf	5
  5414  00E5  3F00               	moviw [0]fsr0
  5415  00E6  00A8               	movwf	??_sprintf+2
  5416  00E7  3F01               	moviw [1]fsr0
  5417  00E8  00A9               	movwf	??_sprintf+3
  5418  00E9  0829               	movf	??_sprintf+3,w
  5419  00EA  022E               	subwf	sprintf@val+1,w
  5420  00EB  1D03               	skipz
  5421  00EC  28EF               	goto	u2405
  5422  00ED  0828               	movf	??_sprintf+2,w
  5423  00EE  022D               	subwf	sprintf@val,w
  5424  00EF                     u2405:
  5425  00EF  1803               	skipnc
  5426  00F0  28F2               	goto	u2401
  5427  00F1  28F3               	goto	u2400
  5428  00F2                     u2401:
  5429  00F2  28F4               	goto	l2508
  5430  00F3                     u2400:
  5431  00F3  292F               	goto	l2524
  5432  00F4                     l2508:
  5433  00F4  3001               	movlw	1
  5434  00F5  00A6               	movwf	??_sprintf
  5435  00F6  0826               	movf	??_sprintf,w
  5436  00F7  07B3               	addwf	sprintf@c,f
  5437  00F8  3005               	movlw	5
  5438  00F9  0633               	xorwf	sprintf@c,w
  5439  00FA  1D03               	btfss	3,2
  5440  00FB  28FD               	goto	u2411
  5441  00FC  28FE               	goto	u2410
  5442  00FD                     u2411:
  5443  00FD  28DA               	goto	l2504
  5444  00FE                     u2410:
  5445  00FE  292F               	goto	l2524
  5446  00FF                     l788:	
  5447                           ;doprnt.c: 1340: case 0x80:
  5448                           
  5449                           
  5450                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5451  00FF  01B3               	clrf	sprintf@c
  5452  0100  0AB3               	incf	sprintf@c,f
  5453  0101                     l2514:
  5454                           
  5455                           ;doprnt.c: 1343: if(val < hexpowers[c])
  5456  0101  0833               	movf	sprintf@c,w
  5457  0102  00A6               	movwf	??_sprintf
  5458  0103  01A7               	clrf	??_sprintf+1
  5459  0104  35A6               	lslf	??_sprintf,f
  5460  0105  0DA7               	rlf	??_sprintf+1,f
  5461  0106  30E8               	movlw	low (_hexpowers| (0+32768))
  5462  0107  0726               	addwf	??_sprintf,w
  5463  0108  0084               	movwf	4
  5464  0109  3087               	movlw	high (_hexpowers| (0+32768))
  5465  010A  3D27               	addwfc	??_sprintf+1,w
  5466  010B  0085               	movwf	5
  5467  010C  3F00               	moviw [0]fsr0
  5468  010D  00A8               	movwf	??_sprintf+2
  5469  010E  3F01               	moviw [1]fsr0
  5470  010F  00A9               	movwf	??_sprintf+3
  5471  0110  0829               	movf	??_sprintf+3,w
  5472  0111  022E               	subwf	sprintf@val+1,w
  5473  0112  1D03               	skipz
  5474  0113  2916               	goto	u2425
  5475  0114  0828               	movf	??_sprintf+2,w
  5476  0115  022D               	subwf	sprintf@val,w
  5477  0116                     u2425:
  5478  0116  1803               	skipnc
  5479  0117  2919               	goto	u2421
  5480  0118  291A               	goto	u2420
  5481  0119                     u2421:
  5482  0119  291B               	goto	l2518
  5483  011A                     u2420:
  5484  011A  292F               	goto	l2524
  5485  011B                     l2518:
  5486  011B  3001               	movlw	1
  5487  011C  00A6               	movwf	??_sprintf
  5488  011D  0826               	movf	??_sprintf,w
  5489  011E  07B3               	addwf	sprintf@c,f
  5490  011F  3004               	movlw	4
  5491  0120  0633               	xorwf	sprintf@c,w
  5492  0121  1D03               	btfss	3,2
  5493  0122  2924               	goto	u2431
  5494  0123  2925               	goto	u2430
  5495  0124                     u2431:
  5496  0124  2901               	goto	l2514
  5497  0125                     u2430:
  5498  0125  292F               	goto	l2524
  5499  0126                     l2522:
  5500  0126  082F               	movf	sprintf@flag,w
  5501  0127  3980               	andlw	128
  5502                           
  5503                           ; Switch size 1, requested type "simple"
  5504                           ; Number of cases is 2, Range of values is 0 to 128
  5505                           ; switch strategies available:
  5506                           ; Name         Instructions Cycles
  5507                           ; simple_byte            7     4 (average)
  5508                           ; jumptable            260     6 (fixed)
  5509                           ;	Chosen strategy is simple_byte
  5510  0128  3A00               	xorlw	0	; case 0
  5511  0129  1903               	skipnz
  5512  012A  28D8               	goto	l783
  5513  012B  3A80               	xorlw	128	; case 128
  5514  012C  1903               	skipnz
  5515  012D  28FF               	goto	l788
  5516  012E  292F               	goto	l2524
  5517  012F                     l2524:
  5518                           
  5519                           ;doprnt.c: 1371: if(width && flag & 0x03)
  5520  012F  0830               	movf	sprintf@width,w
  5521  0130  0431               	iorwf	sprintf@width+1,w
  5522  0131  1903               	btfsc	3,2
  5523  0132  2934               	goto	u2441
  5524  0133  2935               	goto	u2440
  5525  0134                     u2441:
  5526  0134  293F               	goto	l792
  5527  0135                     u2440:
  5528  0135                     l2526:
  5529  0135  082F               	movf	sprintf@flag,w
  5530  0136  3903               	andlw	3
  5531  0137  1903               	btfsc	3,2
  5532  0138  293A               	goto	u2451
  5533  0139  293B               	goto	u2450
  5534  013A                     u2451:
  5535  013A  293F               	goto	l792
  5536  013B                     u2450:
  5537  013B                     l2528:
  5538                           
  5539                           ;doprnt.c: 1372: width--;
  5540  013B  30FF               	movlw	255
  5541  013C  07B0               	addwf	sprintf@width,f
  5542  013D  30FF               	movlw	255
  5543  013E  3DB1               	addwfc	sprintf@width+1,f
  5544  013F                     l792:
  5545                           
  5546                           ;doprnt.c: 1407: if(width > c)
  5547  013F  0831               	movf	sprintf@width+1,w
  5548  0140  3A80               	xorlw	128
  5549  0141  3C80               	sublw	128
  5550  0142  1D03               	skipz
  5551  0143  2946               	goto	u2465
  5552  0144  0830               	movf	sprintf@width,w
  5553  0145  0233               	subwf	sprintf@c,w
  5554  0146                     u2465:
  5555  0146  1803               	skipnc
  5556  0147  2949               	goto	u2461
  5557  0148  294A               	goto	u2460
  5558  0149                     u2461:
  5559  0149  2953               	goto	l2532
  5560  014A                     u2460:
  5561  014A                     l2530:
  5562                           
  5563                           ;doprnt.c: 1408: width -= c;
  5564  014A  0020               	movlb	0	; select bank0
  5565  014B  0833               	movf	sprintf@c,w
  5566  014C  00A6               	movwf	??_sprintf
  5567  014D  01A7               	clrf	??_sprintf+1
  5568  014E  0826               	movf	??_sprintf,w
  5569  014F  02B0               	subwf	sprintf@width,f
  5570  0150  0827               	movf	??_sprintf+1,w
  5571  0151  3BB1               	subwfb	sprintf@width+1,f
  5572  0152  2956               	goto	l2534
  5573  0153                     l2532:
  5574                           
  5575                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  5576  0153  0020               	movlb	0	; select bank0
  5577  0154  01B0               	clrf	sprintf@width
  5578  0155  01B1               	clrf	sprintf@width+1
  5579  0156                     l2534:
  5580                           
  5581                           ;doprnt.c: 1413: if(flag & 0x04) {
  5582  0156  1D2F               	btfss	sprintf@flag,2
  5583  0157  2959               	goto	u2471
  5584  0158  295A               	goto	u2470
  5585  0159                     u2471:
  5586  0159  2987               	goto	l2550
  5587  015A                     u2470:
  5588  015A                     l2536:
  5589                           
  5590                           ;doprnt.c: 1418: if(flag & 0x03)
  5591  015A  082F               	movf	sprintf@flag,w
  5592  015B  3903               	andlw	3
  5593  015C  1903               	btfsc	3,2
  5594  015D  295F               	goto	u2481
  5595  015E  2960               	goto	u2480
  5596  015F                     u2481:
  5597  015F  296B               	goto	l2542
  5598  0160                     u2480:
  5599  0160                     l2538:
  5600                           
  5601                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  5602  0160  302D               	movlw	45
  5603  0161  00A6               	movwf	??_sprintf
  5604  0162  0832               	movf	sprintf@sp,w
  5605  0163  0086               	movwf	6
  5606  0164  0187               	clrf	7
  5607  0165  0826               	movf	??_sprintf,w
  5608  0166  0081               	movwf	1
  5609  0167                     l2540:
  5610  0167  3001               	movlw	1
  5611  0168  00A6               	movwf	??_sprintf
  5612  0169  0826               	movf	??_sprintf,w
  5613  016A  07B2               	addwf	sprintf@sp,f
  5614  016B                     l2542:
  5615                           
  5616                           ;doprnt.c: 1441: if(width)
  5617  016B  0830               	movf	sprintf@width,w
  5618  016C  0431               	iorwf	sprintf@width+1,w
  5619  016D  1903               	btfsc	3,2
  5620  016E  2970               	goto	u2491
  5621  016F  2971               	goto	u2490
  5622  0170                     u2491:
  5623  0170  29B3               	goto	l2564
  5624  0171                     u2490:
  5625  0171                     l2544:
  5626                           
  5627                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  5628  0171  3030               	movlw	48
  5629  0172  00A6               	movwf	??_sprintf
  5630  0173  0832               	movf	sprintf@sp,w
  5631  0174  0086               	movwf	6
  5632  0175  0187               	clrf	7
  5633  0176  0826               	movf	??_sprintf,w
  5634  0177  0081               	movwf	1
  5635  0178                     l2546:
  5636  0178  3001               	movlw	1
  5637  0179  00A6               	movwf	??_sprintf
  5638  017A  0826               	movf	??_sprintf,w
  5639  017B  07B2               	addwf	sprintf@sp,f
  5640  017C                     l2548:
  5641                           
  5642                           ;doprnt.c: 1444: while(--width);
  5643  017C  30FF               	movlw	255
  5644  017D  07B0               	addwf	sprintf@width,f
  5645  017E  30FF               	movlw	255
  5646  017F  3DB1               	addwfc	sprintf@width+1,f
  5647  0180  0830               	movf	sprintf@width,w
  5648  0181  0431               	iorwf	sprintf@width+1,w
  5649  0182  1D03               	btfss	3,2
  5650  0183  2985               	goto	u2501
  5651  0184  2986               	goto	u2500
  5652  0185                     u2501:
  5653  0185  2971               	goto	l2544
  5654  0186                     u2500:
  5655  0186  29B3               	goto	l2564
  5656  0187                     l2550:
  5657                           
  5658                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  5659  0187  0830               	movf	sprintf@width,w
  5660  0188  0431               	iorwf	sprintf@width+1,w
  5661  0189  1903               	btfsc	3,2
  5662  018A  298C               	goto	u2511
  5663  018B  298D               	goto	u2510
  5664  018C                     u2511:
  5665  018C  29A2               	goto	l2558
  5666  018D                     u2510:
  5667  018D                     l2552:
  5668                           
  5669                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  5670  018D  3020               	movlw	32
  5671  018E  00A6               	movwf	??_sprintf
  5672  018F  0832               	movf	sprintf@sp,w
  5673  0190  0086               	movwf	6
  5674  0191  0187               	clrf	7
  5675  0192  0826               	movf	??_sprintf,w
  5676  0193  0081               	movwf	1
  5677  0194                     l2554:
  5678  0194  3001               	movlw	1
  5679  0195  00A6               	movwf	??_sprintf
  5680  0196  0826               	movf	??_sprintf,w
  5681  0197  07B2               	addwf	sprintf@sp,f
  5682  0198                     l2556:
  5683                           
  5684                           ;doprnt.c: 1457: while(--width);
  5685  0198  30FF               	movlw	255
  5686  0199  07B0               	addwf	sprintf@width,f
  5687  019A  30FF               	movlw	255
  5688  019B  3DB1               	addwfc	sprintf@width+1,f
  5689  019C  0830               	movf	sprintf@width,w
  5690  019D  0431               	iorwf	sprintf@width+1,w
  5691  019E  1D03               	btfss	3,2
  5692  019F  29A1               	goto	u2521
  5693  01A0  29A2               	goto	u2520
  5694  01A1                     u2521:
  5695  01A1  298D               	goto	l2552
  5696  01A2                     u2520:
  5697  01A2                     l2558:
  5698                           
  5699                           ;doprnt.c: 1464: if(flag & 0x03)
  5700  01A2  082F               	movf	sprintf@flag,w
  5701  01A3  3903               	andlw	3
  5702  01A4  1903               	btfsc	3,2
  5703  01A5  29A7               	goto	u2531
  5704  01A6  29A8               	goto	u2530
  5705  01A7                     u2531:
  5706  01A7  29B3               	goto	l2564
  5707  01A8                     u2530:
  5708  01A8                     l2560:
  5709                           
  5710                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  5711  01A8  302D               	movlw	45
  5712  01A9  00A6               	movwf	??_sprintf
  5713  01AA  0832               	movf	sprintf@sp,w
  5714  01AB  0086               	movwf	6
  5715  01AC  0187               	clrf	7
  5716  01AD  0826               	movf	??_sprintf,w
  5717  01AE  0081               	movwf	1
  5718  01AF                     l2562:
  5719  01AF  3001               	movlw	1
  5720  01B0  00A6               	movwf	??_sprintf
  5721  01B1  0826               	movf	??_sprintf,w
  5722  01B2  07B2               	addwf	sprintf@sp,f
  5723  01B3                     l2564:
  5724                           
  5725                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  5726  01B3  0833               	movf	sprintf@c,w
  5727  01B4  00A6               	movwf	??_sprintf
  5728  01B5  0826               	movf	??_sprintf,w
  5729  01B6  00AC               	movwf	sprintf@prec
  5730                           
  5731                           ;doprnt.c: 1500: while(prec--) {
  5732  01B7  2A1C               	goto	l2580
  5733  01B8                     l2566:
  5734                           
  5735                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  5736  01B8  300A               	movlw	10
  5737  01B9  00F8               	movwf	___lwmod@divisor
  5738  01BA  3000               	movlw	0
  5739  01BB  00F9               	movwf	___lwmod@divisor+1
  5740  01BC  082C               	movf	sprintf@prec,w
  5741  01BD  00A6               	movwf	??_sprintf
  5742  01BE  01A7               	clrf	??_sprintf+1
  5743  01BF  35A6               	lslf	??_sprintf,f
  5744  01C0  0DA7               	rlf	??_sprintf+1,f
  5745  01C1  300B               	movlw	low (_dpowers| (0+32768))
  5746  01C2  0726               	addwf	??_sprintf,w
  5747  01C3  0084               	movwf	4
  5748  01C4  3090               	movlw	high (_dpowers| (0+32768))
  5749  01C5  3D27               	addwfc	??_sprintf+1,w
  5750  01C6  0085               	movwf	5
  5751  01C7  3F00               	moviw [0]fsr0
  5752  01C8  00F0               	movwf	___lwdiv@divisor
  5753  01C9  3F01               	moviw [1]fsr0
  5754  01CA  00F1               	movwf	___lwdiv@divisor+1
  5755  01CB  082E               	movf	sprintf@val+1,w
  5756  01CC  00F3               	movwf	___lwdiv@dividend+1
  5757  01CD  082D               	movf	sprintf@val,w
  5758  01CE  00F2               	movwf	___lwdiv@dividend
  5759  01CF  3186  26E9  3180   	fcall	___lwdiv
  5760  01D2  0871               	movf	?___lwdiv+1,w
  5761  01D3  00FB               	movwf	___lwmod@dividend+1
  5762  01D4  0870               	movf	?___lwdiv,w
  5763  01D5  00FA               	movwf	___lwmod@dividend
  5764  01D6  3187  2760  3180   	fcall	___lwmod
  5765  01D9  0878               	movf	?___lwmod,w
  5766  01DA  3E30               	addlw	48
  5767  01DB  0020               	movlb	0	; select bank0
  5768  01DC  00A8               	movwf	??_sprintf+2
  5769  01DD  0828               	movf	??_sprintf+2,w
  5770  01DE  00B3               	movwf	sprintf@c
  5771                           
  5772                           ;doprnt.c: 1517: break;
  5773  01DF  2A11               	goto	l2576
  5774  01E0                     l2568:
  5775                           
  5776                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned char)p
      +                          rec]) & 0xF;
  5777  01E0  082C               	movf	sprintf@prec,w
  5778  01E1  00A6               	movwf	??_sprintf
  5779  01E2  01A7               	clrf	??_sprintf+1
  5780  01E3  35A6               	lslf	??_sprintf,f
  5781  01E4  0DA7               	rlf	??_sprintf+1,f
  5782  01E5  30E8               	movlw	low (_hexpowers| (0+32768))
  5783  01E6  0726               	addwf	??_sprintf,w
  5784  01E7  0084               	movwf	4
  5785  01E8  3087               	movlw	high (_hexpowers| (0+32768))
  5786  01E9  3D27               	addwfc	??_sprintf+1,w
  5787  01EA  0085               	movwf	5
  5788  01EB  3F00               	moviw [0]fsr0
  5789  01EC  00F0               	movwf	___lwdiv@divisor
  5790  01ED  3F01               	moviw [1]fsr0
  5791  01EE  00F1               	movwf	___lwdiv@divisor+1
  5792  01EF  082E               	movf	sprintf@val+1,w
  5793  01F0  00F3               	movwf	___lwdiv@dividend+1
  5794  01F1  082D               	movf	sprintf@val,w
  5795  01F2  00F2               	movwf	___lwdiv@dividend
  5796  01F3  3186  26E9  3180   	fcall	___lwdiv
  5797  01F6  0870               	movf	?___lwdiv,w
  5798  01F7  390F               	andlw	15
  5799  01F8  0020               	movlb	0	; select bank0
  5800  01F9  00A8               	movwf	??_sprintf+2
  5801  01FA  0828               	movf	??_sprintf+2,w
  5802  01FB  00AA               	movwf	sprintf@idx
  5803  01FC                     l2570:
  5804                           
  5805                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  5806  01FC  082A               	movf	sprintf@idx,w
  5807  01FD  3EF0               	addlw	low (STR_5| (0+32768))
  5808  01FE  0084               	movwf	4
  5809  01FF  3087               	movlw	high (STR_5| (0+32768))
  5810  0200  1803               	skipnc
  5811  0201  3E01               	addlw	1
  5812  0202  0085               	movwf	5
  5813  0203  0800               	movf	0,w	;code access
  5814  0204  00A6               	movwf	??_sprintf
  5815  0205  0826               	movf	??_sprintf,w
  5816  0206  00B3               	movwf	sprintf@c
  5817                           
  5818                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  5819  0207  2A11               	goto	l2576
  5820  0208                     l2574:
  5821  0208  082F               	movf	sprintf@flag,w
  5822  0209  3980               	andlw	128
  5823                           
  5824                           ; Switch size 1, requested type "simple"
  5825                           ; Number of cases is 2, Range of values is 0 to 128
  5826                           ; switch strategies available:
  5827                           ; Name         Instructions Cycles
  5828                           ; simple_byte            7     4 (average)
  5829                           ; jumptable            260     6 (fixed)
  5830                           ;	Chosen strategy is simple_byte
  5831  020A  3A00               	xorlw	0	; case 0
  5832  020B  1903               	skipnz
  5833  020C  29B8               	goto	l2566
  5834  020D  3A80               	xorlw	128	; case 128
  5835  020E  1903               	skipnz
  5836  020F  29E0               	goto	l2568
  5837  0210  2A11               	goto	l2576
  5838  0211                     l2576:
  5839                           
  5840                           ;doprnt.c: 1550: ((*sp++ = (c)));
  5841  0211  0833               	movf	sprintf@c,w
  5842  0212  00A6               	movwf	??_sprintf
  5843  0213  0832               	movf	sprintf@sp,w
  5844  0214  0086               	movwf	6
  5845  0215  0187               	clrf	7
  5846  0216  0826               	movf	??_sprintf,w
  5847  0217  0081               	movwf	1
  5848  0218                     l2578:
  5849  0218  3001               	movlw	1
  5850  0219  00A6               	movwf	??_sprintf
  5851  021A  0826               	movf	??_sprintf,w
  5852  021B  07B2               	addwf	sprintf@sp,f
  5853  021C                     l2580:
  5854  021C  30FF               	movlw	255
  5855  021D  00A6               	movwf	??_sprintf
  5856  021E  0826               	movf	??_sprintf,w
  5857  021F  07AC               	addwf	sprintf@prec,f
  5858  0220  0A2C               	incf	sprintf@prec,w
  5859  0221  1D03               	btfss	3,2
  5860  0222  2A24               	goto	u2541
  5861  0223  2A25               	goto	u2540
  5862  0224                     u2541:
  5863  0224  2A08               	goto	l2574
  5864  0225                     u2540:
  5865  0225                     l2582:
  5866  0225  0821               	movf	sprintf@f+1,w
  5867  0226  00A7               	movwf	??_sprintf+1
  5868  0227  0820               	movf	sprintf@f,w
  5869  0228  00A6               	movwf	??_sprintf
  5870  0229  0AA0               	incf	sprintf@f,f
  5871  022A  1903               	skipnz
  5872  022B  0AA1               	incf	sprintf@f+1,f
  5873  022C  0826               	movf	??_sprintf,w
  5874  022D  0084               	movwf	4
  5875  022E  0827               	movf	??_sprintf+1,w
  5876  022F  0085               	movwf	5
  5877  0230  0800               	movf	0,w	;code access
  5878  0231  00A8               	movwf	??_sprintf+2
  5879  0232  0828               	movf	??_sprintf+2,w
  5880  0233  00B3               	movwf	sprintf@c
  5881  0234  0833               	movf	sprintf@c,w
  5882  0235  1D03               	btfss	3,2
  5883  0236  2A38               	goto	u2551
  5884  0237  2A39               	goto	u2550
  5885  0238                     u2551:
  5886  0238  282E               	goto	l2456
  5887  0239                     u2550:
  5888  0239                     l2584:
  5889                           
  5890                           ;doprnt.c: 1564: *sp = 0;
  5891  0239  0832               	movf	sprintf@sp,w
  5892  023A  0086               	movwf	6
  5893  023B  0187               	clrf	7
  5894  023C  0181               	clrf	1
  5895  023D                     l813:
  5896  023D  0008               	return
  5897  023E                     __end_of_sprintf:
  5898                           
  5899                           	psect	text3
  5900  0FEE                     __ptext3:	
  5901 ;; *************** function _isdigit *****************
  5902 ;; Defined at:
  5903 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;  c               1    wreg     unsigned char 
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;  c               1    1[COMMON] unsigned char 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;		None               void
  5910 ;; Registers used:
  5911 ;;		wreg, status,2, status,0
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5921 ;;Total ram usage:        2 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:    1
  5924 ;; This function calls:
  5925 ;;		Nothing
  5926 ;; This function is called by:
  5927 ;;		_sprintf
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           
  5932                           ;psect for function _isdigit
  5933  0FEE                     _isdigit:
  5934                           
  5935                           ;incstack = 0
  5936                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5937                           ;isdigit@c stored from wreg
  5938  0FEE  00F1               	movwf	isdigit@c
  5939  0FEF                     l2202:
  5940  0FEF  01F0               	clrf	_isdigit$1516
  5941  0FF0                     l2204:
  5942  0FF0  303A               	movlw	58
  5943  0FF1  0271               	subwf	isdigit@c,w
  5944  0FF2  1803               	skipnc
  5945  0FF3  2FF5               	goto	u1621
  5946  0FF4  2FF6               	goto	u1620
  5947  0FF5                     u1621:
  5948  0FF5  2FFE               	goto	l2210
  5949  0FF6                     u1620:
  5950  0FF6                     l2206:
  5951  0FF6  3030               	movlw	48
  5952  0FF7  0271               	subwf	isdigit@c,w
  5953  0FF8  1C03               	skipc
  5954  0FF9  2FFB               	goto	u1631
  5955  0FFA  2FFC               	goto	u1630
  5956  0FFB                     u1631:
  5957  0FFB  2FFE               	goto	l2210
  5958  0FFC                     u1630:
  5959  0FFC                     l2208:
  5960  0FFC  01F0               	clrf	_isdigit$1516
  5961  0FFD  0AF0               	incf	_isdigit$1516,f
  5962  0FFE                     l2210:
  5963  0FFE  0C70               	rrf	_isdigit$1516,w
  5964  0FFF                     l1270:
  5965  0FFF  0008               	return
  5966  1000                     __end_of_isdigit:
  5967                           
  5968                           	psect	text4
  5969  0794                     __ptext4:	
  5970 ;; *************** function ___wmul *****************
  5971 ;; Defined at:
  5972 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  multiplier      2    0[COMMON] unsigned int 
  5975 ;;  multiplicand    2    2[COMMON] unsigned int 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  product         2    4[COMMON] unsigned int 
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  2    0[COMMON] unsigned int 
  5980 ;; Registers used:
  5981 ;;		wreg, status,2, status,0
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5988 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5990 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5991 ;;Total ram usage:        6 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; Hardware stack levels required when called:    1
  5994 ;; This function calls:
  5995 ;;		Nothing
  5996 ;; This function is called by:
  5997 ;;		_sprintf
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           
  6002                           ;psect for function ___wmul
  6003  0794                     ___wmul:
  6004  0794                     l2214:	
  6005                           ;incstack = 0
  6006                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6007                           
  6008  0794  01F4               	clrf	___wmul@product
  6009  0795  01F5               	clrf	___wmul@product+1
  6010  0796                     l2216:
  6011  0796  1C70               	btfss	___wmul@multiplier,0
  6012  0797  2F99               	goto	u1641
  6013  0798  2F9A               	goto	u1640
  6014  0799                     u1641:
  6015  0799  2F9E               	goto	l817
  6016  079A                     u1640:
  6017  079A                     l2218:
  6018  079A  0872               	movf	___wmul@multiplicand,w
  6019  079B  07F4               	addwf	___wmul@product,f
  6020  079C  0873               	movf	___wmul@multiplicand+1,w
  6021  079D  3DF5               	addwfc	___wmul@product+1,f
  6022  079E                     l817:
  6023  079E  3001               	movlw	1
  6024  079F                     u1655:
  6025  079F  35F2               	lslf	___wmul@multiplicand,f
  6026  07A0  0DF3               	rlf	___wmul@multiplicand+1,f
  6027  07A1  0B89               	decfsz	9,f
  6028  07A2  2F9F               	goto	u1655
  6029  07A3                     l2220:
  6030  07A3  3001               	movlw	1
  6031  07A4                     u1665:
  6032  07A4  36F1               	lsrf	___wmul@multiplier+1,f
  6033  07A5  0CF0               	rrf	___wmul@multiplier,f
  6034  07A6  0B89               	decfsz	9,f
  6035  07A7  2FA4               	goto	u1665
  6036  07A8                     l2222:
  6037  07A8  0870               	movf	___wmul@multiplier,w
  6038  07A9  0471               	iorwf	___wmul@multiplier+1,w
  6039  07AA  1D03               	btfss	3,2
  6040  07AB  2FAD               	goto	u1671
  6041  07AC  2FAE               	goto	u1670
  6042  07AD                     u1671:
  6043  07AD  2F96               	goto	l2216
  6044  07AE                     u1670:
  6045  07AE                     l2224:
  6046  07AE  0875               	movf	___wmul@product+1,w
  6047  07AF  00F1               	movwf	?___wmul+1
  6048  07B0  0874               	movf	___wmul@product,w
  6049  07B1  00F0               	movwf	?___wmul
  6050  07B2                     l819:
  6051  07B2  0008               	return
  6052  07B3                     __end_of___wmul:
  6053                           
  6054                           	psect	text5
  6055  0760                     __ptext5:	
  6056 ;; *************** function ___lwmod *****************
  6057 ;; Defined at:
  6058 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  divisor         2    8[COMMON] unsigned int 
  6061 ;;  dividend        2   10[COMMON] unsigned int 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  counter         1   13[COMMON] unsigned char 
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  2    8[COMMON] unsigned int 
  6066 ;; Registers used:
  6067 ;;		wreg, status,2, status,0
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6076 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6077 ;;Total ram usage:        6 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; Hardware stack levels required when called:    1
  6080 ;; This function calls:
  6081 ;;		Nothing
  6082 ;; This function is called by:
  6083 ;;		_sprintf
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           
  6088                           ;psect for function ___lwmod
  6089  0760                     ___lwmod:
  6090  0760                     l2254:	
  6091                           ;incstack = 0
  6092                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6093                           
  6094  0760  0878               	movf	___lwmod@divisor,w
  6095  0761  0479               	iorwf	___lwmod@divisor+1,w
  6096  0762  1903               	btfsc	3,2
  6097  0763  2F65               	goto	u1751
  6098  0764  2F66               	goto	u1750
  6099  0765                     u1751:
  6100  0765  2F8F               	goto	l2272
  6101  0766                     u1750:
  6102  0766                     l2256:
  6103  0766  01FD               	clrf	___lwmod@counter
  6104  0767  0AFD               	incf	___lwmod@counter,f
  6105  0768  2F72               	goto	l2262
  6106  0769                     l2258:
  6107  0769  3001               	movlw	1
  6108  076A                     u1765:
  6109  076A  35F8               	lslf	___lwmod@divisor,f
  6110  076B  0DF9               	rlf	___lwmod@divisor+1,f
  6111  076C  0B89               	decfsz	9,f
  6112  076D  2F6A               	goto	u1765
  6113  076E                     l2260:
  6114  076E  3001               	movlw	1
  6115  076F  00FC               	movwf	??___lwmod
  6116  0770  087C               	movf	??___lwmod,w
  6117  0771  07FD               	addwf	___lwmod@counter,f
  6118  0772                     l2262:
  6119  0772  1FF9               	btfss	___lwmod@divisor+1,7
  6120  0773  2F75               	goto	u1771
  6121  0774  2F76               	goto	u1770
  6122  0775                     u1771:
  6123  0775  2F69               	goto	l2258
  6124  0776                     u1770:
  6125  0776                     l2264:
  6126  0776  0879               	movf	___lwmod@divisor+1,w
  6127  0777  027B               	subwf	___lwmod@dividend+1,w
  6128  0778  1D03               	skipz
  6129  0779  2F7C               	goto	u1785
  6130  077A  0878               	movf	___lwmod@divisor,w
  6131  077B  027A               	subwf	___lwmod@dividend,w
  6132  077C                     u1785:
  6133  077C  1C03               	skipc
  6134  077D  2F7F               	goto	u1781
  6135  077E  2F80               	goto	u1780
  6136  077F                     u1781:
  6137  077F  2F84               	goto	l2268
  6138  0780                     u1780:
  6139  0780                     l2266:
  6140  0780  0878               	movf	___lwmod@divisor,w
  6141  0781  02FA               	subwf	___lwmod@dividend,f
  6142  0782  0879               	movf	___lwmod@divisor+1,w
  6143  0783  3BFB               	subwfb	___lwmod@dividend+1,f
  6144  0784                     l2268:
  6145  0784  3001               	movlw	1
  6146  0785                     u1795:
  6147  0785  36F9               	lsrf	___lwmod@divisor+1,f
  6148  0786  0CF8               	rrf	___lwmod@divisor,f
  6149  0787  0B89               	decfsz	9,f
  6150  0788  2F85               	goto	u1795
  6151  0789                     l2270:
  6152  0789  3001               	movlw	1
  6153  078A  02FD               	subwf	___lwmod@counter,f
  6154  078B  1D03               	btfss	3,2
  6155  078C  2F8E               	goto	u1801
  6156  078D  2F8F               	goto	u1800
  6157  078E                     u1801:
  6158  078E  2F76               	goto	l2264
  6159  078F                     u1800:
  6160  078F                     l2272:
  6161  078F  087B               	movf	___lwmod@dividend+1,w
  6162  0790  00F9               	movwf	?___lwmod+1
  6163  0791  087A               	movf	___lwmod@dividend,w
  6164  0792  00F8               	movwf	?___lwmod
  6165  0793                     l1099:
  6166  0793  0008               	return
  6167  0794                     __end_of___lwmod:
  6168                           
  6169                           	psect	text6
  6170  06E9                     __ptext6:	
  6171 ;; *************** function ___lwdiv *****************
  6172 ;; Defined at:
  6173 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  divisor         2    0[COMMON] unsigned int 
  6176 ;;  dividend        2    2[COMMON] unsigned int 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  quotient        2    5[COMMON] unsigned int 
  6179 ;;  counter         1    7[COMMON] unsigned char 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  2    0[COMMON] unsigned int 
  6182 ;; Registers used:
  6183 ;;		wreg, status,2, status,0
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6189 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6190 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6192 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6193 ;;Total ram usage:        8 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; Hardware stack levels required when called:    1
  6196 ;; This function calls:
  6197 ;;		Nothing
  6198 ;; This function is called by:
  6199 ;;		_sprintf
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           
  6204                           ;psect for function ___lwdiv
  6205  06E9                     ___lwdiv:
  6206  06E9                     l2228:	
  6207                           ;incstack = 0
  6208                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6209                           
  6210  06E9  01F5               	clrf	___lwdiv@quotient
  6211  06EA  01F6               	clrf	___lwdiv@quotient+1
  6212  06EB                     l2230:
  6213  06EB  0870               	movf	___lwdiv@divisor,w
  6214  06EC  0471               	iorwf	___lwdiv@divisor+1,w
  6215  06ED  1903               	btfsc	3,2
  6216  06EE  2EF0               	goto	u1681
  6217  06EF  2EF1               	goto	u1680
  6218  06F0                     u1681:
  6219  06F0  2F20               	goto	l2250
  6220  06F1                     u1680:
  6221  06F1                     l2232:
  6222  06F1  01F7               	clrf	___lwdiv@counter
  6223  06F2  0AF7               	incf	___lwdiv@counter,f
  6224  06F3  2EFD               	goto	l2238
  6225  06F4                     l2234:
  6226  06F4  3001               	movlw	1
  6227  06F5                     u1695:
  6228  06F5  35F0               	lslf	___lwdiv@divisor,f
  6229  06F6  0DF1               	rlf	___lwdiv@divisor+1,f
  6230  06F7  0B89               	decfsz	9,f
  6231  06F8  2EF5               	goto	u1695
  6232  06F9                     l2236:
  6233  06F9  3001               	movlw	1
  6234  06FA  00F4               	movwf	??___lwdiv
  6235  06FB  0874               	movf	??___lwdiv,w
  6236  06FC  07F7               	addwf	___lwdiv@counter,f
  6237  06FD                     l2238:
  6238  06FD  1FF1               	btfss	___lwdiv@divisor+1,7
  6239  06FE  2F00               	goto	u1701
  6240  06FF  2F01               	goto	u1700
  6241  0700                     u1701:
  6242  0700  2EF4               	goto	l2234
  6243  0701                     u1700:
  6244  0701                     l2240:
  6245  0701  3001               	movlw	1
  6246  0702                     u1715:
  6247  0702  35F5               	lslf	___lwdiv@quotient,f
  6248  0703  0DF6               	rlf	___lwdiv@quotient+1,f
  6249  0704  0B89               	decfsz	9,f
  6250  0705  2F02               	goto	u1715
  6251  0706  0871               	movf	___lwdiv@divisor+1,w
  6252  0707  0273               	subwf	___lwdiv@dividend+1,w
  6253  0708  1D03               	skipz
  6254  0709  2F0C               	goto	u1725
  6255  070A  0870               	movf	___lwdiv@divisor,w
  6256  070B  0272               	subwf	___lwdiv@dividend,w
  6257  070C                     u1725:
  6258  070C  1C03               	skipc
  6259  070D  2F0F               	goto	u1721
  6260  070E  2F10               	goto	u1720
  6261  070F                     u1721:
  6262  070F  2F15               	goto	l2246
  6263  0710                     u1720:
  6264  0710                     l2242:
  6265  0710  0870               	movf	___lwdiv@divisor,w
  6266  0711  02F2               	subwf	___lwdiv@dividend,f
  6267  0712  0871               	movf	___lwdiv@divisor+1,w
  6268  0713  3BF3               	subwfb	___lwdiv@dividend+1,f
  6269  0714                     l2244:
  6270  0714  1475               	bsf	___lwdiv@quotient,0
  6271  0715                     l2246:
  6272  0715  3001               	movlw	1
  6273  0716                     u1735:
  6274  0716  36F1               	lsrf	___lwdiv@divisor+1,f
  6275  0717  0CF0               	rrf	___lwdiv@divisor,f
  6276  0718  0B89               	decfsz	9,f
  6277  0719  2F16               	goto	u1735
  6278  071A                     l2248:
  6279  071A  3001               	movlw	1
  6280  071B  02F7               	subwf	___lwdiv@counter,f
  6281  071C  1D03               	btfss	3,2
  6282  071D  2F1F               	goto	u1741
  6283  071E  2F20               	goto	u1740
  6284  071F                     u1741:
  6285  071F  2F01               	goto	l2240
  6286  0720                     u1740:
  6287  0720                     l2250:
  6288  0720  0876               	movf	___lwdiv@quotient+1,w
  6289  0721  00F1               	movwf	?___lwdiv+1
  6290  0722  0875               	movf	___lwdiv@quotient,w
  6291  0723  00F0               	movwf	?___lwdiv
  6292  0724                     l1089:
  6293  0724  0008               	return
  6294  0725                     __end_of___lwdiv:
  6295                           
  6296                           	psect	text7
  6297  0FE2                     __ptext7:	
  6298 ;; *************** function _i2c1_driver_open *****************
  6299 ;; Defined at:
  6300 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  6301 ;; Parameters:    Size  Location     Type
  6302 ;;		None
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;		None
  6305 ;; Return value:  Size  Location     Type
  6306 ;;		None               void
  6307 ;; Registers used:
  6308 ;;		wreg, status,2
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6318 ;;Total ram usage:        0 bytes
  6319 ;; Hardware stack levels used:    1
  6320 ;; Hardware stack levels required when called:    1
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		_main
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           
  6329                           ;psect for function _i2c1_driver_open
  6330  0FE2                     _i2c1_driver_open:
  6331  0FE2                     l2282:	
  6332                           ;incstack = 0
  6333                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  6334                           
  6335                           
  6336                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  6337  0FE2  0023               	movlb	3	; select bank3
  6338  0FE3  1A90               	btfsc	16,5	;volatile
  6339  0FE4  2FE6               	goto	u1811
  6340  0FE5  2FE7               	goto	u1810
  6341  0FE6                     u1811:
  6342  0FE6  2FED               	goto	l225
  6343  0FE7                     u1810:
  6344  0FE7                     l2284:
  6345                           
  6346                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
  6347  0FE7  018F               	clrf	15	;volatile
  6348  0FE8                     l2286:
  6349                           
  6350                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  6351  0FE8  3028               	movlw	40
  6352  0FE9  0090               	movwf	16	;volatile
  6353  0FEA                     l2288:
  6354                           
  6355                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  6356  0FEA  0191               	clrf	17	;volatile
  6357                           
  6358                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
  6359  0FEB  3003               	movlw	3
  6360  0FEC  008D               	movwf	13	;volatile
  6361  0FED                     l225:
  6362  0FED  0008               	return
  6363  0FEE                     __end_of_i2c1_driver_open:
  6364                           
  6365                           	psect	text8
  6366  0FD8                     __ptext8:	
  6367 ;; *************** function _SYSTEM_Initialize *****************
  6368 ;; Defined at:
  6369 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;		None
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;		None
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  1    wreg      void 
  6376 ;; Registers used:
  6377 ;;		wreg, status,2, status,0, pclath, cstack
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6387 ;;Total ram usage:        0 bytes
  6388 ;; Hardware stack levels used:    1
  6389 ;; Hardware stack levels required when called:    2
  6390 ;; This function calls:
  6391 ;;		_OSCILLATOR_Initialize
  6392 ;;		_PIN_MANAGER_Initialize
  6393 ;;		_PMD_Initialize
  6394 ;; This function is called by:
  6395 ;;		_main
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           
  6400                           ;psect for function _SYSTEM_Initialize
  6401  0FD8                     _SYSTEM_Initialize:
  6402  0FD8                     l2276:	
  6403                           ;incstack = 0
  6404                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6405                           
  6406                           
  6407                           ;mcc.c: 52: PMD_Initialize();
  6408  0FD8  318F  27C7  318F   	fcall	_PMD_Initialize
  6409  0FDB                     l2278:
  6410                           
  6411                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  6412  0FDB  3187  2725  318F   	fcall	_PIN_MANAGER_Initialize
  6413  0FDE                     l2280:
  6414                           
  6415                           ;mcc.c: 54: OSCILLATOR_Initialize();
  6416  0FDE  318F  27CF  318F   	fcall	_OSCILLATOR_Initialize
  6417  0FE1                     l158:
  6418  0FE1  0008               	return
  6419  0FE2                     __end_of_SYSTEM_Initialize:
  6420                           
  6421                           	psect	text9
  6422  0FC7                     __ptext9:	
  6423 ;; *************** function _PMD_Initialize *****************
  6424 ;; Defined at:
  6425 ;;		line 71 in file "mcc_generated_files/mcc.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;		None
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;		None
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  1    wreg      void 
  6432 ;; Registers used:
  6433 ;;		status,2
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6443 ;;Total ram usage:        0 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:    1
  6446 ;; This function calls:
  6447 ;;		Nothing
  6448 ;; This function is called by:
  6449 ;;		_SYSTEM_Initialize
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           
  6454                           ;psect for function _PMD_Initialize
  6455  0FC7                     _PMD_Initialize:
  6456  0FC7                     l2176:	
  6457                           ;incstack = 0
  6458                           ; Regs used in _PMD_Initialize: [status,2]
  6459                           
  6460                           
  6461                           ;mcc.c: 74: PMD0 = 0x00;
  6462  0FC7  002F               	movlb	15	; select bank15
  6463  0FC8  0196               	clrf	22	;volatile
  6464                           
  6465                           ;mcc.c: 76: PMD1 = 0x00;
  6466  0FC9  0197               	clrf	23	;volatile
  6467                           
  6468                           ;mcc.c: 78: PMD2 = 0x00;
  6469  0FCA  0198               	clrf	24	;volatile
  6470                           
  6471                           ;mcc.c: 80: PMD3 = 0x00;
  6472  0FCB  0199               	clrf	25	;volatile
  6473                           
  6474                           ;mcc.c: 82: PMD4 = 0x00;
  6475  0FCC  019A               	clrf	26	;volatile
  6476                           
  6477                           ;mcc.c: 84: PMD5 = 0x00;
  6478  0FCD  019B               	clrf	27	;volatile
  6479  0FCE                     l164:
  6480  0FCE  0008               	return
  6481  0FCF                     __end_of_PMD_Initialize:
  6482                           
  6483                           	psect	text10
  6484  0725                     __ptext10:	
  6485 ;; *************** function _PIN_MANAGER_Initialize *****************
  6486 ;; Defined at:
  6487 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;		None
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;		None
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  1    wreg      void 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6505 ;;Total ram usage:        0 bytes
  6506 ;; Hardware stack levels used:    1
  6507 ;; Hardware stack levels required when called:    1
  6508 ;; This function calls:
  6509 ;;		Nothing
  6510 ;; This function is called by:
  6511 ;;		_SYSTEM_Initialize
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           
  6516                           ;psect for function _PIN_MANAGER_Initialize
  6517  0725                     _PIN_MANAGER_Initialize:
  6518  0725                     l2136:	
  6519                           ;incstack = 0
  6520                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6521                           
  6522                           
  6523                           ;pin_manager.c: 62: LATE = 0x00;
  6524  0725  0020               	movlb	0	; select bank0
  6525  0726  019A               	clrf	26	;volatile
  6526                           
  6527                           ;pin_manager.c: 63: LATD = 0x00;
  6528  0727  0199               	clrf	25	;volatile
  6529                           
  6530                           ;pin_manager.c: 64: LATA = 0x00;
  6531  0728  0196               	clrf	22	;volatile
  6532                           
  6533                           ;pin_manager.c: 65: LATB = 0x00;
  6534  0729  0197               	clrf	23	;volatile
  6535                           
  6536                           ;pin_manager.c: 66: LATC = 0x00;
  6537  072A  0198               	clrf	24	;volatile
  6538  072B                     l2138:
  6539                           
  6540                           ;pin_manager.c: 71: TRISE = 0x07;
  6541  072B  3007               	movlw	7
  6542  072C  0095               	movwf	21	;volatile
  6543  072D                     l2140:
  6544                           
  6545                           ;pin_manager.c: 72: TRISA = 0xFF;
  6546  072D  30FF               	movlw	255
  6547  072E  0091               	movwf	17	;volatile
  6548  072F                     l2142:
  6549                           
  6550                           ;pin_manager.c: 73: TRISB = 0xFF;
  6551  072F  30FF               	movlw	255
  6552  0730  0092               	movwf	18	;volatile
  6553  0731                     l2144:
  6554                           
  6555                           ;pin_manager.c: 74: TRISC = 0xFF;
  6556  0731  30FF               	movlw	255
  6557  0732  0093               	movwf	19	;volatile
  6558  0733                     l2146:
  6559                           
  6560                           ;pin_manager.c: 75: TRISD = 0xFF;
  6561  0733  30FF               	movlw	255
  6562  0734  0094               	movwf	20	;volatile
  6563  0735                     l2148:
  6564                           
  6565                           ;pin_manager.c: 80: ANSELD = 0xFF;
  6566  0735  30FF               	movlw	255
  6567  0736  003E               	movlb	30	; select bank30
  6568  0737  00D9               	movwf	89	;volatile
  6569  0738                     l2150:
  6570                           
  6571                           ;pin_manager.c: 81: ANSELC = 0xE7;
  6572  0738  30E7               	movlw	231
  6573  0739  00CE               	movwf	78	;volatile
  6574  073A                     l2152:
  6575                           
  6576                           ;pin_manager.c: 82: ANSELB = 0xFF;
  6577  073A  30FF               	movlw	255
  6578  073B  00C3               	movwf	67	;volatile
  6579  073C                     l2154:
  6580                           
  6581                           ;pin_manager.c: 83: ANSELE = 0x07;
  6582  073C  3007               	movlw	7
  6583  073D  00E4               	movwf	100	;volatile
  6584  073E                     l2156:
  6585                           
  6586                           ;pin_manager.c: 84: ANSELA = 0xFF;
  6587  073E  30FF               	movlw	255
  6588  073F  00B8               	movwf	56	;volatile
  6589                           
  6590                           ;pin_manager.c: 89: WPUD = 0x00;
  6591  0740  01DA               	clrf	90	;volatile
  6592                           
  6593                           ;pin_manager.c: 90: WPUE = 0x00;
  6594  0741  01E5               	clrf	101	;volatile
  6595                           
  6596                           ;pin_manager.c: 91: WPUB = 0x00;
  6597  0742  01C4               	clrf	68	;volatile
  6598                           
  6599                           ;pin_manager.c: 92: WPUA = 0x00;
  6600  0743  01B9               	clrf	57	;volatile
  6601                           
  6602                           ;pin_manager.c: 93: WPUC = 0x00;
  6603  0744  01CF               	clrf	79	;volatile
  6604                           
  6605                           ;pin_manager.c: 98: ODCONE = 0x00;
  6606  0745  01E6               	clrf	102	;volatile
  6607                           
  6608                           ;pin_manager.c: 99: ODCONA = 0x00;
  6609  0746  01BA               	clrf	58	;volatile
  6610                           
  6611                           ;pin_manager.c: 100: ODCONB = 0x00;
  6612  0747  01C5               	clrf	69	;volatile
  6613                           
  6614                           ;pin_manager.c: 101: ODCONC = 0x00;
  6615  0748  01D0               	clrf	80	;volatile
  6616                           
  6617                           ;pin_manager.c: 102: ODCOND = 0x00;
  6618  0749  01DB               	clrf	91	;volatile
  6619  074A                     l2158:
  6620                           
  6621                           ;pin_manager.c: 107: SLRCONA = 0xFF;
  6622  074A  30FF               	movlw	255
  6623  074B  00BB               	movwf	59	;volatile
  6624  074C                     l2160:
  6625                           
  6626                           ;pin_manager.c: 108: SLRCONB = 0xFF;
  6627  074C  30FF               	movlw	255
  6628  074D  00C6               	movwf	70	;volatile
  6629  074E                     l2162:
  6630                           
  6631                           ;pin_manager.c: 109: SLRCONC = 0xFF;
  6632  074E  30FF               	movlw	255
  6633  074F  00D1               	movwf	81	;volatile
  6634  0750                     l2164:
  6635                           
  6636                           ;pin_manager.c: 110: SLRCOND = 0xFF;
  6637  0750  30FF               	movlw	255
  6638  0751  00DC               	movwf	92	;volatile
  6639  0752                     l2166:
  6640                           
  6641                           ;pin_manager.c: 111: SLRCONE = 0x07;
  6642  0752  3007               	movlw	7
  6643  0753  00E7               	movwf	103	;volatile
  6644  0754                     l2168:
  6645                           
  6646                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
  6647  0754  3013               	movlw	19
  6648  0755  003D               	movlb	29	; select bank29
  6649  0756  00C5               	movwf	69	;volatile
  6650  0757                     l2170:
  6651                           
  6652                           ;pin_manager.c: 121: RC3PPS = 0x14;
  6653  0757  3014               	movlw	20
  6654  0758  003E               	movlb	30	; select bank30
  6655  0759  00A3               	movwf	35	;volatile
  6656  075A                     l2172:
  6657                           
  6658                           ;pin_manager.c: 122: RC4PPS = 0x15;
  6659  075A  3015               	movlw	21
  6660  075B  00A4               	movwf	36	;volatile
  6661  075C                     l2174:
  6662                           
  6663                           ;pin_manager.c: 123: SSP1DATPPS = 0x14;
  6664  075C  3014               	movlw	20
  6665  075D  003D               	movlb	29	; select bank29
  6666  075E  00C6               	movwf	70	;volatile
  6667  075F                     l120:
  6668  075F  0008               	return
  6669  0760                     __end_of_PIN_MANAGER_Initialize:
  6670                           
  6671                           	psect	text11
  6672  0FCF                     __ptext11:	
  6673 ;; *************** function _OSCILLATOR_Initialize *****************
  6674 ;; Defined at:
  6675 ;;		line 57 in file "mcc_generated_files/mcc.c"
  6676 ;; Parameters:    Size  Location     Type
  6677 ;;		None
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;		None
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  1    wreg      void 
  6682 ;; Registers used:
  6683 ;;		wreg, status,2
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6693 ;;Total ram usage:        0 bytes
  6694 ;; Hardware stack levels used:    1
  6695 ;; Hardware stack levels required when called:    1
  6696 ;; This function calls:
  6697 ;;		Nothing
  6698 ;; This function is called by:
  6699 ;;		_SYSTEM_Initialize
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           
  6704                           ;psect for function _OSCILLATOR_Initialize
  6705  0FCF                     _OSCILLATOR_Initialize:
  6706  0FCF                     l2178:	
  6707                           ;incstack = 0
  6708                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6709                           
  6710                           
  6711                           ;mcc.c: 60: OSCCON1 = 0x62;
  6712  0FCF  3062               	movlw	98
  6713  0FD0  0031               	movlb	17	; select bank17
  6714  0FD1  008D               	movwf	13	;volatile
  6715  0FD2                     l2180:
  6716                           
  6717                           ;mcc.c: 62: OSCCON3 = 0x00;
  6718  0FD2  018F               	clrf	15	;volatile
  6719  0FD3                     l2182:
  6720                           
  6721                           ;mcc.c: 64: OSCEN = 0x00;
  6722  0FD3  0191               	clrf	17	;volatile
  6723                           
  6724                           ;mcc.c: 66: OSCFRQ = 0x02;
  6725  0FD4  3002               	movlw	2
  6726  0FD5  0093               	movwf	19	;volatile
  6727  0FD6                     l2184:
  6728                           
  6729                           ;mcc.c: 68: OSCTUNE = 0x00;
  6730  0FD6  0192               	clrf	18	;volatile
  6731  0FD7                     l161:
  6732  0FD7  0008               	return
  6733  0FD8                     __end_of_OSCILLATOR_Initialize:
  6734                           
  6735                           	psect	text12
  6736  07B3                     __ptext12:	
  6737 ;; *************** function _LCDstr *****************
  6738 ;; Defined at:
  6739 ;;		line 182 in file "main.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;  p               2    9[COMMON] PTR unsigned char 
  6742 ;;		 -> main@buf(17), STR_1(5), 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;  c               1    0[BANK0 ] unsigned char 
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1    wreg      void 
  6747 ;; Registers used:
  6748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6754 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6755 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;Total ram usage:        6 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:    4
  6761 ;; This function calls:
  6762 ;;		_LCDchar
  6763 ;; This function is called by:
  6764 ;;		_main
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           
  6769                           ;psect for function _LCDstr
  6770  07B3                     _LCDstr:
  6771  07B3                     l2448:	
  6772                           ;incstack = 0
  6773                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6774                           
  6775                           
  6776                           ;main.c: 184: unsigned char c;;main.c: 186: while((c = *p++)) LCDchar(c);
  6777  07B3  2FB8               	goto	l2452
  6778  07B4                     l2450:
  6779  07B4  0820               	movf	LCDstr@c,w
  6780  07B5  318F  27BF  3187   	fcall	_LCDchar
  6781  07B8                     l2452:
  6782  07B8  087A               	movf	LCDstr@p+1,w
  6783  07B9  00FC               	movwf	??_LCDstr+1
  6784  07BA  0879               	movf	LCDstr@p,w
  6785  07BB  00FB               	movwf	??_LCDstr
  6786  07BC  0AF9               	incf	LCDstr@p,f
  6787  07BD  1903               	skipnz
  6788  07BE  0AFA               	incf	LCDstr@p+1,f
  6789  07BF  087B               	movf	??_LCDstr,w
  6790  07C0  0084               	movwf	4
  6791  07C1  087C               	movf	??_LCDstr+1,w
  6792  07C2  0085               	movwf	5
  6793  07C3  0800               	movf	0,w	;code access
  6794  07C4  00FD               	movwf	??_LCDstr+2
  6795  07C5  087D               	movf	??_LCDstr+2,w
  6796  07C6  0020               	movlb	0	; select bank0
  6797  07C7  00A0               	movwf	LCDstr@c
  6798  07C8  0820               	movf	LCDstr@c,w
  6799  07C9  1D03               	btfss	3,2
  6800  07CA  2FCC               	goto	u2341
  6801  07CB  2FCD               	goto	u2340
  6802  07CC                     u2341:
  6803  07CC  2FB4               	goto	l2450
  6804  07CD                     u2340:
  6805  07CD                     l586:
  6806  07CD  0008               	return
  6807  07CE                     __end_of_LCDstr:
  6808                           
  6809                           	psect	text13
  6810  0FBF                     __ptext13:	
  6811 ;; *************** function _LCDchar *****************
  6812 ;; Defined at:
  6813 ;;		line 177 in file "main.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;  c               1    wreg     unsigned char 
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;  c               1    8[COMMON] unsigned char 
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  1    wreg      void 
  6820 ;; Registers used:
  6821 ;;		wreg, status,2, status,0, pclath, cstack
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6831 ;;Total ram usage:        1 bytes
  6832 ;; Hardware stack levels used:    1
  6833 ;; Hardware stack levels required when called:    3
  6834 ;; This function calls:
  6835 ;;		_LCDsend2x4
  6836 ;; This function is called by:
  6837 ;;		_LCDstr
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           
  6842                           ;psect for function _LCDchar
  6843  0FBF                     _LCDchar:
  6844                           
  6845                           ;incstack = 0
  6846                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
  6847                           ;LCDchar@c stored from wreg
  6848  0FBF  00F8               	movwf	LCDchar@c
  6849  0FC0                     l2200:
  6850                           
  6851                           ;main.c: 179: LCDsend2x4(c, 0x01);
  6852  0FC0  01F2               	clrf	LCDsend2x4@mode
  6853  0FC1  0AF2               	incf	LCDsend2x4@mode,f
  6854  0FC2  0878               	movf	LCDchar@c,w
  6855  0FC3  3184  2491  318F   	fcall	_LCDsend2x4
  6856  0FC6                     l580:
  6857  0FC6  0008               	return
  6858  0FC7                     __end_of_LCDchar:
  6859                           
  6860                           	psect	text14
  6861  023E                     __ptext14:	
  6862 ;; *************** function _LCDrecv *****************
  6863 ;; Defined at:
  6864 ;;		line 95 in file "main.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  mode            1    wreg     unsigned char 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;  mode            1    6[COMMON] unsigned char 
  6869 ;;  lc              1    5[COMMON] unsigned char 
  6870 ;;  hc              1    4[COMMON] unsigned char 
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  1    wreg      unsigned char 
  6873 ;; Registers used:
  6874 ;;		wreg, status,2, status,0, pclath, cstack
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6881 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6882 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6883 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6884 ;;Total ram usage:        5 bytes
  6885 ;; Hardware stack levels used:    1
  6886 ;; Hardware stack levels required when called:    2
  6887 ;; This function calls:
  6888 ;;		_ReadI2C
  6889 ;;		_WriteI2C
  6890 ;; This function is called by:
  6891 ;;		_main
  6892 ;;		_LCDbusy
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           
  6896                           
  6897                           ;psect for function _LCDrecv
  6898  023E                     _LCDrecv:
  6899                           
  6900                           ;incstack = 0
  6901                           ; Regs used in _LCDrecv: [wreg+status,2+status,0+pclath+cstack]
  6902                           ;LCDrecv@mode stored from wreg
  6903  023E  00F6               	movwf	LCDrecv@mode
  6904  023F                     l2346:
  6905  023F                     l2348:	
  6906                           ;main.c: 97: unsigned char hc;;main.c: 98: unsigned char lc;;main.c: 100: while ((SSP1CO
      +                          N2 & 0x1F) | (SSP1STATbits.R_W));
  6907                           
  6908  023F  0023               	movlb	3	; select bank3
  6909  0240  0C0F               	rrf	15,w	;volatile
  6910  0241  0C89               	rrf	9,f
  6911  0242  3901               	andlw	1
  6912  0243  00F2               	movwf	??_LCDrecv
  6913  0244  0811               	movf	17,w	;volatile
  6914  0245  391F               	andlw	31
  6915  0246  0472               	iorwf	??_LCDrecv,w
  6916  0247  1D03               	btfss	3,2
  6917  0248  2A4A               	goto	u2071
  6918  0249  2A4B               	goto	u2070
  6919  024A                     u2071:
  6920  024A  2A3F               	goto	l2348
  6921  024B                     u2070:
  6922  024B                     l459:
  6923                           
  6924                           ;main.c: 101: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  6925  024B  1411               	bsf	17,0	;volatile
  6926  024C                     l460:
  6927  024C  1811               	btfsc	17,0	;volatile
  6928  024D  2A4F               	goto	u2081
  6929  024E  2A50               	goto	u2080
  6930  024F                     u2081:
  6931  024F  2A4C               	goto	l460
  6932  0250                     u2080:
  6933  0250                     l2350:
  6934  0250  0C0F               	rrf	15,w	;volatile
  6935  0251  0C89               	rrf	9,f
  6936  0252  3901               	andlw	1
  6937  0253  00F2               	movwf	??_LCDrecv
  6938  0254  0811               	movf	17,w	;volatile
  6939  0255  391F               	andlw	31
  6940  0256  0472               	iorwf	??_LCDrecv,w
  6941  0257  1D03               	btfss	3,2
  6942  0258  2A5A               	goto	u2091
  6943  0259  2A5B               	goto	u2090
  6944  025A                     u2091:
  6945  025A  2A50               	goto	l2350
  6946  025B                     u2090:
  6947  025B                     l2352:
  6948                           
  6949                           ;main.c: 102: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  6950  025B  304E               	movlw	78
  6951  025C  3186  265B  3182   	fcall	_WriteI2C
  6952  025F                     l2354:
  6953  025F  0023               	movlb	3	; select bank3
  6954  0260  0C0F               	rrf	15,w	;volatile
  6955  0261  0C89               	rrf	9,f
  6956  0262  3901               	andlw	1
  6957  0263  00F2               	movwf	??_LCDrecv
  6958  0264  0811               	movf	17,w	;volatile
  6959  0265  391F               	andlw	31
  6960  0266  0472               	iorwf	??_LCDrecv,w
  6961  0267  1D03               	btfss	3,2
  6962  0268  2A6A               	goto	u2101
  6963  0269  2A6B               	goto	u2100
  6964  026A                     u2101:
  6965  026A  2A5F               	goto	l2354
  6966  026B                     u2100:
  6967  026B                     l2356:
  6968                           
  6969                           ;main.c: 103: WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATb
      +                          its.R_W));
  6970  026B  0876               	movf	LCDrecv@mode,w
  6971  026C  38FA               	iorlw	250
  6972  026D  3186  265B  3182   	fcall	_WriteI2C
  6973  0270                     l2358:
  6974  0270  0023               	movlb	3	; select bank3
  6975  0271  0C0F               	rrf	15,w	;volatile
  6976  0272  0C89               	rrf	9,f
  6977  0273  3901               	andlw	1
  6978  0274  00F2               	movwf	??_LCDrecv
  6979  0275  0811               	movf	17,w	;volatile
  6980  0276  391F               	andlw	31
  6981  0277  0472               	iorwf	??_LCDrecv,w
  6982  0278  1D03               	btfss	3,2
  6983  0279  2A7B               	goto	u2111
  6984  027A  2A7C               	goto	u2110
  6985  027B                     u2111:
  6986  027B  2A70               	goto	l2358
  6987  027C                     u2110:
  6988  027C                     l2360:
  6989                           
  6990                           ;main.c: 104: WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  6991  027C  0876               	movf	LCDrecv@mode,w
  6992  027D  38FE               	iorlw	254
  6993  027E  3186  265B  3182   	fcall	_WriteI2C
  6994  0281                     l2362:
  6995  0281  0023               	movlb	3	; select bank3
  6996  0282  0C0F               	rrf	15,w	;volatile
  6997  0283  0C89               	rrf	9,f
  6998  0284  3901               	andlw	1
  6999  0285  00F2               	movwf	??_LCDrecv
  7000  0286  0811               	movf	17,w	;volatile
  7001  0287  391F               	andlw	31
  7002  0288  0472               	iorwf	??_LCDrecv,w
  7003  0289  1D03               	btfss	3,2
  7004  028A  2A8C               	goto	u2121
  7005  028B  2A8D               	goto	u2120
  7006  028C                     u2121:
  7007  028C  2A81               	goto	l2362
  7008  028D                     u2120:
  7009  028D                     l474:
  7010                           
  7011                           ;main.c: 105: _delay((unsigned long)((1)*(1000000/4000000.0)));
  7012                           ;main.c: 106: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  7013  028D  0023               	movlb	3	; select bank3
  7014  028E  1491               	bsf	17,1	;volatile
  7015  028F                     l475:
  7016  028F  1891               	btfsc	17,1	;volatile
  7017  0290  2A92               	goto	u2131
  7018  0291  2A93               	goto	u2130
  7019  0292                     u2131:
  7020  0292  2A8F               	goto	l475
  7021  0293                     u2130:
  7022  0293                     l2364:
  7023  0293  0C0F               	rrf	15,w	;volatile
  7024  0294  0C89               	rrf	9,f
  7025  0295  3901               	andlw	1
  7026  0296  00F2               	movwf	??_LCDrecv
  7027  0297  0811               	movf	17,w	;volatile
  7028  0298  391F               	andlw	31
  7029  0299  0472               	iorwf	??_LCDrecv,w
  7030  029A  1D03               	btfss	3,2
  7031  029B  2A9D               	goto	u2141
  7032  029C  2A9E               	goto	u2140
  7033  029D                     u2141:
  7034  029D  2A93               	goto	l2364
  7035  029E                     u2140:
  7036  029E                     l2366:
  7037                           
  7038                           ;main.c: 107: WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7039  029E  304F               	movlw	79
  7040  029F  3186  265B  3182   	fcall	_WriteI2C
  7041  02A2                     l2368:
  7042  02A2  0023               	movlb	3	; select bank3
  7043  02A3  0C0F               	rrf	15,w	;volatile
  7044  02A4  0C89               	rrf	9,f
  7045  02A5  3901               	andlw	1
  7046  02A6  00F2               	movwf	??_LCDrecv
  7047  02A7  0811               	movf	17,w	;volatile
  7048  02A8  391F               	andlw	31
  7049  02A9  0472               	iorwf	??_LCDrecv,w
  7050  02AA  1D03               	btfss	3,2
  7051  02AB  2AAD               	goto	u2151
  7052  02AC  2AAE               	goto	u2150
  7053  02AD                     u2151:
  7054  02AD  2AA2               	goto	l2368
  7055  02AE                     u2150:
  7056  02AE                     l2370:
  7057                           
  7058                           ;main.c: 108: hc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7059  02AE  3187  27CE  3182   	fcall	_ReadI2C
  7060  02B1  00F2               	movwf	??_LCDrecv
  7061  02B2  0872               	movf	??_LCDrecv,w
  7062  02B3  00F4               	movwf	LCDrecv@hc
  7063  02B4                     l2372:
  7064  02B4  0023               	movlb	3	; select bank3
  7065  02B5  0C0F               	rrf	15,w	;volatile
  7066  02B6  0C89               	rrf	9,f
  7067  02B7  3901               	andlw	1
  7068  02B8  00F2               	movwf	??_LCDrecv
  7069  02B9  0811               	movf	17,w	;volatile
  7070  02BA  391F               	andlw	31
  7071  02BB  0472               	iorwf	??_LCDrecv,w
  7072  02BC  1D03               	btfss	3,2
  7073  02BD  2ABF               	goto	u2161
  7074  02BE  2AC0               	goto	u2160
  7075  02BF                     u2161:
  7076  02BF  2AB4               	goto	l2372
  7077  02C0                     u2160:
  7078  02C0                     l486:
  7079                           
  7080                           ;main.c: 109: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  7081  02C0  1691               	bsf	17,5	;volatile
  7082  02C1  1611               	bsf	17,4	;volatile
  7083  02C2                     l487:
  7084  02C2  1A11               	btfsc	17,4	;volatile
  7085  02C3  2AC5               	goto	u2171
  7086  02C4  2AC6               	goto	u2170
  7087  02C5                     u2171:
  7088  02C5  2AC2               	goto	l487
  7089  02C6                     u2170:
  7090  02C6                     l489:
  7091                           
  7092                           ;main.c: 110: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  7093  02C6  1491               	bsf	17,1	;volatile
  7094  02C7                     l490:
  7095  02C7  1891               	btfsc	17,1	;volatile
  7096  02C8  2ACA               	goto	u2181
  7097  02C9  2ACB               	goto	u2180
  7098  02CA                     u2181:
  7099  02CA  2AC7               	goto	l490
  7100  02CB                     u2180:
  7101  02CB                     l2374:
  7102  02CB  0C0F               	rrf	15,w	;volatile
  7103  02CC  0C89               	rrf	9,f
  7104  02CD  3901               	andlw	1
  7105  02CE  00F2               	movwf	??_LCDrecv
  7106  02CF  0811               	movf	17,w	;volatile
  7107  02D0  391F               	andlw	31
  7108  02D1  0472               	iorwf	??_LCDrecv,w
  7109  02D2  1D03               	btfss	3,2
  7110  02D3  2AD5               	goto	u2191
  7111  02D4  2AD6               	goto	u2190
  7112  02D5                     u2191:
  7113  02D5  2ACB               	goto	l2374
  7114  02D6                     u2190:
  7115  02D6                     l2376:
  7116                           
  7117                           ;main.c: 111: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7118  02D6  304E               	movlw	78
  7119  02D7  3186  265B  3182   	fcall	_WriteI2C
  7120  02DA                     l2378:
  7121  02DA  0023               	movlb	3	; select bank3
  7122  02DB  0C0F               	rrf	15,w	;volatile
  7123  02DC  0C89               	rrf	9,f
  7124  02DD  3901               	andlw	1
  7125  02DE  00F2               	movwf	??_LCDrecv
  7126  02DF  0811               	movf	17,w	;volatile
  7127  02E0  391F               	andlw	31
  7128  02E1  0472               	iorwf	??_LCDrecv,w
  7129  02E2  1D03               	btfss	3,2
  7130  02E3  2AE5               	goto	u2201
  7131  02E4  2AE6               	goto	u2200
  7132  02E5                     u2201:
  7133  02E5  2ADA               	goto	l2378
  7134  02E6                     u2200:
  7135  02E6                     l2380:
  7136                           
  7137                           ;main.c: 112: WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATb
      +                          its.R_W));
  7138  02E6  0876               	movf	LCDrecv@mode,w
  7139  02E7  38FA               	iorlw	250
  7140  02E8  3186  265B  3182   	fcall	_WriteI2C
  7141  02EB                     l2382:
  7142  02EB  0023               	movlb	3	; select bank3
  7143  02EC  0C0F               	rrf	15,w	;volatile
  7144  02ED  0C89               	rrf	9,f
  7145  02EE  3901               	andlw	1
  7146  02EF  00F2               	movwf	??_LCDrecv
  7147  02F0  0811               	movf	17,w	;volatile
  7148  02F1  391F               	andlw	31
  7149  02F2  0472               	iorwf	??_LCDrecv,w
  7150  02F3  1D03               	btfss	3,2
  7151  02F4  2AF6               	goto	u2211
  7152  02F5  2AF7               	goto	u2210
  7153  02F6                     u2211:
  7154  02F6  2AEB               	goto	l2382
  7155  02F7                     u2210:
  7156  02F7                     l2384:
  7157                           
  7158                           ;main.c: 113: WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  7159  02F7  0876               	movf	LCDrecv@mode,w
  7160  02F8  38FE               	iorlw	254
  7161  02F9  3186  265B  3182   	fcall	_WriteI2C
  7162  02FC                     l2386:
  7163  02FC  0023               	movlb	3	; select bank3
  7164  02FD  0C0F               	rrf	15,w	;volatile
  7165  02FE  0C89               	rrf	9,f
  7166  02FF  3901               	andlw	1
  7167  0300  00F2               	movwf	??_LCDrecv
  7168  0301  0811               	movf	17,w	;volatile
  7169  0302  391F               	andlw	31
  7170  0303  0472               	iorwf	??_LCDrecv,w
  7171  0304  1D03               	btfss	3,2
  7172  0305  2B07               	goto	u2221
  7173  0306  2B08               	goto	u2220
  7174  0307                     u2221:
  7175  0307  2AFC               	goto	l2386
  7176  0308                     u2220:
  7177  0308                     l504:
  7178                           
  7179                           ;main.c: 114: _delay((unsigned long)((1)*(1000000/4000000.0)));
  7180                           ;main.c: 115: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  7181  0308  0023               	movlb	3	; select bank3
  7182  0309  1491               	bsf	17,1	;volatile
  7183  030A                     l505:
  7184  030A  1891               	btfsc	17,1	;volatile
  7185  030B  2B0D               	goto	u2231
  7186  030C  2B0E               	goto	u2230
  7187  030D                     u2231:
  7188  030D  2B0A               	goto	l505
  7189  030E                     u2230:
  7190  030E                     l2388:
  7191  030E  0C0F               	rrf	15,w	;volatile
  7192  030F  0C89               	rrf	9,f
  7193  0310  3901               	andlw	1
  7194  0311  00F2               	movwf	??_LCDrecv
  7195  0312  0811               	movf	17,w	;volatile
  7196  0313  391F               	andlw	31
  7197  0314  0472               	iorwf	??_LCDrecv,w
  7198  0315  1D03               	btfss	3,2
  7199  0316  2B18               	goto	u2241
  7200  0317  2B19               	goto	u2240
  7201  0318                     u2241:
  7202  0318  2B0E               	goto	l2388
  7203  0319                     u2240:
  7204  0319                     l2390:
  7205                           
  7206                           ;main.c: 116: WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7207  0319  304F               	movlw	79
  7208  031A  3186  265B  3182   	fcall	_WriteI2C
  7209  031D                     l2392:
  7210  031D  0023               	movlb	3	; select bank3
  7211  031E  0C0F               	rrf	15,w	;volatile
  7212  031F  0C89               	rrf	9,f
  7213  0320  3901               	andlw	1
  7214  0321  00F2               	movwf	??_LCDrecv
  7215  0322  0811               	movf	17,w	;volatile
  7216  0323  391F               	andlw	31
  7217  0324  0472               	iorwf	??_LCDrecv,w
  7218  0325  1D03               	btfss	3,2
  7219  0326  2B28               	goto	u2251
  7220  0327  2B29               	goto	u2250
  7221  0328                     u2251:
  7222  0328  2B1D               	goto	l2392
  7223  0329                     u2250:
  7224  0329                     l2394:
  7225                           
  7226                           ;main.c: 117: lc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7227  0329  3187  27CE  3182   	fcall	_ReadI2C
  7228  032C  00F2               	movwf	??_LCDrecv
  7229  032D  0872               	movf	??_LCDrecv,w
  7230  032E  00F5               	movwf	LCDrecv@lc
  7231  032F                     l2396:
  7232  032F  0023               	movlb	3	; select bank3
  7233  0330  0C0F               	rrf	15,w	;volatile
  7234  0331  0C89               	rrf	9,f
  7235  0332  3901               	andlw	1
  7236  0333  00F2               	movwf	??_LCDrecv
  7237  0334  0811               	movf	17,w	;volatile
  7238  0335  391F               	andlw	31
  7239  0336  0472               	iorwf	??_LCDrecv,w
  7240  0337  1D03               	btfss	3,2
  7241  0338  2B3A               	goto	u2261
  7242  0339  2B3B               	goto	u2260
  7243  033A                     u2261:
  7244  033A  2B2F               	goto	l2396
  7245  033B                     u2260:
  7246  033B                     l516:
  7247                           
  7248                           ;main.c: 118: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  7249  033B  1691               	bsf	17,5	;volatile
  7250  033C  1611               	bsf	17,4	;volatile
  7251  033D                     l517:
  7252  033D  1A11               	btfsc	17,4	;volatile
  7253  033E  2B40               	goto	u2271
  7254  033F  2B41               	goto	u2270
  7255  0340                     u2271:
  7256  0340  2B3D               	goto	l517
  7257  0341                     u2270:
  7258  0341                     l519:
  7259                           
  7260                           ;main.c: 119: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  7261  0341  1491               	bsf	17,1	;volatile
  7262  0342                     l520:
  7263  0342  1891               	btfsc	17,1	;volatile
  7264  0343  2B45               	goto	u2281
  7265  0344  2B46               	goto	u2280
  7266  0345                     u2281:
  7267  0345  2B42               	goto	l520
  7268  0346                     u2280:
  7269  0346                     l2398:
  7270  0346  0C0F               	rrf	15,w	;volatile
  7271  0347  0C89               	rrf	9,f
  7272  0348  3901               	andlw	1
  7273  0349  00F2               	movwf	??_LCDrecv
  7274  034A  0811               	movf	17,w	;volatile
  7275  034B  391F               	andlw	31
  7276  034C  0472               	iorwf	??_LCDrecv,w
  7277  034D  1D03               	btfss	3,2
  7278  034E  2B50               	goto	u2291
  7279  034F  2B51               	goto	u2290
  7280  0350                     u2291:
  7281  0350  2B46               	goto	l2398
  7282  0351                     u2290:
  7283  0351                     l2400:
  7284                           
  7285                           ;main.c: 120: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7286  0351  304E               	movlw	78
  7287  0352  3186  265B  3182   	fcall	_WriteI2C
  7288  0355                     l2402:
  7289  0355  0023               	movlb	3	; select bank3
  7290  0356  0C0F               	rrf	15,w	;volatile
  7291  0357  0C89               	rrf	9,f
  7292  0358  3901               	andlw	1
  7293  0359  00F2               	movwf	??_LCDrecv
  7294  035A  0811               	movf	17,w	;volatile
  7295  035B  391F               	andlw	31
  7296  035C  0472               	iorwf	??_LCDrecv,w
  7297  035D  1D03               	btfss	3,2
  7298  035E  2B60               	goto	u2301
  7299  035F  2B61               	goto	u2300
  7300  0360                     u2301:
  7301  0360  2B55               	goto	l2402
  7302  0361                     u2300:
  7303  0361                     l2404:
  7304                           
  7305                           ;main.c: 121: WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATb
      +                          its.R_W));
  7306  0361  0876               	movf	LCDrecv@mode,w
  7307  0362  38FA               	iorlw	250
  7308  0363  3186  265B  3182   	fcall	_WriteI2C
  7309  0366                     l2406:
  7310  0366  0023               	movlb	3	; select bank3
  7311  0367  0C0F               	rrf	15,w	;volatile
  7312  0368  0C89               	rrf	9,f
  7313  0369  3901               	andlw	1
  7314  036A  00F2               	movwf	??_LCDrecv
  7315  036B  0811               	movf	17,w	;volatile
  7316  036C  391F               	andlw	31
  7317  036D  0472               	iorwf	??_LCDrecv,w
  7318  036E  1D03               	btfss	3,2
  7319  036F  2B71               	goto	u2311
  7320  0370  2B72               	goto	u2310
  7321  0371                     u2311:
  7322  0371  2B66               	goto	l2406
  7323  0372                     u2310:
  7324  0372                     l531:
  7325                           
  7326                           ;main.c: 122: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  7327  0372  1511               	bsf	17,2	;volatile
  7328  0373                     l532:
  7329  0373  1911               	btfsc	17,2	;volatile
  7330  0374  2B76               	goto	u2321
  7331  0375  2B77               	goto	u2320
  7332  0376                     u2321:
  7333  0376  2B73               	goto	l532
  7334  0377                     u2320:
  7335  0377                     l2408:
  7336                           
  7337                           ;main.c: 123: return ((hc&0xf0) | ((lc>>4)&0x0f));
  7338  0377  0875               	movf	LCDrecv@lc,w
  7339  0378  00F2               	movwf	??_LCDrecv
  7340  0379  3004               	movlw	4
  7341  037A                     u2335:
  7342  037A  36F2               	lsrf	??_LCDrecv,f
  7343  037B  0B89               	decfsz	9,f
  7344  037C  2B7A               	goto	u2335
  7345  037D  300F               	movlw	15
  7346  037E  0572               	andwf	??_LCDrecv,w
  7347  037F  00F3               	movwf	??_LCDrecv+1
  7348  0380  0874               	movf	LCDrecv@hc,w
  7349  0381  39F0               	andlw	240
  7350  0382  0473               	iorwf	??_LCDrecv+1,w
  7351  0383                     l535:
  7352  0383  0008               	return
  7353  0384                     __end_of_LCDrecv:
  7354                           
  7355                           	psect	text15
  7356  07CE                     __ptext15:	
  7357 ;; *************** function _ReadI2C *****************
  7358 ;; Defined at:
  7359 ;;		line 32 in file "I2C/i2c.c"
  7360 ;; Parameters:    Size  Location     Type
  7361 ;;		None
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;		None
  7364 ;; Return value:  Size  Location     Type
  7365 ;;                  1    wreg      unsigned char 
  7366 ;; Registers used:
  7367 ;;		wreg, status,2, status,0
  7368 ;; Tracked objects:
  7369 ;;		On entry : 0/0
  7370 ;;		On exit  : 0/0
  7371 ;;		Unchanged: 0/0
  7372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7375 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7376 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7377 ;;Total ram usage:        1 bytes
  7378 ;; Hardware stack levels used:    1
  7379 ;; Hardware stack levels required when called:    1
  7380 ;; This function calls:
  7381 ;;		Nothing
  7382 ;; This function is called by:
  7383 ;;		_tsttc
  7384 ;;		_LCDrecv
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           
  7389                           ;psect for function _ReadI2C
  7390  07CE                     _ReadI2C:
  7391  07CE                     l2128:	
  7392                           ;incstack = 0
  7393                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
  7394                           
  7395                           
  7396                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
  7397  07CE  300F               	movlw	15
  7398  07CF  0023               	movlb	3	; select bank3
  7399  07D0  0510               	andwf	16,w	;volatile
  7400  07D1  00F0               	movwf	??_ReadI2C
  7401  07D2  3008               	movlw	8
  7402  07D3  0670               	xorwf	??_ReadI2C,w
  7403  07D4  1903               	btfsc	3,2
  7404  07D5  2FD7               	goto	u1531
  7405  07D6  2FD8               	goto	u1530
  7406  07D7                     u1531:
  7407  07D7  2FE1               	goto	l22
  7408  07D8                     u1530:
  7409  07D8                     l2130:
  7410  07D8  300F               	movlw	15
  7411  07D9  0510               	andwf	16,w	;volatile
  7412  07DA  00F0               	movwf	??_ReadI2C
  7413  07DB  300B               	movlw	11
  7414  07DC  0670               	xorwf	??_ReadI2C,w
  7415  07DD  1D03               	btfss	3,2
  7416  07DE  2FE0               	goto	u1541
  7417  07DF  2FE1               	goto	u1540
  7418  07E0                     u1541:
  7419  07E0  2FE2               	goto	l23
  7420  07E1                     u1540:
  7421  07E1                     l22:
  7422                           
  7423                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
  7424  07E1  1591               	bsf	17,3	;volatile
  7425  07E2                     l23:
  7426  07E2  1C0F               	btfss	15,0	;volatile
  7427  07E3  2FE5               	goto	u1551
  7428  07E4  2FE6               	goto	u1550
  7429  07E5                     u1551:
  7430  07E5  2FE2               	goto	l23
  7431  07E6                     u1550:
  7432  07E6                     l2132:
  7433                           
  7434                           ;i2c.c: 37: return ( SSP1BUF );
  7435  07E6  080C               	movf	12,w	;volatile
  7436  07E7                     l26:
  7437  07E7  0008               	return
  7438  07E8                     __end_of_ReadI2C:
  7439                           
  7440                           	psect	text16
  7441  05EA                     __ptext16:	
  7442 ;; *************** function _LCDinit *****************
  7443 ;; Defined at:
  7444 ;;		line 149 in file "main.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;		None
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;		None
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1    wreg      void 
  7451 ;; Registers used:
  7452 ;;		wreg, status,2, status,0, pclath, cstack
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7460 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7461 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7462 ;;Total ram usage:        1 bytes
  7463 ;; Hardware stack levels used:    1
  7464 ;; Hardware stack levels required when called:    3
  7465 ;; This function calls:
  7466 ;;		_LCDsend
  7467 ;;		_LCDsend2x4
  7468 ;; This function is called by:
  7469 ;;		_main
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           
  7474                           ;psect for function _LCDinit
  7475  05EA                     _LCDinit:
  7476  05EA                     l2412:	
  7477                           ;incstack = 0
  7478                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
  7479                           
  7480                           
  7481                           ;main.c: 151: _delay((unsigned long)((50)*(1000000/4000.0)));
  7482  05EA  3011               	movlw	17
  7483  05EB  00F8               	movwf	??_LCDinit
  7484  05EC  303A               	movlw	58
  7485  05ED                     u2577:
  7486  05ED  0B89               	decfsz	9,f
  7487  05EE  2DED               	goto	u2577
  7488  05EF  0BF8               	decfsz	??_LCDinit,f
  7489  05F0  2DED               	goto	u2577
  7490  05F1  3200               	nop2
  7491  05F2                     l2414:
  7492                           
  7493                           ;main.c: 152: LCDsend(0x30);
  7494  05F2  3030               	movlw	48
  7495  05F3  3186  26A6  3185   	fcall	_LCDsend
  7496  05F6                     l2416:
  7497                           
  7498                           ;main.c: 153: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7499  05F6  3034               	movlw	52
  7500  05F7  3186  26A6  3185   	fcall	_LCDsend
  7501  05FA  3029               	movlw	41
  7502  05FB                     u2587:
  7503  05FB  0B89               	decfsz	9,f
  7504  05FC  2DFB               	goto	u2587
  7505  05FD  3200               	nop2
  7506  05FE                     l2418:
  7507  05FE  3030               	movlw	48
  7508  05FF  3186  26A6  3185   	fcall	_LCDsend
  7509  0602                     l2420:
  7510                           
  7511                           ;main.c: 154: _delay((unsigned long)((5)*(1000000/4000.0)));
  7512  0602  30FA               	movlw	250
  7513  0603                     u2597:
  7514  0603  3200               	nop2
  7515  0604  0B89               	decfsz	9,f
  7516  0605  2E03               	goto	u2597
  7517                           
  7518                           ;main.c: 155: LCDsend(0x30);
  7519  0606  3030               	movlw	48
  7520  0607  3186  26A6  3185   	fcall	_LCDsend
  7521                           
  7522                           ;main.c: 156: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7523  060A  3034               	movlw	52
  7524  060B  3186  26A6  3185   	fcall	_LCDsend
  7525  060E                     l2422:
  7526  060E  3029               	movlw	41
  7527  060F                     u2607:
  7528  060F  0B89               	decfsz	9,f
  7529  0610  2E0F               	goto	u2607
  7530  0611  3200               	nop2
  7531  0612                     l2424:
  7532  0612  3030               	movlw	48
  7533  0613  3186  26A6  3185   	fcall	_LCDsend
  7534                           
  7535                           ;main.c: 157: _delay((unsigned long)((100)*(1000000/4000000.0)));
  7536  0616  3008               	movlw	8
  7537  0617                     u2617:
  7538  0617  0B89               	decfsz	9,f
  7539  0618  2E17               	goto	u2617
  7540  0619  0000               	nop
  7541  061A                     l2426:
  7542                           
  7543                           ;main.c: 158: LCDsend(0x30);
  7544  061A  3030               	movlw	48
  7545  061B  3186  26A6  3185   	fcall	_LCDsend
  7546  061E                     l2428:
  7547                           
  7548                           ;main.c: 159: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7549  061E  3034               	movlw	52
  7550  061F  3186  26A6  3185   	fcall	_LCDsend
  7551  0622  3029               	movlw	41
  7552  0623                     u2627:
  7553  0623  0B89               	decfsz	9,f
  7554  0624  2E23               	goto	u2627
  7555  0625  3200               	nop2
  7556  0626                     l2430:
  7557  0626  3030               	movlw	48
  7558  0627  3186  26A6  3185   	fcall	_LCDsend
  7559  062A                     l2432:
  7560                           
  7561                           ;main.c: 160: _delay((unsigned long)((100)*(1000000/4000000.0)));
  7562  062A  3008               	movlw	8
  7563  062B                     u2637:
  7564  062B  0B89               	decfsz	9,f
  7565  062C  2E2B               	goto	u2637
  7566  062D  0000               	nop
  7567                           
  7568                           ;main.c: 161: LCDsend(0x20);
  7569  062E  3020               	movlw	32
  7570  062F  3186  26A6  3185   	fcall	_LCDsend
  7571                           
  7572                           ;main.c: 162: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
  7573  0632  3024               	movlw	36
  7574  0633  3186  26A6  3185   	fcall	_LCDsend
  7575  0636                     l2434:
  7576  0636  3029               	movlw	41
  7577  0637                     u2647:
  7578  0637  0B89               	decfsz	9,f
  7579  0638  2E37               	goto	u2647
  7580  0639  3200               	nop2
  7581  063A                     l2436:
  7582  063A  3020               	movlw	32
  7583  063B  3186  26A6  3185   	fcall	_LCDsend
  7584                           
  7585                           ;main.c: 163: _delay((unsigned long)((5)*(1000000/4000.0)));
  7586  063E  30FA               	movlw	250
  7587  063F                     u2657:
  7588  063F  3200               	nop2
  7589  0640  0B89               	decfsz	9,f
  7590  0641  2E3F               	goto	u2657
  7591  0642                     l2438:
  7592                           
  7593                           ;main.c: 165: LCDsend2x4(0x28, 0);
  7594  0642  01F2               	clrf	LCDsend2x4@mode
  7595  0643  3028               	movlw	40
  7596  0644  3184  2491  3185   	fcall	_LCDsend2x4
  7597  0647                     l2440:
  7598                           
  7599                           ;main.c: 166: LCDsend2x4(0x06, 0);
  7600  0647  01F2               	clrf	LCDsend2x4@mode
  7601  0648  3006               	movlw	6
  7602  0649  3184  2491  3185   	fcall	_LCDsend2x4
  7603  064C                     l2442:
  7604                           
  7605                           ;main.c: 167: LCDsend2x4(0x0f, 0);
  7606  064C  01F2               	clrf	LCDsend2x4@mode
  7607  064D  300F               	movlw	15
  7608  064E  3184  2491  3185   	fcall	_LCDsend2x4
  7609  0651                     l2444:
  7610                           
  7611                           ;main.c: 168: LCDsend2x4(0x01, 0);
  7612  0651  01F2               	clrf	LCDsend2x4@mode
  7613  0652  3001               	movlw	1
  7614  0653  3184  2491  3185   	fcall	_LCDsend2x4
  7615                           
  7616                           ;main.c: 169: _delay((unsigned long)((2)*(1000000/4000.0)));
  7617  0656  30A6               	movlw	166
  7618  0657                     u2667:
  7619  0657  0B89               	decfsz	9,f
  7620  0658  2E57               	goto	u2667
  7621  0659  3200               	nop2
  7622  065A                     l574:
  7623  065A  0008               	return
  7624  065B                     __end_of_LCDinit:
  7625                           
  7626                           	psect	text17
  7627  06A6                     __ptext17:	
  7628 ;; *************** function _LCDsend *****************
  7629 ;; Defined at:
  7630 ;;		line 87 in file "main.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  c               1    wreg     unsigned char 
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;  c               1    3[COMMON] unsigned char 
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  1    wreg      void 
  7637 ;; Registers used:
  7638 ;;		wreg, status,2, status,0, pclath, cstack
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7646 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7648 ;;Total ram usage:        2 bytes
  7649 ;; Hardware stack levels used:    1
  7650 ;; Hardware stack levels required when called:    2
  7651 ;; This function calls:
  7652 ;;		_WriteI2C
  7653 ;; This function is called by:
  7654 ;;		_LCDinit
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           
  7659                           ;psect for function _LCDsend
  7660  06A6                     _LCDsend:
  7661                           
  7662                           ;incstack = 0
  7663                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
  7664                           ;LCDsend@c stored from wreg
  7665  06A6  00F3               	movwf	LCDsend@c
  7666  06A7                     l2186:
  7667  06A7                     l2188:	
  7668                           ;main.c: 89: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7669                           
  7670  06A7  0023               	movlb	3	; select bank3
  7671  06A8  0C0F               	rrf	15,w	;volatile
  7672  06A9  0C89               	rrf	9,f
  7673  06AA  3901               	andlw	1
  7674  06AB  00F2               	movwf	??_LCDsend
  7675  06AC  0811               	movf	17,w	;volatile
  7676  06AD  391F               	andlw	31
  7677  06AE  0472               	iorwf	??_LCDsend,w
  7678  06AF  1D03               	btfss	3,2
  7679  06B0  2EB2               	goto	u1561
  7680  06B1  2EB3               	goto	u1560
  7681  06B2                     u1561:
  7682  06B2  2EA7               	goto	l2188
  7683  06B3                     u1560:
  7684  06B3                     l438:
  7685                           
  7686                           ;main.c: 90: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
  7687  06B3  1411               	bsf	17,0	;volatile
  7688  06B4                     l439:
  7689  06B4  1811               	btfsc	17,0	;volatile
  7690  06B5  2EB7               	goto	u1571
  7691  06B6  2EB8               	goto	u1570
  7692  06B7                     u1571:
  7693  06B7  2EB4               	goto	l439
  7694  06B8                     u1570:
  7695  06B8                     l2190:
  7696  06B8  0C0F               	rrf	15,w	;volatile
  7697  06B9  0C89               	rrf	9,f
  7698  06BA  3901               	andlw	1
  7699  06BB  00F2               	movwf	??_LCDsend
  7700  06BC  0811               	movf	17,w	;volatile
  7701  06BD  391F               	andlw	31
  7702  06BE  0472               	iorwf	??_LCDsend,w
  7703  06BF  1D03               	btfss	3,2
  7704  06C0  2EC2               	goto	u1581
  7705  06C1  2EC3               	goto	u1580
  7706  06C2                     u1581:
  7707  06C2  2EB8               	goto	l2190
  7708  06C3                     u1580:
  7709  06C3                     l2192:
  7710                           
  7711                           ;main.c: 91: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7712  06C3  304E               	movlw	78
  7713  06C4  3186  265B  3186   	fcall	_WriteI2C
  7714  06C7                     l2194:
  7715  06C7  0023               	movlb	3	; select bank3
  7716  06C8  0C0F               	rrf	15,w	;volatile
  7717  06C9  0C89               	rrf	9,f
  7718  06CA  3901               	andlw	1
  7719  06CB  00F2               	movwf	??_LCDsend
  7720  06CC  0811               	movf	17,w	;volatile
  7721  06CD  391F               	andlw	31
  7722  06CE  0472               	iorwf	??_LCDsend,w
  7723  06CF  1D03               	btfss	3,2
  7724  06D0  2ED2               	goto	u1591
  7725  06D1  2ED3               	goto	u1590
  7726  06D2                     u1591:
  7727  06D2  2EC7               	goto	l2194
  7728  06D3                     u1590:
  7729  06D3                     l2196:
  7730                           
  7731                           ;main.c: 92: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7732  06D3  0873               	movf	LCDsend@c,w
  7733  06D4  3186  265B  3186   	fcall	_WriteI2C
  7734  06D7                     l2198:
  7735  06D7  0023               	movlb	3	; select bank3
  7736  06D8  0C0F               	rrf	15,w	;volatile
  7737  06D9  0C89               	rrf	9,f
  7738  06DA  3901               	andlw	1
  7739  06DB  00F2               	movwf	??_LCDsend
  7740  06DC  0811               	movf	17,w	;volatile
  7741  06DD  391F               	andlw	31
  7742  06DE  0472               	iorwf	??_LCDsend,w
  7743  06DF  1D03               	btfss	3,2
  7744  06E0  2EE2               	goto	u1601
  7745  06E1  2EE3               	goto	u1600
  7746  06E2                     u1601:
  7747  06E2  2ED7               	goto	l2198
  7748  06E3                     u1600:
  7749  06E3                     l450:
  7750                           
  7751                           ;main.c: 93: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  7752  06E3  1511               	bsf	17,2	;volatile
  7753  06E4                     l451:
  7754  06E4  1911               	btfsc	17,2	;volatile
  7755  06E5  2EE7               	goto	u1611
  7756  06E6  2EE8               	goto	u1610
  7757  06E7                     u1611:
  7758  06E7  2EE4               	goto	l451
  7759  06E8                     u1610:
  7760  06E8                     l454:
  7761  06E8  0008               	return
  7762  06E9                     __end_of_LCDsend:
  7763                           
  7764                           	psect	text18
  7765  0FB8                     __ptext18:	
  7766 ;; *************** function _LCDcmd *****************
  7767 ;; Defined at:
  7768 ;;		line 172 in file "main.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;  c               1    wreg     unsigned char 
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;  c               1    8[COMMON] unsigned char 
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  1    wreg      void 
  7775 ;; Registers used:
  7776 ;;		wreg, status,2, status,0, pclath, cstack
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7785 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7786 ;;Total ram usage:        1 bytes
  7787 ;; Hardware stack levels used:    1
  7788 ;; Hardware stack levels required when called:    3
  7789 ;; This function calls:
  7790 ;;		_LCDsend2x4
  7791 ;; This function is called by:
  7792 ;;		_main
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           
  7797                           ;psect for function _LCDcmd
  7798  0FB8                     _LCDcmd:
  7799                           
  7800                           ;incstack = 0
  7801                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
  7802                           ;LCDcmd@c stored from wreg
  7803  0FB8  00F8               	movwf	LCDcmd@c
  7804  0FB9                     l2446:
  7805                           
  7806                           ;main.c: 174: LCDsend2x4(c, 0);
  7807  0FB9  01F2               	clrf	LCDsend2x4@mode
  7808  0FBA  0878               	movf	LCDcmd@c,w
  7809  0FBB  3184  2491  318F   	fcall	_LCDsend2x4
  7810  0FBE                     l577:
  7811  0FBE  0008               	return
  7812  0FBF                     __end_of_LCDcmd:
  7813                           
  7814                           	psect	text19
  7815  0491                     __ptext19:	
  7816 ;; *************** function _LCDsend2x4 *****************
  7817 ;; Defined at:
  7818 ;;		line 126 in file "main.c"
  7819 ;; Parameters:    Size  Location     Type
  7820 ;;  c               1    wreg     unsigned char 
  7821 ;;  mode            1    2[COMMON] unsigned char 
  7822 ;; Auto vars:     Size  Location     Type
  7823 ;;  c               1    5[COMMON] unsigned char 
  7824 ;;  lc              1    7[COMMON] unsigned char 
  7825 ;;  hc              1    6[COMMON] unsigned char 
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  1    wreg      void 
  7828 ;; Registers used:
  7829 ;;		wreg, status,2, status,0, pclath, cstack
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7835 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7836 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7837 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7838 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7839 ;;Total ram usage:        6 bytes
  7840 ;; Hardware stack levels used:    1
  7841 ;; Hardware stack levels required when called:    2
  7842 ;; This function calls:
  7843 ;;		_WriteI2C
  7844 ;; This function is called by:
  7845 ;;		_LCDinit
  7846 ;;		_LCDcmd
  7847 ;;		_LCDchar
  7848 ;; This function uses a non-reentrant model
  7849 ;;
  7850                           
  7851                           
  7852                           ;psect for function _LCDsend2x4
  7853  0491                     _LCDsend2x4:
  7854                           
  7855                           ;incstack = 0
  7856                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
  7857                           ;LCDsend2x4@c stored from wreg
  7858  0491  00F5               	movwf	LCDsend2x4@c
  7859  0492                     l2090:
  7860                           
  7861                           ;main.c: 128: unsigned char hc;;main.c: 129: unsigned char lc;;main.c: 131: hc = c & 0xf
      +                          0;
  7862  0492  0875               	movf	LCDsend2x4@c,w
  7863  0493  39F0               	andlw	240
  7864  0494  00F3               	movwf	??_LCDsend2x4
  7865  0495  0873               	movf	??_LCDsend2x4,w
  7866  0496  00F6               	movwf	LCDsend2x4@hc
  7867  0497                     l2092:
  7868                           
  7869                           ;main.c: 132: lc = (c << 4) & 0xf0;
  7870  0497  0875               	movf	LCDsend2x4@c,w
  7871  0498  00F3               	movwf	??_LCDsend2x4
  7872  0499  3003               	movlw	3
  7873  049A                     u1415:
  7874  049A  35F3               	lslf	??_LCDsend2x4,f
  7875  049B  3EFF               	addlw	-1
  7876  049C  1D03               	skipz
  7877  049D  2C9A               	goto	u1415
  7878  049E  3573               	lslf	??_LCDsend2x4,w
  7879  049F  39F0               	andlw	240
  7880  04A0  00F4               	movwf	??_LCDsend2x4+1
  7881  04A1  0874               	movf	??_LCDsend2x4+1,w
  7882  04A2  00F7               	movwf	LCDsend2x4@lc
  7883  04A3                     l2094:	
  7884                           ;main.c: 134: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7885                           
  7886  04A3  0023               	movlb	3	; select bank3
  7887  04A4  0C0F               	rrf	15,w	;volatile
  7888  04A5  0C89               	rrf	9,f
  7889  04A6  3901               	andlw	1
  7890  04A7  00F3               	movwf	??_LCDsend2x4
  7891  04A8  0811               	movf	17,w	;volatile
  7892  04A9  391F               	andlw	31
  7893  04AA  0473               	iorwf	??_LCDsend2x4,w
  7894  04AB  1D03               	btfss	3,2
  7895  04AC  2CAE               	goto	u1421
  7896  04AD  2CAF               	goto	u1420
  7897  04AE                     u1421:
  7898  04AE  2CA3               	goto	l2094
  7899  04AF                     u1420:
  7900  04AF                     l540:
  7901                           
  7902                           ;main.c: 135: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  7903  04AF  1411               	bsf	17,0	;volatile
  7904  04B0                     l541:
  7905  04B0  1811               	btfsc	17,0	;volatile
  7906  04B1  2CB3               	goto	u1431
  7907  04B2  2CB4               	goto	u1430
  7908  04B3                     u1431:
  7909  04B3  2CB0               	goto	l541
  7910  04B4                     u1430:
  7911  04B4                     l2096:
  7912  04B4  0C0F               	rrf	15,w	;volatile
  7913  04B5  0C89               	rrf	9,f
  7914  04B6  3901               	andlw	1
  7915  04B7  00F3               	movwf	??_LCDsend2x4
  7916  04B8  0811               	movf	17,w	;volatile
  7917  04B9  391F               	andlw	31
  7918  04BA  0473               	iorwf	??_LCDsend2x4,w
  7919  04BB  1D03               	btfss	3,2
  7920  04BC  2CBE               	goto	u1441
  7921  04BD  2CBF               	goto	u1440
  7922  04BE                     u1441:
  7923  04BE  2CB4               	goto	l2096
  7924  04BF                     u1440:
  7925  04BF                     l2098:
  7926                           
  7927                           ;main.c: 136: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7928  04BF  304E               	movlw	78
  7929  04C0  3186  265B  3184   	fcall	_WriteI2C
  7930  04C3                     l2100:
  7931  04C3  0023               	movlb	3	; select bank3
  7932  04C4  0C0F               	rrf	15,w	;volatile
  7933  04C5  0C89               	rrf	9,f
  7934  04C6  3901               	andlw	1
  7935  04C7  00F3               	movwf	??_LCDsend2x4
  7936  04C8  0811               	movf	17,w	;volatile
  7937  04C9  391F               	andlw	31
  7938  04CA  0473               	iorwf	??_LCDsend2x4,w
  7939  04CB  1D03               	btfss	3,2
  7940  04CC  2CCE               	goto	u1451
  7941  04CD  2CCF               	goto	u1450
  7942  04CE                     u1451:
  7943  04CE  2CC3               	goto	l2100
  7944  04CF                     u1450:
  7945  04CF                     l2102:
  7946                           
  7947                           ;main.c: 137: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  7948  04CF  0876               	movf	LCDsend2x4@hc,w
  7949  04D0  0472               	iorwf	LCDsend2x4@mode,w
  7950  04D1  3808               	iorlw	8
  7951  04D2  3186  265B  3184   	fcall	_WriteI2C
  7952  04D5                     l2104:
  7953  04D5  0023               	movlb	3	; select bank3
  7954  04D6  0C0F               	rrf	15,w	;volatile
  7955  04D7  0C89               	rrf	9,f
  7956  04D8  3901               	andlw	1
  7957  04D9  00F3               	movwf	??_LCDsend2x4
  7958  04DA  0811               	movf	17,w	;volatile
  7959  04DB  391F               	andlw	31
  7960  04DC  0473               	iorwf	??_LCDsend2x4,w
  7961  04DD  1D03               	btfss	3,2
  7962  04DE  2CE0               	goto	u1461
  7963  04DF  2CE1               	goto	u1460
  7964  04E0                     u1461:
  7965  04E0  2CD5               	goto	l2104
  7966  04E1                     u1460:
  7967  04E1                     l2106:
  7968                           
  7969                           ;main.c: 138: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  7970  04E1  0876               	movf	LCDsend2x4@hc,w
  7971  04E2  0472               	iorwf	LCDsend2x4@mode,w
  7972  04E3  380C               	iorlw	12
  7973  04E4  3186  265B  3184   	fcall	_WriteI2C
  7974  04E7                     l2108:
  7975  04E7  0023               	movlb	3	; select bank3
  7976  04E8  0C0F               	rrf	15,w	;volatile
  7977  04E9  0C89               	rrf	9,f
  7978  04EA  3901               	andlw	1
  7979  04EB  00F3               	movwf	??_LCDsend2x4
  7980  04EC  0811               	movf	17,w	;volatile
  7981  04ED  391F               	andlw	31
  7982  04EE  0473               	iorwf	??_LCDsend2x4,w
  7983  04EF  1D03               	btfss	3,2
  7984  04F0  2CF2               	goto	u1471
  7985  04F1  2CF3               	goto	u1470
  7986  04F2                     u1471:
  7987  04F2  2CE7               	goto	l2108
  7988  04F3                     u1470:
  7989  04F3                     l555:
  7990  04F3                     l2110:	
  7991                           ;main.c: 139: _delay((unsigned long)((1)*(1000000/4000000.0)));
  7992                           
  7993                           
  7994                           ;main.c: 140: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  7995  04F3  0876               	movf	LCDsend2x4@hc,w
  7996  04F4  0472               	iorwf	LCDsend2x4@mode,w
  7997  04F5  3808               	iorlw	8
  7998  04F6  3186  265B  3184   	fcall	_WriteI2C
  7999  04F9                     l2112:
  8000  04F9  0023               	movlb	3	; select bank3
  8001  04FA  0C0F               	rrf	15,w	;volatile
  8002  04FB  0C89               	rrf	9,f
  8003  04FC  3901               	andlw	1
  8004  04FD  00F3               	movwf	??_LCDsend2x4
  8005  04FE  0811               	movf	17,w	;volatile
  8006  04FF  391F               	andlw	31
  8007  0500  0473               	iorwf	??_LCDsend2x4,w
  8008  0501  1D03               	btfss	3,2
  8009  0502  2D04               	goto	u1481
  8010  0503  2D05               	goto	u1480
  8011  0504                     u1481:
  8012  0504  2CF9               	goto	l2112
  8013  0505                     u1480:
  8014  0505                     l2114:
  8015                           
  8016                           ;main.c: 141: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  8017  0505  0877               	movf	LCDsend2x4@lc,w
  8018  0506  0472               	iorwf	LCDsend2x4@mode,w
  8019  0507  3808               	iorlw	8
  8020  0508  3186  265B  3184   	fcall	_WriteI2C
  8021  050B                     l2116:
  8022  050B  0023               	movlb	3	; select bank3
  8023  050C  0C0F               	rrf	15,w	;volatile
  8024  050D  0C89               	rrf	9,f
  8025  050E  3901               	andlw	1
  8026  050F  00F3               	movwf	??_LCDsend2x4
  8027  0510  0811               	movf	17,w	;volatile
  8028  0511  391F               	andlw	31
  8029  0512  0473               	iorwf	??_LCDsend2x4,w
  8030  0513  1D03               	btfss	3,2
  8031  0514  2D16               	goto	u1491
  8032  0515  2D17               	goto	u1490
  8033  0516                     u1491:
  8034  0516  2D0B               	goto	l2116
  8035  0517                     u1490:
  8036  0517                     l2118:
  8037                           
  8038                           ;main.c: 142: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  8039  0517  0877               	movf	LCDsend2x4@lc,w
  8040  0518  0472               	iorwf	LCDsend2x4@mode,w
  8041  0519  380C               	iorlw	12
  8042  051A  3186  265B  3184   	fcall	_WriteI2C
  8043  051D                     l2120:
  8044  051D  0023               	movlb	3	; select bank3
  8045  051E  0C0F               	rrf	15,w	;volatile
  8046  051F  0C89               	rrf	9,f
  8047  0520  3901               	andlw	1
  8048  0521  00F3               	movwf	??_LCDsend2x4
  8049  0522  0811               	movf	17,w	;volatile
  8050  0523  391F               	andlw	31
  8051  0524  0473               	iorwf	??_LCDsend2x4,w
  8052  0525  1D03               	btfss	3,2
  8053  0526  2D28               	goto	u1501
  8054  0527  2D29               	goto	u1500
  8055  0528                     u1501:
  8056  0528  2D1D               	goto	l2120
  8057  0529                     u1500:
  8058  0529                     l564:
  8059  0529                     l2122:	
  8060                           ;main.c: 143: _delay((unsigned long)((1)*(1000000/4000000.0)));
  8061                           
  8062                           
  8063                           ;main.c: 144: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  8064  0529  0877               	movf	LCDsend2x4@lc,w
  8065  052A  0472               	iorwf	LCDsend2x4@mode,w
  8066  052B  3808               	iorlw	8
  8067  052C  3186  265B  3184   	fcall	_WriteI2C
  8068  052F                     l2124:
  8069  052F  0023               	movlb	3	; select bank3
  8070  0530  0C0F               	rrf	15,w	;volatile
  8071  0531  0C89               	rrf	9,f
  8072  0532  3901               	andlw	1
  8073  0533  00F3               	movwf	??_LCDsend2x4
  8074  0534  0811               	movf	17,w	;volatile
  8075  0535  391F               	andlw	31
  8076  0536  0473               	iorwf	??_LCDsend2x4,w
  8077  0537  1D03               	btfss	3,2
  8078  0538  2D3A               	goto	u1511
  8079  0539  2D3B               	goto	u1510
  8080  053A                     u1511:
  8081  053A  2D2F               	goto	l2124
  8082  053B                     u1510:
  8083  053B                     l567:
  8084                           
  8085                           ;main.c: 145: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  8086  053B  1511               	bsf	17,2	;volatile
  8087  053C                     l568:
  8088  053C  1911               	btfsc	17,2	;volatile
  8089  053D  2D3F               	goto	u1521
  8090  053E  2D40               	goto	u1520
  8091  053F                     u1521:
  8092  053F  2D3C               	goto	l568
  8093  0540                     u1520:
  8094  0540                     l2126:
  8095                           
  8096                           ;main.c: 146: _delay((unsigned long)((50)*(1000000/4000000.0)));
  8097  0540  3004               	movlw	4
  8098  0541                     u2677:
  8099  0541  0B89               	decfsz	9,f
  8100  0542  2D41               	goto	u2677
  8101  0543                     l571:
  8102  0543  0008               	return
  8103  0544                     __end_of_LCDsend2x4:
  8104                           
  8105                           	psect	text20
  8106  065B                     __ptext20:	
  8107 ;; *************** function _WriteI2C *****************
  8108 ;; Defined at:
  8109 ;;		line 47 in file "I2C/i2c.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;  data_out        1    wreg     unsigned char 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;  data_out        1    1[COMMON] unsigned char 
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  1    wreg      char 
  8116 ;; Registers used:
  8117 ;;		wreg, status,2, status,0
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8126 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8127 ;;Total ram usage:        2 bytes
  8128 ;; Hardware stack levels used:    1
  8129 ;; Hardware stack levels required when called:    1
  8130 ;; This function calls:
  8131 ;;		Nothing
  8132 ;; This function is called by:
  8133 ;;		_tsttc
  8134 ;;		_LCDsend
  8135 ;;		_LCDrecv
  8136 ;;		_LCDsend2x4
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140                           
  8141                           ;psect for function _WriteI2C
  8142  065B                     _WriteI2C:
  8143                           
  8144                           ;incstack = 0
  8145                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
  8146                           ;WriteI2C@data_out stored from wreg
  8147  065B  00F1               	movwf	WriteI2C@data_out
  8148  065C                     l2060:
  8149                           
  8150                           ;i2c.c: 49: SSP1BUF = data_out;
  8151  065C  0871               	movf	WriteI2C@data_out,w
  8152  065D  0023               	movlb	3	; select bank3
  8153  065E  008C               	movwf	12	;volatile
  8154  065F                     l2062:
  8155                           
  8156                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
  8157  065F  1F90               	btfss	16,7	;volatile
  8158  0660  2E62               	goto	u1321
  8159  0661  2E63               	goto	u1320
  8160  0662                     u1321:
  8161  0662  2E64               	goto	l2068
  8162  0663                     u1320:
  8163  0663  2EA5               	goto	l30
  8164  0664                     l2068:
  8165                           
  8166                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
  8167  0664  300F               	movlw	15
  8168  0665  0510               	andwf	16,w	;volatile
  8169  0666  00F0               	movwf	??_WriteI2C
  8170  0667  3008               	movlw	8
  8171  0668  0670               	xorwf	??_WriteI2C,w
  8172  0669  1903               	btfsc	3,2
  8173  066A  2E6C               	goto	u1331
  8174  066B  2E6D               	goto	u1330
  8175  066C                     u1331:
  8176  066C  2E83               	goto	l2080
  8177  066D                     u1330:
  8178  066D                     l2070:
  8179  066D  300F               	movlw	15
  8180  066E  0510               	andwf	16,w	;volatile
  8181  066F  00F0               	movwf	??_WriteI2C
  8182  0670  300B               	movlw	11
  8183  0671  0670               	xorwf	??_WriteI2C,w
  8184  0672  1903               	btfsc	3,2
  8185  0673  2E75               	goto	u1341
  8186  0674  2E76               	goto	u1340
  8187  0675                     u1341:
  8188  0675  2E83               	goto	l2080
  8189  0676                     u1340:
  8190  0676                     l2072:
  8191                           
  8192                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
  8193  0676  1610               	bsf	16,4	;volatile
  8194  0677                     l33:	
  8195                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
  8196                           
  8197  0677  002E               	movlb	14	; select bank14
  8198  0678  1C0F               	btfss	15,0	;volatile
  8199  0679  2E7B               	goto	u1351
  8200  067A  2E7C               	goto	u1350
  8201  067B                     u1351:
  8202  067B  2E77               	goto	l33
  8203  067C                     u1350:
  8204  067C                     l35:
  8205                           
  8206                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
  8207  067C  0023               	movlb	3	; select bank3
  8208  067D  190F               	btfsc	15,2	;volatile
  8209  067E  2E80               	goto	u1361
  8210  067F  2E81               	goto	u1360
  8211  0680                     u1361:
  8212  0680  2EA5               	goto	l30
  8213  0681                     u1360:
  8214  0681                     l2074:
  8215  0681  080F               	movf	15,w	;volatile
  8216  0682  2EA5               	goto	l30
  8217  0683                     l2080:
  8218                           
  8219                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
  8220  0683  300F               	movlw	15
  8221  0684  0510               	andwf	16,w	;volatile
  8222  0685  00F0               	movwf	??_WriteI2C
  8223  0686  3008               	movlw	8
  8224  0687  0670               	xorwf	??_WriteI2C,w
  8225  0688  1903               	btfsc	3,2
  8226  0689  2E8B               	goto	u1371
  8227  068A  2E8C               	goto	u1370
  8228  068B                     u1371:
  8229  068B  2E95               	goto	l42
  8230  068C                     u1370:
  8231  068C                     l2082:
  8232  068C  300F               	movlw	15
  8233  068D  0510               	andwf	16,w	;volatile
  8234  068E  00F0               	movwf	??_WriteI2C
  8235  068F  300B               	movlw	11
  8236  0690  0670               	xorwf	??_WriteI2C,w
  8237  0691  1D03               	btfss	3,2
  8238  0692  2E94               	goto	u1381
  8239  0693  2E95               	goto	u1380
  8240  0694                     u1381:
  8241  0694  2EA5               	goto	l30
  8242  0695                     u1380:
  8243  0695                     l42:
  8244  0695  180F               	btfsc	15,0	;volatile
  8245  0696  2E98               	goto	u1391
  8246  0697  2E99               	goto	u1390
  8247  0698                     u1391:
  8248  0698  2E95               	goto	l42
  8249  0699                     u1390:
  8250  0699                     l2084:
  8251  0699  0C0F               	rrf	15,w	;volatile
  8252  069A  0C89               	rrf	9,f
  8253  069B  3901               	andlw	1
  8254  069C  00F0               	movwf	??_WriteI2C
  8255  069D  0811               	movf	17,w	;volatile
  8256  069E  391F               	andlw	31
  8257  069F  0470               	iorwf	??_WriteI2C,w
  8258  06A0  1D03               	btfss	3,2
  8259  06A1  2EA3               	goto	u1401
  8260  06A2  2EA4               	goto	u1400
  8261  06A3                     u1401:
  8262  06A3  2E99               	goto	l2084
  8263  06A4                     u1400:
  8264  06A4                     l47:
  8265                           
  8266                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
  8267  06A4  0811               	movf	17,w	;volatile
  8268  06A5                     l30:
  8269  06A5  0008               	return
  8270  06A6                     __end_of_WriteI2C:
  8271                           
  8272                           	psect	intentry
  8273  0004                     __pintentry:	
  8274 ;; *************** function _INTERRUPT_InterruptManager *****************
  8275 ;; Defined at:
  8276 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;		None
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;		None
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  1    wreg      void 
  8283 ;; Registers used:
  8284 ;;		wreg
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8294 ;;Total ram usage:        0 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; This function calls:
  8297 ;;		Nothing
  8298 ;; This function is called by:
  8299 ;;		Interrupt level 1
  8300 ;; This function uses a non-reentrant model
  8301 ;;
  8302                           
  8303  0004                     _INTERRUPT_InterruptManager:
  8304                           
  8305                           ;incstack = 0
  8306  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8307                           
  8308                           ; Regs used in _INTERRUPT_InterruptManager: [wreg]
  8309  0005  3180               	pagesel	$
  8310  0006                     i1l1990:
  8311                           
  8312                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  8313  0006  1F0B               	btfss	11,6	;volatile
  8314  0007  2809               	goto	u128_21
  8315  0008  280A               	goto	u128_20
  8316  0009                     u128_21:
  8317  0009  281A               	goto	i1l326
  8318  000A                     u128_20:
  8319  000A                     i1l1992:
  8320                           
  8321                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE3bits.BCL1IE == 1 && PIR3bits
      +                          .BCL1IF == 1)
  8322  000A  002E               	movlb	14	; select bank14
  8323  000B  1C99               	btfss	25,1	;volatile
  8324  000C  280E               	goto	u129_21
  8325  000D  280F               	goto	u129_20
  8326  000E                     u129_21:
  8327  000E  2814               	goto	i1l321
  8328  000F                     u129_20:
  8329  000F                     i1l1994:
  8330                           
  8331                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: i2c1_driver_busCollisionISR();
  8332  000F  1C8F               	btfss	15,1	;volatile
  8333  0010  2812               	goto	u130_21
  8334  0011  2813               	goto	u130_20
  8335  0012                     u130_21:
  8336  0012  2814               	goto	i1l321
  8337  0013                     u130_20:
  8338  0013  281A               	goto	i1l326
  8339  0014                     i1l321:
  8340                           
  8341                           ;interrupt_manager.c: 61: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
  8342  0014  1C19               	btfss	25,0	;volatile
  8343  0015  2817               	goto	u131_21
  8344  0016  2818               	goto	u131_20
  8345  0017                     u131_21:
  8346  0017  281A               	goto	i1l322
  8347  0018                     u131_20:
  8348  0018                     i1l1998:
  8349                           
  8350                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: i2c1_driver_i2cISR();
  8351  0018  080F               	movf	15,w	;volatile
  8352  0019  281A               	goto	i1l326
  8353  001A                     i1l322:
  8354  001A                     i1l326:	
  8355                           ;interrupt_manager.c: 68: };interrupt_manager.c: 69: }
  8356                           
  8357  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8358  001B  0009               	retfie
  8359  001C                     __end_of_INTERRUPT_InterruptManager:
  8360  007E                     btemp	set	126	;btemp
  8361  007E                     int$flags	set	126
  8362  007E                     wtemp0	set	126
  8363                           
  8364                           	psect	config
  8365                           
  8366                           ;Config register CONFIG1 @ 0x8007
  8367                           ;	External Oscillator mode selection bits
  8368                           ;	FEXTOSC = OFF, Oscillator not enabled
  8369                           ;	Power-up default value for COSC bits
  8370                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  8371                           ;	Clock Out Enable bit
  8372                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  8373                           ;	Clock Switch Enable bit
  8374                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8375                           ;	Fail-Safe Clock Monitor Enable bit
  8376                           ;	FCMEN = ON, FSCM timer enabled
  8377  8007                     	org	32775
  8378  8007  3FEC               	dw	16364
  8379                           
  8380                           ;Config register CONFIG2 @ 0x8008
  8381                           ;	Master Clear Enable bit
  8382                           ;	MCLRE = ON, MCLR pin is Master Clear function
  8383                           ;	Power-up Timer Enable bit
  8384                           ;	PWRTE = OFF, PWRT disabled
  8385                           ;	Low-Power BOR enable bit
  8386                           ;	LPBOREN = OFF, ULPBOR disabled
  8387                           ;	Brown-out reset enable bits
  8388                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  8389                           ;	Brown-out Reset Voltage Selection
  8390                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  8391                           ;	Zero-cross detect disable
  8392                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  8393                           ;	Peripheral Pin Select one-way control
  8394                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  8395                           ;	Stack Overflow/Underflow Reset Enable bit
  8396                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  8397                           ;	Background Debugger
  8398                           ;	DEBUG = OFF, Background Debugger disabled
  8399  8008                     	org	32776
  8400  8008  3FFF               	dw	16383
  8401                           
  8402                           ;Config register CONFIG3 @ 0x8009
  8403                           ;	WDT Period Select bits
  8404                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8405                           ;	WDT operating mode
  8406                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  8407                           ;	WDT Window Select bits
  8408                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8409                           ;	WDT input clock selector
  8410                           ;	WDTCCS = SC, Software Control
  8411  8009                     	org	32777
  8412  8009  3F9F               	dw	16287
  8413                           
  8414                           ;Config register CONFIG4 @ 0x800A
  8415                           ;	UserNVM self-write protection bits
  8416                           ;	WRT = OFF, Write protection off
  8417                           ;	Scanner Enable bit
  8418                           ;	SCANE = available, Scanner module is available for use
  8419                           ;	Low Voltage Programming Enable bit
  8420                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  8421  800A                     	org	32778
  8422  800A  3FFF               	dw	16383
  8423                           
  8424                           ;Config register CONFIG5 @ 0x800B
  8425                           ;	UserNVM Program memory code protection bit
  8426                           ;	CP = OFF, Program Memory code protection disabled
  8427                           ;	DataNVM code protection bit
  8428                           ;	CPD = OFF, Data EEPROM code protection disabled
  8429  800B                     	org	32779
  8430  800B  3FFF               	dw	16383

Data Sizes:
    Strings     50
    Constant    18
    Data        0
    BSS         4
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      50
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[10]), STR_3(CODE[7]), STR_2(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDstr@p	PTR unsigned char  size(2) Largest target is 17
		 -> main@buf(BANK0[17]), STR_1(CODE[5]), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    _main->_LCDstr
    _tsttc->_WriteI2C
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDrecv->_WriteI2C
    _LCDinit->_LCDsend2x4
    _LCDsend->_WriteI2C
    _LCDcmd->_LCDsend2x4
    _LCDsend2x4->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0    5882
                                             20 BANK0     26    26      0
                             _LCDcmd
                            _LCDinit
                            _LCDrecv
                             _LCDstr
                  _SYSTEM_Initialize
                   _i2c1_driver_open
                            _sprintf
                              _tsttc
 ---------------------------------------------------------------------------------
 (1) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    22      6    2573
                                              0 BANK0     20    14      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDstr                                               6     4      2    1159
                                              9 COMMON     5     3      2
                                              0 BANK0      1     1      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (2) _LCDchar                                              1     1      0     810
                                              8 COMMON     1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDrecv                                              5     5      0     178
                                              2 COMMON     5     5      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              8 COMMON     1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 COMMON     2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _LCDcmd                                               1     1      0     810
                                              8 COMMON     1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (3) _LCDsend2x4                                           6     5      1     788
                                              2 COMMON     6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDcmd
     _LCDsend2x4
       _WriteI2C
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _LCDrecv
     _ReadI2C
     _WriteI2C
   _LCDstr
     _LCDchar
       _LCDsend2x4
         _WriteI2C
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _i2c1_driver_open
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _tsttc
     _ReadI2C
     _WriteI2C

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      32       5       62.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      40      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      40      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Oct 19 12:20:17 2020

                                 l30 06A5                                   l22 07E1  
                                 l23 07E2                                   l33 0677  
                                 l42 0695                                   l26 07E7  
                                 l35 067C                                   l47 06A4  
                ___wmul@multiplicand 0072                                  l120 075F  
                                l400 0418                                  l161 0FD7  
                                l225 0FED                                  l411 0447  
                                l164 0FCE                                  l412 0448  
                                l158 0FE1                                  l430 048B  
                                l423 0479                                  l520 0342  
                                l504 0308                                  l424 047B  
                                l505 030A                                  l433 0490  
                                l450 06E3                                  l362 0390  
                                l451 06E4                                  l531 0372  
                                l363 0391                                  l540 04AF  
                                l532 0373                                  l516 033B  
                                l460 024C                                  l541 04B0  
                                l517 033D                                  l429 048A  
                                l454 06E8                                  l438 06B3  
                                l374 03C0                                  l439 06B4  
                                l535 0383                                  l519 0341  
                                l375 03C1                                  l359 0384  
                                l392 0403                                  l393 0404  
                                l490 02C7                                  l474 028D  
                                l386 03F2                                  l571 0543  
                                l555 04F3                                  l475 028F  
                                l459 024B                                  l395 0408  
                                l387 03F4                                  l564 0529  
                                l580 0FC6                                  l813 023D  
                                l574 065A                                  l486 02C0  
                                l567 053B                                  l487 02C2  
                                l399 0417                                  l568 053C  
                                l577 0FBE                                  l489 02C6  
                                l817 079E                                  l586 07CD  
                                l819 07B2                                  l764 0044  
                                l783 00D8                                  l792 013F  
                                l776 00AF                                  l777 0092  
                                l788 00FF              __size_of_PMD_Initialize 0008  
                                wreg 0009                          ?_LCDsend2x4 0072  
                    __end_of_LCDchar 0FC7                                 l2100 04C3  
                               l2110 04F3                                 l2102 04CF  
                               l2120 051D                                 l2112 04F9  
                               l2104 04D5                                 l2200 0FC0  
                               l2122 0529                                 l2114 0505  
                               l2106 04E1                                 l2130 07D8  
                               l2210 0FFE                                 l2202 0FEF  
                               l2060 065C                                 l2124 052F  
                               l2116 050B                                 l2108 04E7  
                               l2132 07E6                                 l2140 072D  
                               l2220 07A3                                 l2204 0FF0  
                               l2300 03A4                                 l2070 066D  
                               l2062 065F                                 l2126 0540  
                               l2118 0517                                 l2150 0738  
                               l2142 072F                                 l2230 06EB  
                               l2222 07A8                                 l2214 0794  
                               l1270 0FFF                                 l2206 0FF6  
                               l2310 03D4                                 l2302 03B0  
                               l2072 0676                                 l2080 0683  
                               l2128 07CE                                 l2400 0351  
                               l2160 074C                                 l2152 073A  
                               l2144 0731                                 l2136 0725  
                               l2240 0701                                 l2232 06F1  
                               l2224 07AE                                 l2216 0796  
                               l2208 0FFC                                 l2320 041C  
                               l2312 03E0                                 l2304 03B4  
                               l1089 0724                                 l2082 068C  
                               l2074 0681                                 l2090 0492  
                               l2402 0355                                 l2170 0757  
                               l2162 074E                                 l2154 073C  
                               l2146 0733                                 l2138 072B  
                               l2242 0710                                 l2234 06F4  
                               l2250 0720                                 l2218 079A  
                               l2330 044C                                 l2322 0427  
                               l2314 03E6                                 l2306 03C5  
                               l1099 0793                                 l2084 0699  
                               l2068 0664                                 l2092 0497  
                               l2420 0602                                 l2412 05EA  
                               l2404 0361                                 l2180 0FD2  
                               l2172 075A                                 l2164 0750  
                               l2156 073E                                 l2148 0735  
                               l2244 0714                                 l2236 06F9  
                               l2228 06E9                                 l2260 076E  
                               l2340 047F                                 l2332 0457  
                               l2324 042B                                 l2316 03F8  
                               l2308 03D0                                 l2094 04A3  
                               l2190 06B8                                 l2430 0626  
                               l2422 060E                                 l2414 05F2  
                               l2406 0366                                 l2350 0250  
                               l2182 0FD3                                 l2174 075C  
                               l2166 0752                                 l2158 074A  
                               l2246 0715                                 l2238 06FD  
                               l2270 0789                                 l2262 0772  
                               l2254 0760                                 l2342 048F  
                               l2334 045B                                 l2326 0437  
                               l2318 040C                                 l2096 04B4  
                               l2192 06C3                                 l2440 0647  
                               l2432 062A                                 l2424 0612  
                               l2416 05F6                                 l2408 0377  
                               l2360 027C                                 l2352 025B  
                               l2184 0FD6                                 l2168 0754  
                               l2176 0FC7                                 l2280 0FDE  
                               l2248 071A                                 l2264 0776  
                               l2256 0766                                 l2272 078F  
                               l2504 00DA                                 l2336 0467  
                               l2328 043B                                 l2600 054A  
                               l2098 04BF                                 l2194 06C7  
                               l2186 06A7                                 l2442 064C  
                               l2434 0636                                 l2426 061A  
                               l2418 05FE                                 l2370 02AE  
                               l2362 0281                                 l2354 025F  
                               l2346 023F                                 l2450 07B4  
                               l2178 0FCF                                 l2282 0FE2  
                               l2266 0780                                 l2258 0769  
                               l2530 014A                                 l2514 0101  
                               l2522 0126                                 l2338 046D  
                               l2610 0553                                 l2602 054D  
                               l2196 06D3                                 l2188 06A7  
                               l2444 0651                                 l2436 063A  
                               l2428 061E                                 l2380 02E6  
                               l2372 02B4                                 l2364 0293  
                               l2356 026B                                 l2348 023F  
                               l2452 07B8                                 l2276 0FD8  
                               l2284 0FE7                                 l2268 0784  
                               l2540 0167                                 l2532 0153  
                               l2524 012F                                 l2508 00F4  
                               l2460 003B                                 l2620 0569  
                               l2612 0556                                 l2604 054F  
                               l2446 0FB9                                 l2198 06D7  
                               l2438 0642                                 l2390 0319  
                               l2382 02EB                                 l2374 02CB  
                               l2366 029E                                 l2358 0270  
                               l2278 0FDB                                 l2286 0FE8  
                               l2542 016B                                 l2550 0187  
                               l2534 0156                                 l2526 0135  
                               l2518 011B                                 l2470 0052  
                               l2462 0040                                 l2454 0029  
                               l2294 0384                                 l2630 0595  
                               l2622 056D                                 l2614 0557  
                               l2606 0550                                 l2392 031D  
                               l2384 02F7                                 l2376 02D6  
                               l2368 02A2                                 l2448 07B3  
                               l2288 0FEA                                 l2560 01A8  
                               l2552 018D                                 l2544 0171  
                               l2536 015A                                 l2528 013B  
                               l2480 0085                                 l2472 005E  
                               l2464 0045                                 l2456 002E  
                               l2296 0395                                 l2640 05B4  
                               l2632 059C                                 l2624 057A  
                               l2616 055E                                 l2608 0552  
                               l2394 0329                                 l2386 02FC  
                               l2378 02DA                                 l2570 01FC  
                               l2562 01AF                                 l2554 0194  
                               l2546 0178                                 l2538 0160  
                               l2490 00BE                                 l2474 0061  
                               l2458 0034                                 l2298 03A0  
                               l2642 05CB                                 l2634 05A0  
                               l2626 0581                                 l2618 0562  
                               l2396 032F                                 l2388 030E  
                               l2580 021C                                 l2556 0198  
                               l2548 017C                                 l2564 01B3  
                               l2492 00C2                                 l2476 0072  
                               l2484 0094                                 l2468 0049  
                               l2644 05D2                                 l2636 05A8  
                               l2628 0585                                 l2398 0346  
                               l2574 0208                                 l2566 01B8  
                               l2558 01A2                                 l2494 00C6  
                               l2486 00B3                                 l2478 0081  
                               l2582 0225                                 l2646 05D3  
                               l2638 05B0                                 l2568 01E0  
                               l2576 0211                                 l2488 00BA  
                               l2496 00CC                                 l2584 0239  
                               l2648 05E0                                 l2578 0218  
                               l2498 00D3                                 l2596 0544  
                               l2598 0547                      __end_of_LCDinit 065B  
                    __end_of_LCDrecv 0384                      __end_of_LCDsend 06E9  
                               STR_1 1026                                 STR_2 1000  
                               STR_3 101F                                 STR_4 1015  
                               STR_5 07F0                                 u2000 044C  
                               u2001 044B                                 u2010 0457  
                               u2011 0456                                 u2100 026B  
                               u2020 0467                                 u2101 026A  
                               u2021 0466                                 u2110 027C  
                               u2030 0479                                 u2111 027B  
                               u2031 0478                                 u1400 06A4  
                               u1320 0663                                 u2200 02E6  
                               u2120 028D                                 u2040 047F  
                               u1401 06A3                                 u1321 0662  
                               u2201 02E5                                 u2121 028C  
                               u2041 047E                                 u1330 066D  
                               u2210 02F7                                 u2130 0293  
                               u2050 048A                                 u1331 066C  
                               u2211 02F6                                 u2131 0292  
                               u2051 0489                                 u1340 0676  
                               u1500 0529                                 u1420 04AF  
                               u2300 0361                                 u2220 0308  
                               u2140 029E                                 u2060 048F  
                               u1341 0675                                 u1501 0528  
                               u1421 04AE                                 u2301 0360  
                               u2221 0307                                 u2141 029D  
                               u2061 048E                                 _LATA 0016  
                               u1350 067C                                 u1510 053B  
                               u1430 04B4                                 u2310 0372  
                               u2230 030E                                 u2150 02AE  
                               u2070 024B                                 _LATB 0017  
                               u1351 067B                                 u1511 053A  
                               u1431 04B3                                 u1415 049A  
                               u2311 0371                                 u2231 030D  
                               u2151 02AD                                 u2071 024A  
                               _LATC 0018                                 u1360 0681  
                               u1520 0540                                 u1440 04BF  
                               u1600 06E3                                 u2320 0377  
                               u2240 0319                                 u2160 02C0  
                               u2080 0250                                 u2400 00F3  
                               _LATD 0019                                 u1361 0680  
                               u1521 053F                                 u1441 04BE  
                               u1601 06E2                                 u2321 0376  
                               u2241 0318                                 u2161 02BF  
                               u2081 024F                                 u2401 00F2  
                               _LATE 001A                                 u1370 068C  
                               u1450 04CF                                 u1610 06E8  
                               u1530 07D8                                 u2250 0329  
                               u2170 02C6                                 u2090 025B  
                               u2410 00FE                                 u1371 068B  
                               u1451 04CE                                 u1611 06E7  
                               u1531 07D7                                 u2251 0328  
                               u2171 02C5                                 u2091 025A  
                               u2411 00FD                                 u1380 0695  
                               u1460 04E1                                 u1540 07E1  
                               u2260 033B                                 u2180 02CB  
                               u2340 07CD                                 u1700 0701  
                               u1620 0FF6                                 u2500 0186  
                               u2420 011A                                 u1381 0694  
                               u1461 04E0                                 u1541 07E0  
                               u2261 033A                                 u2181 02CA  
                               u2341 07CC                                 u1701 0700  
                               u1621 0FF5                                 u2501 0185  
                               u2421 0119                                 u2405 00EF  
                               u1390 0699                                 u1470 04F3  
                               u1550 07E6                                 u2270 0341  
                               u2190 02D6                                 u1630 0FFC  
                               u2510 018D                                 u2430 0125  
                               u2350 0034                                 u1391 0698  
                               u1471 04F2                                 u1551 07E5  
                               u2335 037A                                 u2271 0340  
                               u2191 02D5                                 u1631 0FFB  
                               u2511 018C                                 u2431 0124  
                               u2351 0033                                 u1480 0505  
                               u1560 06B3                                 u2280 0346  
                               u1720 0710                                 u1800 078F  
                               u1640 079A                                 u2520 01A2  
                               u2440 0135                                 u2360 005E  
                               u1481 0504                                 u1561 06B2  
                               u2281 0345                                 u1721 070F  
                               u1801 078E                                 u1641 0799  
                               u2521 01A1                                 u2441 0134  
                               u2425 0116                                 u2361 005D  
                               u1490 0517                                 u1570 06B8  
                               u2290 0351                                 u1810 0FE7  
                               u2530 01A8                                 u2450 013B  
                               u2370 0091                                 u1491 0516  
                               u1571 06B7                                 u2291 0350  
                               u1811 0FE6                                 u1715 0702  
                               u2531 01A7                                 u2451 013A  
                               u2371 0090                                 u1580 06C3  
                               u1740 0720                                 u2540 0225  
                               u2460 014A                                 u2380 00B3  
                               u1900 03F2                                 u1820 0390  
                               u1581 06C2                                 u1741 071F  
                               u1725 070C                                 u2541 0224  
                               u2461 0149                                 u2381 00B2  
                               u1901 03F1                                 u1821 038F  
                               u1590 06D3                                 u1750 0766  
                               u1670 07AE                                 u2550 0239  
                               u2470 015A                                 u2390 00C2  
                               u1910 03F8                                 u1830 0395  
                               u1591 06D2                                 u2607 060F  
                               u1735 0716                                 u1751 0765  
                               u1671 07AD                                 u1655 079F  
                               u2551 0238                                 u2471 0159  
                               u2391 00C1                                 u1911 03F7  
                               u1831 0394                                 u1680 06F1  
                               u2480 0160                                 u1920 0403  
                               u1840 03A0                                 u2617 0617  
                               u1681 06F0                                 u1665 07A4  
                               u2481 015F                                 u2465 0146  
                               u1921 0402                                 u1841 039F  
                        main@counter 004C                                 u1770 0776  
                               u2490 0171                                 u1930 0408  
                               u1850 03B0                                 u2627 0623  
                               u1771 0775                                 u2491 0170  
                               u1931 0407                                 u1851 03AF  
                               u1780 0780                                 u1940 040C  
                               u1860 03C0                                 u2637 062B  
                               u1781 077F                                 u1765 076A  
                               u1941 040B                                 u1861 03BF  
                               u1950 0417                                 u1870 03C5  
                               u2647 0637                                 u1695 06F5  
                               u1951 0416                                 u1871 03C4  
                               u2567 05D9                                 u1960 041C  
                               u1880 03D0                                 u2657 063F  
                               u2577 05ED                                 u1785 077C  
                               u1961 041B                                 u1881 03CF  
                               u1970 0427                                 u1890 03E0  
                               u2667 0657                                 u2587 05FB  
                               u1795 0785                                 u1971 0426  
                               u1891 03DF                                 u1980 0437  
                               _PMD0 0796                                 u2677 0541  
                               u2597 0603                                 u1981 0436  
                               _PMD1 0797                                 u1990 0447  
                               _PMD2 0798                                 u1991 0446  
                               _PMD3 0799                                 _PMD4 079A  
                               _PMD5 079B                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUD 0F5A                                 _WPUE 0F65  
                               _main 0544                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               start 001C                      __end_of_ReadI2C 07E8  
     __size_of_OSCILLATOR_Initialize 0009        __end_of_OSCILLATOR_Initialize 0FD8  
           __end_of_i2c1_driver_open 0FEE                                ?_main 0070  
                    __end_of___lwdiv 0725                                i1l321 0014  
                              i1l322 001A                                i1l326 001A  
                    __end_of___lwmod 0794                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                                _TRISD 0014  
                              _TRISE 0015                                _WPUC3 7A7B  
                              _WPUC4 7A7C                      __end_of_dpowers 1015  
                    __end_of_isdigit 1000                                main@c 0049  
                              _tsttc 0384                                status 0003  
                              wtemp0 007E                      __end_of_sprintf 023E  
                    __initialization 001E                         __end_of_main 05EA  
                __size_of_LCDsend2x4 00B3          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 0034                            ??_LCDchar 0078  
                          ??_LCDinit 0078                            ??_LCDrecv 0072  
                          ??_LCDsend 0072                     __end_of_WriteI2C 06A6  
                             _ANSELA 0F38                               _ANSELB 0F43  
                             _ANSELC 0F4E                               _ANSELD 0F59  
                             _ANSELE 0F64                               ?_tsttc 0070  
                             _RC3PPS 0F23                               _RC4PPS 0F24  
                             _ODCONA 0F3A                               _ODCONB 0F45  
                             _ODCONC 0F50                               _ODCOND 0F5B  
                             _ODCONE 0F66                               u130_20 0013  
                             u130_21 0012                               u131_20 0018  
                             u131_21 0017                               i1l1990 0006  
                             i1l1992 000A                               i1l1994 000F  
                             i1l1998 0018                               u128_20 000A  
                             u128_21 0009                               u129_20 000F  
                             u129_21 000E                               _LCDcmd 0FB8  
                             _LCDstr 07B3                               _OSCFRQ 0893  
                          ??_ReadI2C 0070                          LCDsend2x4@c 0075  
                        LCDrecv@mode 0076                               ___wmul 0794  
                          ??___lwdiv 0074                            ??___lwmod 007C  
                             main@c1 004A                               main@c2 004B  
                     _PMD_Initialize 0FC7                            ??_isdigit 0070  
                          ??_sprintf 0026                    _SYSTEM_Initialize 0FD8  
            __end_of__initialization 0023                   ?_SYSTEM_Initialize 0070  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 0070  
                      __end_of_tsttc 0491               __end_of_PMD_Initialize 0FCF  
                          LCDrecv@hc 0074                            LCDrecv@lc 0075  
                       ??_LCDsend2x4 0073            __end_of_SYSTEM_Initialize 0FE2  
                       sprintf@width 0030                              ??_tsttc 0072  
                         __pbssBANK0 004E                              ?_LCDcmd 0070  
                            ?_LCDstr 0079                              LCDcmd@c 0078  
                            LCDstr@c 0020                              LCDstr@p 0079  
                         __pmaintext 0544                              ?___wmul 0070  
                         __pintentry 0004                   __end_of_LCDsend2x4 0544  
                          ?_WriteI2C 0070                      ?_PMD_Initialize 0070  
                  ?_i2c1_driver_open 0070                              _LCDchar 0FBF  
                            _LCDinit 05EA                              _LCDrecv 023E  
                            _LCDsend 06A6                   ??_i2c1_driver_open 0070  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCTUNE 0892                              _SSP1ADD 018D  
                            _SLRCONA 0F3B                              _SLRCONB 0F46  
                            _SLRCONC 0F51                              _SLRCOND 0F5C  
                            _SLRCONE 0F67                              _SSP1BUF 018C  
                            _SSP1MSK 018E                         LCDsend2x4@hc 0076  
                       LCDsend2x4@lc 0077                      __size_of_LCDcmd 0007  
                 _i2c1_driver_i2cISR 004E                      __size_of_LCDstr 001B  
                            _ReadI2C 07CE                      __size_of___wmul 001F  
                            ___lwdiv 06E9                              ___lwmod 0760  
                         ??_WriteI2C 0070                              __ptext1 0384  
                            __ptext2 0027                              __ptext3 0FEE  
                            __ptext4 0794                              __ptext5 0760  
                            __ptext6 06E9                              __ptext7 0FE2  
                            __ptext8 0FD8                              __ptext9 0FC7  
                  __end_of_hexpowers 07F0                              _dpowers 100B  
              _OSCILLATOR_Initialize 0FCF                              _isdigit 0FEE  
           ??_PIN_MANAGER_Initialize 0070                              main@buf 0038  
         __size_of_SYSTEM_Initialize 000A                              _sprintf 0027  
               end_of_initialization 0023                            _TRISCbits 0013  
                     __end_of_LCDcmd 0FBF                       __end_of_LCDstr 07CE  
                     LCDsend2x4@mode 0072                       __end_of___wmul 07B3  
             ?_OSCILLATOR_Initialize 0070                  start_initialization 001E  
    __size_of_PIN_MANAGER_Initialize 003B                     WriteI2C@data_out 0071  
                           ??_LCDcmd 0078                             ??_LCDstr 007B  
                   ??_PMD_Initialize 0070                             ??___wmul 0074  
                  __size_of_WriteI2C 004B                             ?_LCDchar 0070  
                           ?_LCDinit 0070                             ?_LCDrecv 0070  
                           ?_LCDsend 0070                            ___latbits 0002  
                      __pcstackBANK0 0020                         _isdigit$1516 0070  
                           LCDchar@c 0078                             LCDsend@c 0073  
                        sprintf@flag 002F            __size_of_i2c1_driver_open 000C  
                        sprintf@prec 002C                             ?_ReadI2C 0070  
                   ___lwdiv@dividend 0072               _PIN_MANAGER_Initialize 0725  
                           ?___lwdiv 0070                             ?___lwmod 0078  
        _i2c1_driver_busCollisionISR 0050         ??_INTERRUPT_InterruptManager 0070  
                           ?_isdigit 0070                            _hexpowers 07E8  
                   ___lwdiv@quotient 0075                             ?_sprintf 0020  
                     __size_of_tsttc 010D                       ___wmul@product 0074  
                           _PIE3bits 0719  __size_of_INTERRUPT_InterruptManager 0018  
                           _PIR3bits 070F                             _SSP1CON1 0190  
                           _SSP1CON2 0191                             _SSP1STAT 018F  
                  ___wmul@multiplier 0070                     __size_of_LCDchar 0008  
                   __size_of_LCDinit 0071                     __size_of_LCDrecv 0146  
                   __size_of_LCDsend 0043                     __size_of_ReadI2C 001A  
            ??_OSCILLATOR_Initialize 0070                     __size_of___lwdiv 003C  
                   __size_of___lwmod 0034                             _WriteI2C 065B  
                         sprintf@idx 002A                           sprintf@val 002D  
                   __size_of_isdigit 0012                      ___lwdiv@divisor 0070  
                    ___lwdiv@counter 0077                             __ptext10 0725  
                           __ptext11 0FCF                             __ptext20 065B  
                           __ptext12 07B3                             __ptext13 0FBF  
                           __ptext14 023E                             __ptext15 07CE  
                           __ptext16 05EA                             __ptext17 06A6  
                           __ptext18 0FB8                             __ptext19 0491  
                       _SSP1CON1bits 0190                         _SSP1CON2bits 0191  
                   __size_of_sprintf 0217                     _i2c1_driver_open 0FE2  
                      __size_of_main 00A6                           tsttc@value 0073  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 001C  
         _INTERRUPT_InterruptManager 0004                         _SSP1STATbits 018F  
                         _INTCONbits 000B                             isdigit@c 0071  
                         _LCDsend2x4 0491                             intlevel1 0000  
                          sprintf@ap 002B                            sprintf@sp 0032  
                   ___lwmod@dividend 007A              ?_PIN_MANAGER_Initialize 0070  
                      __pstringtext1 100B                        __pstringtext2 07E8  
                      __pstringtext3 1000                        __pstringtext4 1015  
                      __pstringtext5 101F                        __pstringtext6 1026  
                      __pstringtext7 0000                             sprintf@c 0033  
                           sprintf@f 0020                           _SSP1DATPPS 0EC6  
                         _SSP1CLKPPS 0EC5                      ___lwmod@divisor 0078  
                    ___lwmod@counter 007D       __end_of_PIN_MANAGER_Initialize 0760  
