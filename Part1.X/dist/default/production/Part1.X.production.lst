

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Oct 25 17:00:49 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 30/04/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F18875 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001C                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  008C                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0110                     	;# 
   135  0110                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0112                     	;# 
   139  0113                     	;# 
   140  0114                     	;# 
   141  0114                     	;# 
   142  0115                     	;# 
   143  0116                     	;# 
   144  0116                     	;# 
   145  0117                     	;# 
   146  0119                     	;# 
   147  0119                     	;# 
   148  0119                     	;# 
   149  011A                     	;# 
   150  011A                     	;# 
   151  011A                     	;# 
   152  011B                     	;# 
   153  011B                     	;# 
   154  011B                     	;# 
   155  011B                     	;# 
   156  011B                     	;# 
   157  011C                     	;# 
   158  011C                     	;# 
   159  011C                     	;# 
   160  011D                     	;# 
   161  011D                     	;# 
   162  011D                     	;# 
   163  011E                     	;# 
   164  011E                     	;# 
   165  011E                     	;# 
   166  011F                     	;# 
   167  011F                     	;# 
   168  011F                     	;# 
   169  011F                     	;# 
   170  011F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  018E                     	;# 
   174  018F                     	;# 
   175  0190                     	;# 
   176  0191                     	;# 
   177  0192                     	;# 
   178  0196                     	;# 
   179  0197                     	;# 
   180  0198                     	;# 
   181  0199                     	;# 
   182  019A                     	;# 
   183  019B                     	;# 
   184  019C                     	;# 
   185  020C                     	;# 
   186  020C                     	;# 
   187  020D                     	;# 
   188  020E                     	;# 
   189  020F                     	;# 
   190  020F                     	;# 
   191  0210                     	;# 
   192  0210                     	;# 
   193  0211                     	;# 
   194  0211                     	;# 
   195  0212                     	;# 
   196  0212                     	;# 
   197  0213                     	;# 
   198  0214                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0216                     	;# 
   202  0216                     	;# 
   203  0217                     	;# 
   204  0217                     	;# 
   205  0218                     	;# 
   206  0218                     	;# 
   207  0219                     	;# 
   208  021A                     	;# 
   209  021B                     	;# 
   210  021B                     	;# 
   211  021C                     	;# 
   212  021C                     	;# 
   213  021D                     	;# 
   214  021D                     	;# 
   215  021E                     	;# 
   216  021F                     	;# 
   217  028C                     	;# 
   218  028C                     	;# 
   219  028D                     	;# 
   220  028D                     	;# 
   221  028E                     	;# 
   222  028F                     	;# 
   223  0290                     	;# 
   224  0290                     	;# 
   225  0291                     	;# 
   226  0292                     	;# 
   227  0292                     	;# 
   228  0293                     	;# 
   229  0293                     	;# 
   230  0294                     	;# 
   231  0295                     	;# 
   232  0296                     	;# 
   233  0296                     	;# 
   234  0297                     	;# 
   235  0298                     	;# 
   236  0298                     	;# 
   237  0299                     	;# 
   238  0299                     	;# 
   239  029A                     	;# 
   240  029B                     	;# 
   241  029C                     	;# 
   242  029C                     	;# 
   243  029D                     	;# 
   244  030C                     	;# 
   245  030C                     	;# 
   246  030D                     	;# 
   247  030E                     	;# 
   248  030F                     	;# 
   249  0310                     	;# 
   250  0310                     	;# 
   251  0311                     	;# 
   252  0312                     	;# 
   253  0313                     	;# 
   254  0314                     	;# 
   255  0314                     	;# 
   256  0315                     	;# 
   257  0316                     	;# 
   258  0317                     	;# 
   259  0318                     	;# 
   260  0318                     	;# 
   261  0319                     	;# 
   262  031A                     	;# 
   263  031B                     	;# 
   264  031C                     	;# 
   265  031C                     	;# 
   266  031D                     	;# 
   267  031E                     	;# 
   268  031F                     	;# 
   269  038C                     	;# 
   270  038C                     	;# 
   271  038D                     	;# 
   272  038E                     	;# 
   273  0390                     	;# 
   274  0390                     	;# 
   275  0391                     	;# 
   276  0392                     	;# 
   277  040C                     	;# 
   278  040D                     	;# 
   279  040E                     	;# 
   280  040F                     	;# 
   281  0410                     	;# 
   282  0411                     	;# 
   283  0416                     	;# 
   284  0416                     	;# 
   285  0417                     	;# 
   286  0418                     	;# 
   287  0418                     	;# 
   288  0419                     	;# 
   289  041A                     	;# 
   290  041A                     	;# 
   291  041B                     	;# 
   292  041C                     	;# 
   293  041C                     	;# 
   294  041D                     	;# 
   295  041E                     	;# 
   296  041F                     	;# 
   297  048C                     	;# 
   298  048C                     	;# 
   299  048D                     	;# 
   300  048E                     	;# 
   301  048F                     	;# 
   302  048F                     	;# 
   303  0490                     	;# 
   304  0491                     	;# 
   305  0492                     	;# 
   306  0492                     	;# 
   307  0493                     	;# 
   308  0494                     	;# 
   309  0495                     	;# 
   310  0495                     	;# 
   311  0496                     	;# 
   312  0497                     	;# 
   313  0498                     	;# 
   314  0499                     	;# 
   315  049A                     	;# 
   316  049B                     	;# 
   317  049C                     	;# 
   318  049D                     	;# 
   319  050C                     	;# 
   320  050C                     	;# 
   321  050D                     	;# 
   322  050E                     	;# 
   323  050F                     	;# 
   324  050F                     	;# 
   325  0510                     	;# 
   326  0511                     	;# 
   327  0512                     	;# 
   328  0512                     	;# 
   329  0513                     	;# 
   330  0514                     	;# 
   331  0515                     	;# 
   332  0515                     	;# 
   333  0516                     	;# 
   334  0517                     	;# 
   335  0518                     	;# 
   336  0519                     	;# 
   337  051A                     	;# 
   338  051B                     	;# 
   339  051C                     	;# 
   340  051D                     	;# 
   341  058C                     	;# 
   342  058C                     	;# 
   343  058D                     	;# 
   344  058E                     	;# 
   345  058F                     	;# 
   346  058F                     	;# 
   347  0590                     	;# 
   348  0591                     	;# 
   349  0592                     	;# 
   350  0593                     	;# 
   351  060C                     	;# 
   352  060D                     	;# 
   353  060E                     	;# 
   354  060F                     	;# 
   355  0610                     	;# 
   356  0611                     	;# 
   357  0612                     	;# 
   358  0613                     	;# 
   359  0614                     	;# 
   360  0616                     	;# 
   361  0617                     	;# 
   362  0618                     	;# 
   363  0619                     	;# 
   364  061A                     	;# 
   365  061B                     	;# 
   366  061C                     	;# 
   367  061D                     	;# 
   368  061E                     	;# 
   369  068C                     	;# 
   370  068D                     	;# 
   371  068E                     	;# 
   372  068F                     	;# 
   373  0690                     	;# 
   374  0691                     	;# 
   375  0692                     	;# 
   376  0693                     	;# 
   377  0694                     	;# 
   378  070C                     	;# 
   379  070D                     	;# 
   380  070E                     	;# 
   381  070F                     	;# 
   382  0710                     	;# 
   383  0711                     	;# 
   384  0712                     	;# 
   385  0713                     	;# 
   386  0714                     	;# 
   387  0716                     	;# 
   388  0717                     	;# 
   389  0718                     	;# 
   390  0719                     	;# 
   391  071A                     	;# 
   392  071B                     	;# 
   393  071C                     	;# 
   394  071D                     	;# 
   395  071E                     	;# 
   396  0796                     	;# 
   397  0797                     	;# 
   398  0798                     	;# 
   399  0799                     	;# 
   400  079A                     	;# 
   401  079B                     	;# 
   402  080C                     	;# 
   403  080D                     	;# 
   404  080E                     	;# 
   405  080F                     	;# 
   406  0810                     	;# 
   407  0811                     	;# 
   408  0812                     	;# 
   409  0813                     	;# 
   410  0814                     	;# 
   411  081A                     	;# 
   412  081B                     	;# 
   413  081C                     	;# 
   414  081D                     	;# 
   415  081E                     	;# 
   416  081F                     	;# 
   417  088C                     	;# 
   418  088D                     	;# 
   419  088E                     	;# 
   420  088F                     	;# 
   421  0890                     	;# 
   422  0891                     	;# 
   423  0892                     	;# 
   424  0893                     	;# 
   425  0895                     	;# 
   426  0896                     	;# 
   427  0897                     	;# 
   428  0898                     	;# 
   429  0899                     	;# 
   430  089A                     	;# 
   431  089B                     	;# 
   432  090C                     	;# 
   433  090E                     	;# 
   434  090F                     	;# 
   435  091F                     	;# 
   436  091F                     	;# 
   437  098F                     	;# 
   438  098F                     	;# 
   439  0990                     	;# 
   440  0991                     	;# 
   441  0992                     	;# 
   442  0993                     	;# 
   443  0994                     	;# 
   444  0995                     	;# 
   445  0996                     	;# 
   446  0997                     	;# 
   447  0E0F                     	;# 
   448  0E10                     	;# 
   449  0E11                     	;# 
   450  0E12                     	;# 
   451  0E13                     	;# 
   452  0E14                     	;# 
   453  0E15                     	;# 
   454  0E16                     	;# 
   455  0E17                     	;# 
   456  0E18                     	;# 
   457  0E19                     	;# 
   458  0E1A                     	;# 
   459  0E1B                     	;# 
   460  0E1C                     	;# 
   461  0E1D                     	;# 
   462  0E1E                     	;# 
   463  0E1F                     	;# 
   464  0E20                     	;# 
   465  0E21                     	;# 
   466  0E22                     	;# 
   467  0E23                     	;# 
   468  0E24                     	;# 
   469  0E25                     	;# 
   470  0E26                     	;# 
   471  0E27                     	;# 
   472  0E28                     	;# 
   473  0E29                     	;# 
   474  0E2A                     	;# 
   475  0E2B                     	;# 
   476  0E2C                     	;# 
   477  0E2D                     	;# 
   478  0E2E                     	;# 
   479  0E2F                     	;# 
   480  0E30                     	;# 
   481  0E31                     	;# 
   482  0E32                     	;# 
   483  0E33                     	;# 
   484  0E34                     	;# 
   485  0E35                     	;# 
   486  0E36                     	;# 
   487  0E37                     	;# 
   488  0E8F                     	;# 
   489  0E90                     	;# 
   490  0E91                     	;# 
   491  0E92                     	;# 
   492  0E93                     	;# 
   493  0E94                     	;# 
   494  0E95                     	;# 
   495  0E96                     	;# 
   496  0E97                     	;# 
   497  0E9C                     	;# 
   498  0E9D                     	;# 
   499  0E9E                     	;# 
   500  0EA1                     	;# 
   501  0EA2                     	;# 
   502  0EA3                     	;# 
   503  0EA4                     	;# 
   504  0EA5                     	;# 
   505  0EA9                     	;# 
   506  0EAA                     	;# 
   507  0EAB                     	;# 
   508  0EAC                     	;# 
   509  0EB1                     	;# 
   510  0EB2                     	;# 
   511  0EB3                     	;# 
   512  0EB8                     	;# 
   513  0EB9                     	;# 
   514  0EBA                     	;# 
   515  0EBB                     	;# 
   516  0EBC                     	;# 
   517  0EBD                     	;# 
   518  0EBE                     	;# 
   519  0EC3                     	;# 
   520  0EC5                     	;# 
   521  0EC6                     	;# 
   522  0EC7                     	;# 
   523  0EC8                     	;# 
   524  0EC9                     	;# 
   525  0ECA                     	;# 
   526  0ECB                     	;# 
   527  0ECC                     	;# 
   528  0F10                     	;# 
   529  0F11                     	;# 
   530  0F12                     	;# 
   531  0F13                     	;# 
   532  0F14                     	;# 
   533  0F15                     	;# 
   534  0F16                     	;# 
   535  0F17                     	;# 
   536  0F18                     	;# 
   537  0F19                     	;# 
   538  0F1A                     	;# 
   539  0F1B                     	;# 
   540  0F1C                     	;# 
   541  0F1D                     	;# 
   542  0F1E                     	;# 
   543  0F1F                     	;# 
   544  0F20                     	;# 
   545  0F21                     	;# 
   546  0F22                     	;# 
   547  0F23                     	;# 
   548  0F24                     	;# 
   549  0F25                     	;# 
   550  0F26                     	;# 
   551  0F27                     	;# 
   552  0F28                     	;# 
   553  0F29                     	;# 
   554  0F2A                     	;# 
   555  0F2B                     	;# 
   556  0F2C                     	;# 
   557  0F2D                     	;# 
   558  0F2E                     	;# 
   559  0F2F                     	;# 
   560  0F30                     	;# 
   561  0F31                     	;# 
   562  0F32                     	;# 
   563  0F38                     	;# 
   564  0F39                     	;# 
   565  0F3A                     	;# 
   566  0F3B                     	;# 
   567  0F3C                     	;# 
   568  0F3D                     	;# 
   569  0F3E                     	;# 
   570  0F3F                     	;# 
   571  0F40                     	;# 
   572  0F41                     	;# 
   573  0F43                     	;# 
   574  0F44                     	;# 
   575  0F45                     	;# 
   576  0F46                     	;# 
   577  0F47                     	;# 
   578  0F48                     	;# 
   579  0F49                     	;# 
   580  0F4A                     	;# 
   581  0F4B                     	;# 
   582  0F4C                     	;# 
   583  0F4E                     	;# 
   584  0F4F                     	;# 
   585  0F50                     	;# 
   586  0F51                     	;# 
   587  0F52                     	;# 
   588  0F53                     	;# 
   589  0F54                     	;# 
   590  0F55                     	;# 
   591  0F56                     	;# 
   592  0F57                     	;# 
   593  0F59                     	;# 
   594  0F5A                     	;# 
   595  0F5B                     	;# 
   596  0F5C                     	;# 
   597  0F5D                     	;# 
   598  0F61                     	;# 
   599  0F62                     	;# 
   600  0F64                     	;# 
   601  0F65                     	;# 
   602  0F66                     	;# 
   603  0F67                     	;# 
   604  0F68                     	;# 
   605  0F69                     	;# 
   606  0F6A                     	;# 
   607  0F6B                     	;# 
   608  0F6C                     	;# 
   609  0F6D                     	;# 
   610  0FE4                     	;# 
   611  0FE5                     	;# 
   612  0FE6                     	;# 
   613  0FE7                     	;# 
   614  0FE8                     	;# 
   615  0FE9                     	;# 
   616  0FEA                     	;# 
   617  0FEB                     	;# 
   618  0FED                     	;# 
   619  0FEE                     	;# 
   620  0FEF                     	;# 
   621  0000                     	;# 
   622  0001                     	;# 
   623  0002                     	;# 
   624  0003                     	;# 
   625  0004                     	;# 
   626  0005                     	;# 
   627  0006                     	;# 
   628  0007                     	;# 
   629  0008                     	;# 
   630  0009                     	;# 
   631  000A                     	;# 
   632  000B                     	;# 
   633  000C                     	;# 
   634  000D                     	;# 
   635  000E                     	;# 
   636  000F                     	;# 
   637  0010                     	;# 
   638  0011                     	;# 
   639  0012                     	;# 
   640  0013                     	;# 
   641  0014                     	;# 
   642  0015                     	;# 
   643  0016                     	;# 
   644  0017                     	;# 
   645  0018                     	;# 
   646  0019                     	;# 
   647  001A                     	;# 
   648  001C                     	;# 
   649  001C                     	;# 
   650  001D                     	;# 
   651  001D                     	;# 
   652  001E                     	;# 
   653  001F                     	;# 
   654  008C                     	;# 
   655  008C                     	;# 
   656  008D                     	;# 
   657  008E                     	;# 
   658  008E                     	;# 
   659  008F                     	;# 
   660  0090                     	;# 
   661  0090                     	;# 
   662  0091                     	;# 
   663  0093                     	;# 
   664  0094                     	;# 
   665  0095                     	;# 
   666  0096                     	;# 
   667  0097                     	;# 
   668  0098                     	;# 
   669  0099                     	;# 
   670  009A                     	;# 
   671  009B                     	;# 
   672  009C                     	;# 
   673  009D                     	;# 
   674  009E                     	;# 
   675  010C                     	;# 
   676  010D                     	;# 
   677  010E                     	;# 
   678  010E                     	;# 
   679  010F                     	;# 
   680  0110                     	;# 
   681  0110                     	;# 
   682  0111                     	;# 
   683  0112                     	;# 
   684  0112                     	;# 
   685  0113                     	;# 
   686  0114                     	;# 
   687  0114                     	;# 
   688  0115                     	;# 
   689  0116                     	;# 
   690  0116                     	;# 
   691  0117                     	;# 
   692  0119                     	;# 
   693  0119                     	;# 
   694  0119                     	;# 
   695  011A                     	;# 
   696  011A                     	;# 
   697  011A                     	;# 
   698  011B                     	;# 
   699  011B                     	;# 
   700  011B                     	;# 
   701  011B                     	;# 
   702  011B                     	;# 
   703  011C                     	;# 
   704  011C                     	;# 
   705  011C                     	;# 
   706  011D                     	;# 
   707  011D                     	;# 
   708  011D                     	;# 
   709  011E                     	;# 
   710  011E                     	;# 
   711  011E                     	;# 
   712  011F                     	;# 
   713  011F                     	;# 
   714  011F                     	;# 
   715  011F                     	;# 
   716  011F                     	;# 
   717  018C                     	;# 
   718  018D                     	;# 
   719  018E                     	;# 
   720  018F                     	;# 
   721  0190                     	;# 
   722  0191                     	;# 
   723  0192                     	;# 
   724  0196                     	;# 
   725  0197                     	;# 
   726  0198                     	;# 
   727  0199                     	;# 
   728  019A                     	;# 
   729  019B                     	;# 
   730  019C                     	;# 
   731  020C                     	;# 
   732  020C                     	;# 
   733  020D                     	;# 
   734  020E                     	;# 
   735  020F                     	;# 
   736  020F                     	;# 
   737  0210                     	;# 
   738  0210                     	;# 
   739  0211                     	;# 
   740  0211                     	;# 
   741  0212                     	;# 
   742  0212                     	;# 
   743  0213                     	;# 
   744  0214                     	;# 
   745  0215                     	;# 
   746  0215                     	;# 
   747  0216                     	;# 
   748  0216                     	;# 
   749  0217                     	;# 
   750  0217                     	;# 
   751  0218                     	;# 
   752  0218                     	;# 
   753  0219                     	;# 
   754  021A                     	;# 
   755  021B                     	;# 
   756  021B                     	;# 
   757  021C                     	;# 
   758  021C                     	;# 
   759  021D                     	;# 
   760  021D                     	;# 
   761  021E                     	;# 
   762  021F                     	;# 
   763  028C                     	;# 
   764  028C                     	;# 
   765  028D                     	;# 
   766  028D                     	;# 
   767  028E                     	;# 
   768  028F                     	;# 
   769  0290                     	;# 
   770  0290                     	;# 
   771  0291                     	;# 
   772  0292                     	;# 
   773  0292                     	;# 
   774  0293                     	;# 
   775  0293                     	;# 
   776  0294                     	;# 
   777  0295                     	;# 
   778  0296                     	;# 
   779  0296                     	;# 
   780  0297                     	;# 
   781  0298                     	;# 
   782  0298                     	;# 
   783  0299                     	;# 
   784  0299                     	;# 
   785  029A                     	;# 
   786  029B                     	;# 
   787  029C                     	;# 
   788  029C                     	;# 
   789  029D                     	;# 
   790  030C                     	;# 
   791  030C                     	;# 
   792  030D                     	;# 
   793  030E                     	;# 
   794  030F                     	;# 
   795  0310                     	;# 
   796  0310                     	;# 
   797  0311                     	;# 
   798  0312                     	;# 
   799  0313                     	;# 
   800  0314                     	;# 
   801  0314                     	;# 
   802  0315                     	;# 
   803  0316                     	;# 
   804  0317                     	;# 
   805  0318                     	;# 
   806  0318                     	;# 
   807  0319                     	;# 
   808  031A                     	;# 
   809  031B                     	;# 
   810  031C                     	;# 
   811  031C                     	;# 
   812  031D                     	;# 
   813  031E                     	;# 
   814  031F                     	;# 
   815  038C                     	;# 
   816  038C                     	;# 
   817  038D                     	;# 
   818  038E                     	;# 
   819  0390                     	;# 
   820  0390                     	;# 
   821  0391                     	;# 
   822  0392                     	;# 
   823  040C                     	;# 
   824  040D                     	;# 
   825  040E                     	;# 
   826  040F                     	;# 
   827  0410                     	;# 
   828  0411                     	;# 
   829  0416                     	;# 
   830  0416                     	;# 
   831  0417                     	;# 
   832  0418                     	;# 
   833  0418                     	;# 
   834  0419                     	;# 
   835  041A                     	;# 
   836  041A                     	;# 
   837  041B                     	;# 
   838  041C                     	;# 
   839  041C                     	;# 
   840  041D                     	;# 
   841  041E                     	;# 
   842  041F                     	;# 
   843  048C                     	;# 
   844  048C                     	;# 
   845  048D                     	;# 
   846  048E                     	;# 
   847  048F                     	;# 
   848  048F                     	;# 
   849  0490                     	;# 
   850  0491                     	;# 
   851  0492                     	;# 
   852  0492                     	;# 
   853  0493                     	;# 
   854  0494                     	;# 
   855  0495                     	;# 
   856  0495                     	;# 
   857  0496                     	;# 
   858  0497                     	;# 
   859  0498                     	;# 
   860  0499                     	;# 
   861  049A                     	;# 
   862  049B                     	;# 
   863  049C                     	;# 
   864  049D                     	;# 
   865  050C                     	;# 
   866  050C                     	;# 
   867  050D                     	;# 
   868  050E                     	;# 
   869  050F                     	;# 
   870  050F                     	;# 
   871  0510                     	;# 
   872  0511                     	;# 
   873  0512                     	;# 
   874  0512                     	;# 
   875  0513                     	;# 
   876  0514                     	;# 
   877  0515                     	;# 
   878  0515                     	;# 
   879  0516                     	;# 
   880  0517                     	;# 
   881  0518                     	;# 
   882  0519                     	;# 
   883  051A                     	;# 
   884  051B                     	;# 
   885  051C                     	;# 
   886  051D                     	;# 
   887  058C                     	;# 
   888  058C                     	;# 
   889  058D                     	;# 
   890  058E                     	;# 
   891  058F                     	;# 
   892  058F                     	;# 
   893  0590                     	;# 
   894  0591                     	;# 
   895  0592                     	;# 
   896  0593                     	;# 
   897  060C                     	;# 
   898  060D                     	;# 
   899  060E                     	;# 
   900  060F                     	;# 
   901  0610                     	;# 
   902  0611                     	;# 
   903  0612                     	;# 
   904  0613                     	;# 
   905  0614                     	;# 
   906  0616                     	;# 
   907  0617                     	;# 
   908  0618                     	;# 
   909  0619                     	;# 
   910  061A                     	;# 
   911  061B                     	;# 
   912  061C                     	;# 
   913  061D                     	;# 
   914  061E                     	;# 
   915  068C                     	;# 
   916  068D                     	;# 
   917  068E                     	;# 
   918  068F                     	;# 
   919  0690                     	;# 
   920  0691                     	;# 
   921  0692                     	;# 
   922  0693                     	;# 
   923  0694                     	;# 
   924  070C                     	;# 
   925  070D                     	;# 
   926  070E                     	;# 
   927  070F                     	;# 
   928  0710                     	;# 
   929  0711                     	;# 
   930  0712                     	;# 
   931  0713                     	;# 
   932  0714                     	;# 
   933  0716                     	;# 
   934  0717                     	;# 
   935  0718                     	;# 
   936  0719                     	;# 
   937  071A                     	;# 
   938  071B                     	;# 
   939  071C                     	;# 
   940  071D                     	;# 
   941  071E                     	;# 
   942  0796                     	;# 
   943  0797                     	;# 
   944  0798                     	;# 
   945  0799                     	;# 
   946  079A                     	;# 
   947  079B                     	;# 
   948  080C                     	;# 
   949  080D                     	;# 
   950  080E                     	;# 
   951  080F                     	;# 
   952  0810                     	;# 
   953  0811                     	;# 
   954  0812                     	;# 
   955  0813                     	;# 
   956  0814                     	;# 
   957  081A                     	;# 
   958  081B                     	;# 
   959  081C                     	;# 
   960  081D                     	;# 
   961  081E                     	;# 
   962  081F                     	;# 
   963  088C                     	;# 
   964  088D                     	;# 
   965  088E                     	;# 
   966  088F                     	;# 
   967  0890                     	;# 
   968  0891                     	;# 
   969  0892                     	;# 
   970  0893                     	;# 
   971  0895                     	;# 
   972  0896                     	;# 
   973  0897                     	;# 
   974  0898                     	;# 
   975  0899                     	;# 
   976  089A                     	;# 
   977  089B                     	;# 
   978  090C                     	;# 
   979  090E                     	;# 
   980  090F                     	;# 
   981  091F                     	;# 
   982  091F                     	;# 
   983  098F                     	;# 
   984  098F                     	;# 
   985  0990                     	;# 
   986  0991                     	;# 
   987  0992                     	;# 
   988  0993                     	;# 
   989  0994                     	;# 
   990  0995                     	;# 
   991  0996                     	;# 
   992  0997                     	;# 
   993  0E0F                     	;# 
   994  0E10                     	;# 
   995  0E11                     	;# 
   996  0E12                     	;# 
   997  0E13                     	;# 
   998  0E14                     	;# 
   999  0E15                     	;# 
  1000  0E16                     	;# 
  1001  0E17                     	;# 
  1002  0E18                     	;# 
  1003  0E19                     	;# 
  1004  0E1A                     	;# 
  1005  0E1B                     	;# 
  1006  0E1C                     	;# 
  1007  0E1D                     	;# 
  1008  0E1E                     	;# 
  1009  0E1F                     	;# 
  1010  0E20                     	;# 
  1011  0E21                     	;# 
  1012  0E22                     	;# 
  1013  0E23                     	;# 
  1014  0E24                     	;# 
  1015  0E25                     	;# 
  1016  0E26                     	;# 
  1017  0E27                     	;# 
  1018  0E28                     	;# 
  1019  0E29                     	;# 
  1020  0E2A                     	;# 
  1021  0E2B                     	;# 
  1022  0E2C                     	;# 
  1023  0E2D                     	;# 
  1024  0E2E                     	;# 
  1025  0E2F                     	;# 
  1026  0E30                     	;# 
  1027  0E31                     	;# 
  1028  0E32                     	;# 
  1029  0E33                     	;# 
  1030  0E34                     	;# 
  1031  0E35                     	;# 
  1032  0E36                     	;# 
  1033  0E37                     	;# 
  1034  0E8F                     	;# 
  1035  0E90                     	;# 
  1036  0E91                     	;# 
  1037  0E92                     	;# 
  1038  0E93                     	;# 
  1039  0E94                     	;# 
  1040  0E95                     	;# 
  1041  0E96                     	;# 
  1042  0E97                     	;# 
  1043  0E9C                     	;# 
  1044  0E9D                     	;# 
  1045  0E9E                     	;# 
  1046  0EA1                     	;# 
  1047  0EA2                     	;# 
  1048  0EA3                     	;# 
  1049  0EA4                     	;# 
  1050  0EA5                     	;# 
  1051  0EA9                     	;# 
  1052  0EAA                     	;# 
  1053  0EAB                     	;# 
  1054  0EAC                     	;# 
  1055  0EB1                     	;# 
  1056  0EB2                     	;# 
  1057  0EB3                     	;# 
  1058  0EB8                     	;# 
  1059  0EB9                     	;# 
  1060  0EBA                     	;# 
  1061  0EBB                     	;# 
  1062  0EBC                     	;# 
  1063  0EBD                     	;# 
  1064  0EBE                     	;# 
  1065  0EC3                     	;# 
  1066  0EC5                     	;# 
  1067  0EC6                     	;# 
  1068  0EC7                     	;# 
  1069  0EC8                     	;# 
  1070  0EC9                     	;# 
  1071  0ECA                     	;# 
  1072  0ECB                     	;# 
  1073  0ECC                     	;# 
  1074  0F10                     	;# 
  1075  0F11                     	;# 
  1076  0F12                     	;# 
  1077  0F13                     	;# 
  1078  0F14                     	;# 
  1079  0F15                     	;# 
  1080  0F16                     	;# 
  1081  0F17                     	;# 
  1082  0F18                     	;# 
  1083  0F19                     	;# 
  1084  0F1A                     	;# 
  1085  0F1B                     	;# 
  1086  0F1C                     	;# 
  1087  0F1D                     	;# 
  1088  0F1E                     	;# 
  1089  0F1F                     	;# 
  1090  0F20                     	;# 
  1091  0F21                     	;# 
  1092  0F22                     	;# 
  1093  0F23                     	;# 
  1094  0F24                     	;# 
  1095  0F25                     	;# 
  1096  0F26                     	;# 
  1097  0F27                     	;# 
  1098  0F28                     	;# 
  1099  0F29                     	;# 
  1100  0F2A                     	;# 
  1101  0F2B                     	;# 
  1102  0F2C                     	;# 
  1103  0F2D                     	;# 
  1104  0F2E                     	;# 
  1105  0F2F                     	;# 
  1106  0F30                     	;# 
  1107  0F31                     	;# 
  1108  0F32                     	;# 
  1109  0F38                     	;# 
  1110  0F39                     	;# 
  1111  0F3A                     	;# 
  1112  0F3B                     	;# 
  1113  0F3C                     	;# 
  1114  0F3D                     	;# 
  1115  0F3E                     	;# 
  1116  0F3F                     	;# 
  1117  0F40                     	;# 
  1118  0F41                     	;# 
  1119  0F43                     	;# 
  1120  0F44                     	;# 
  1121  0F45                     	;# 
  1122  0F46                     	;# 
  1123  0F47                     	;# 
  1124  0F48                     	;# 
  1125  0F49                     	;# 
  1126  0F4A                     	;# 
  1127  0F4B                     	;# 
  1128  0F4C                     	;# 
  1129  0F4E                     	;# 
  1130  0F4F                     	;# 
  1131  0F50                     	;# 
  1132  0F51                     	;# 
  1133  0F52                     	;# 
  1134  0F53                     	;# 
  1135  0F54                     	;# 
  1136  0F55                     	;# 
  1137  0F56                     	;# 
  1138  0F57                     	;# 
  1139  0F59                     	;# 
  1140  0F5A                     	;# 
  1141  0F5B                     	;# 
  1142  0F5C                     	;# 
  1143  0F5D                     	;# 
  1144  0F61                     	;# 
  1145  0F62                     	;# 
  1146  0F64                     	;# 
  1147  0F65                     	;# 
  1148  0F66                     	;# 
  1149  0F67                     	;# 
  1150  0F68                     	;# 
  1151  0F69                     	;# 
  1152  0F6A                     	;# 
  1153  0F6B                     	;# 
  1154  0F6C                     	;# 
  1155  0F6D                     	;# 
  1156  0FE4                     	;# 
  1157  0FE5                     	;# 
  1158  0FE6                     	;# 
  1159  0FE7                     	;# 
  1160  0FE8                     	;# 
  1161  0FE9                     	;# 
  1162  0FEA                     	;# 
  1163  0FEB                     	;# 
  1164  0FED                     	;# 
  1165  0FEE                     	;# 
  1166  0FEF                     	;# 
  1167  0000                     	;# 
  1168  0001                     	;# 
  1169  0002                     	;# 
  1170  0003                     	;# 
  1171  0004                     	;# 
  1172  0005                     	;# 
  1173  0006                     	;# 
  1174  0007                     	;# 
  1175  0008                     	;# 
  1176  0009                     	;# 
  1177  000A                     	;# 
  1178  000B                     	;# 
  1179  000C                     	;# 
  1180  000D                     	;# 
  1181  000E                     	;# 
  1182  000F                     	;# 
  1183  0010                     	;# 
  1184  0011                     	;# 
  1185  0012                     	;# 
  1186  0013                     	;# 
  1187  0014                     	;# 
  1188  0015                     	;# 
  1189  0016                     	;# 
  1190  0017                     	;# 
  1191  0018                     	;# 
  1192  0019                     	;# 
  1193  001A                     	;# 
  1194  001C                     	;# 
  1195  001C                     	;# 
  1196  001D                     	;# 
  1197  001D                     	;# 
  1198  001E                     	;# 
  1199  001F                     	;# 
  1200  008C                     	;# 
  1201  008C                     	;# 
  1202  008D                     	;# 
  1203  008E                     	;# 
  1204  008E                     	;# 
  1205  008F                     	;# 
  1206  0090                     	;# 
  1207  0090                     	;# 
  1208  0091                     	;# 
  1209  0093                     	;# 
  1210  0094                     	;# 
  1211  0095                     	;# 
  1212  0096                     	;# 
  1213  0097                     	;# 
  1214  0098                     	;# 
  1215  0099                     	;# 
  1216  009A                     	;# 
  1217  009B                     	;# 
  1218  009C                     	;# 
  1219  009D                     	;# 
  1220  009E                     	;# 
  1221  010C                     	;# 
  1222  010D                     	;# 
  1223  010E                     	;# 
  1224  010E                     	;# 
  1225  010F                     	;# 
  1226  0110                     	;# 
  1227  0110                     	;# 
  1228  0111                     	;# 
  1229  0112                     	;# 
  1230  0112                     	;# 
  1231  0113                     	;# 
  1232  0114                     	;# 
  1233  0114                     	;# 
  1234  0115                     	;# 
  1235  0116                     	;# 
  1236  0116                     	;# 
  1237  0117                     	;# 
  1238  0119                     	;# 
  1239  0119                     	;# 
  1240  0119                     	;# 
  1241  011A                     	;# 
  1242  011A                     	;# 
  1243  011A                     	;# 
  1244  011B                     	;# 
  1245  011B                     	;# 
  1246  011B                     	;# 
  1247  011B                     	;# 
  1248  011B                     	;# 
  1249  011C                     	;# 
  1250  011C                     	;# 
  1251  011C                     	;# 
  1252  011D                     	;# 
  1253  011D                     	;# 
  1254  011D                     	;# 
  1255  011E                     	;# 
  1256  011E                     	;# 
  1257  011E                     	;# 
  1258  011F                     	;# 
  1259  011F                     	;# 
  1260  011F                     	;# 
  1261  011F                     	;# 
  1262  011F                     	;# 
  1263  018C                     	;# 
  1264  018D                     	;# 
  1265  018E                     	;# 
  1266  018F                     	;# 
  1267  0190                     	;# 
  1268  0191                     	;# 
  1269  0192                     	;# 
  1270  0196                     	;# 
  1271  0197                     	;# 
  1272  0198                     	;# 
  1273  0199                     	;# 
  1274  019A                     	;# 
  1275  019B                     	;# 
  1276  019C                     	;# 
  1277  020C                     	;# 
  1278  020C                     	;# 
  1279  020D                     	;# 
  1280  020E                     	;# 
  1281  020F                     	;# 
  1282  020F                     	;# 
  1283  0210                     	;# 
  1284  0210                     	;# 
  1285  0211                     	;# 
  1286  0211                     	;# 
  1287  0212                     	;# 
  1288  0212                     	;# 
  1289  0213                     	;# 
  1290  0214                     	;# 
  1291  0215                     	;# 
  1292  0215                     	;# 
  1293  0216                     	;# 
  1294  0216                     	;# 
  1295  0217                     	;# 
  1296  0217                     	;# 
  1297  0218                     	;# 
  1298  0218                     	;# 
  1299  0219                     	;# 
  1300  021A                     	;# 
  1301  021B                     	;# 
  1302  021B                     	;# 
  1303  021C                     	;# 
  1304  021C                     	;# 
  1305  021D                     	;# 
  1306  021D                     	;# 
  1307  021E                     	;# 
  1308  021F                     	;# 
  1309  028C                     	;# 
  1310  028C                     	;# 
  1311  028D                     	;# 
  1312  028D                     	;# 
  1313  028E                     	;# 
  1314  028F                     	;# 
  1315  0290                     	;# 
  1316  0290                     	;# 
  1317  0291                     	;# 
  1318  0292                     	;# 
  1319  0292                     	;# 
  1320  0293                     	;# 
  1321  0293                     	;# 
  1322  0294                     	;# 
  1323  0295                     	;# 
  1324  0296                     	;# 
  1325  0296                     	;# 
  1326  0297                     	;# 
  1327  0298                     	;# 
  1328  0298                     	;# 
  1329  0299                     	;# 
  1330  0299                     	;# 
  1331  029A                     	;# 
  1332  029B                     	;# 
  1333  029C                     	;# 
  1334  029C                     	;# 
  1335  029D                     	;# 
  1336  030C                     	;# 
  1337  030C                     	;# 
  1338  030D                     	;# 
  1339  030E                     	;# 
  1340  030F                     	;# 
  1341  0310                     	;# 
  1342  0310                     	;# 
  1343  0311                     	;# 
  1344  0312                     	;# 
  1345  0313                     	;# 
  1346  0314                     	;# 
  1347  0314                     	;# 
  1348  0315                     	;# 
  1349  0316                     	;# 
  1350  0317                     	;# 
  1351  0318                     	;# 
  1352  0318                     	;# 
  1353  0319                     	;# 
  1354  031A                     	;# 
  1355  031B                     	;# 
  1356  031C                     	;# 
  1357  031C                     	;# 
  1358  031D                     	;# 
  1359  031E                     	;# 
  1360  031F                     	;# 
  1361  038C                     	;# 
  1362  038C                     	;# 
  1363  038D                     	;# 
  1364  038E                     	;# 
  1365  0390                     	;# 
  1366  0390                     	;# 
  1367  0391                     	;# 
  1368  0392                     	;# 
  1369  040C                     	;# 
  1370  040D                     	;# 
  1371  040E                     	;# 
  1372  040F                     	;# 
  1373  0410                     	;# 
  1374  0411                     	;# 
  1375  0416                     	;# 
  1376  0416                     	;# 
  1377  0417                     	;# 
  1378  0418                     	;# 
  1379  0418                     	;# 
  1380  0419                     	;# 
  1381  041A                     	;# 
  1382  041A                     	;# 
  1383  041B                     	;# 
  1384  041C                     	;# 
  1385  041C                     	;# 
  1386  041D                     	;# 
  1387  041E                     	;# 
  1388  041F                     	;# 
  1389  048C                     	;# 
  1390  048C                     	;# 
  1391  048D                     	;# 
  1392  048E                     	;# 
  1393  048F                     	;# 
  1394  048F                     	;# 
  1395  0490                     	;# 
  1396  0491                     	;# 
  1397  0492                     	;# 
  1398  0492                     	;# 
  1399  0493                     	;# 
  1400  0494                     	;# 
  1401  0495                     	;# 
  1402  0495                     	;# 
  1403  0496                     	;# 
  1404  0497                     	;# 
  1405  0498                     	;# 
  1406  0499                     	;# 
  1407  049A                     	;# 
  1408  049B                     	;# 
  1409  049C                     	;# 
  1410  049D                     	;# 
  1411  050C                     	;# 
  1412  050C                     	;# 
  1413  050D                     	;# 
  1414  050E                     	;# 
  1415  050F                     	;# 
  1416  050F                     	;# 
  1417  0510                     	;# 
  1418  0511                     	;# 
  1419  0512                     	;# 
  1420  0512                     	;# 
  1421  0513                     	;# 
  1422  0514                     	;# 
  1423  0515                     	;# 
  1424  0515                     	;# 
  1425  0516                     	;# 
  1426  0517                     	;# 
  1427  0518                     	;# 
  1428  0519                     	;# 
  1429  051A                     	;# 
  1430  051B                     	;# 
  1431  051C                     	;# 
  1432  051D                     	;# 
  1433  058C                     	;# 
  1434  058C                     	;# 
  1435  058D                     	;# 
  1436  058E                     	;# 
  1437  058F                     	;# 
  1438  058F                     	;# 
  1439  0590                     	;# 
  1440  0591                     	;# 
  1441  0592                     	;# 
  1442  0593                     	;# 
  1443  060C                     	;# 
  1444  060D                     	;# 
  1445  060E                     	;# 
  1446  060F                     	;# 
  1447  0610                     	;# 
  1448  0611                     	;# 
  1449  0612                     	;# 
  1450  0613                     	;# 
  1451  0614                     	;# 
  1452  0616                     	;# 
  1453  0617                     	;# 
  1454  0618                     	;# 
  1455  0619                     	;# 
  1456  061A                     	;# 
  1457  061B                     	;# 
  1458  061C                     	;# 
  1459  061D                     	;# 
  1460  061E                     	;# 
  1461  068C                     	;# 
  1462  068D                     	;# 
  1463  068E                     	;# 
  1464  068F                     	;# 
  1465  0690                     	;# 
  1466  0691                     	;# 
  1467  0692                     	;# 
  1468  0693                     	;# 
  1469  0694                     	;# 
  1470  070C                     	;# 
  1471  070D                     	;# 
  1472  070E                     	;# 
  1473  070F                     	;# 
  1474  0710                     	;# 
  1475  0711                     	;# 
  1476  0712                     	;# 
  1477  0713                     	;# 
  1478  0714                     	;# 
  1479  0716                     	;# 
  1480  0717                     	;# 
  1481  0718                     	;# 
  1482  0719                     	;# 
  1483  071A                     	;# 
  1484  071B                     	;# 
  1485  071C                     	;# 
  1486  071D                     	;# 
  1487  071E                     	;# 
  1488  0796                     	;# 
  1489  0797                     	;# 
  1490  0798                     	;# 
  1491  0799                     	;# 
  1492  079A                     	;# 
  1493  079B                     	;# 
  1494  080C                     	;# 
  1495  080D                     	;# 
  1496  080E                     	;# 
  1497  080F                     	;# 
  1498  0810                     	;# 
  1499  0811                     	;# 
  1500  0812                     	;# 
  1501  0813                     	;# 
  1502  0814                     	;# 
  1503  081A                     	;# 
  1504  081B                     	;# 
  1505  081C                     	;# 
  1506  081D                     	;# 
  1507  081E                     	;# 
  1508  081F                     	;# 
  1509  088C                     	;# 
  1510  088D                     	;# 
  1511  088E                     	;# 
  1512  088F                     	;# 
  1513  0890                     	;# 
  1514  0891                     	;# 
  1515  0892                     	;# 
  1516  0893                     	;# 
  1517  0895                     	;# 
  1518  0896                     	;# 
  1519  0897                     	;# 
  1520  0898                     	;# 
  1521  0899                     	;# 
  1522  089A                     	;# 
  1523  089B                     	;# 
  1524  090C                     	;# 
  1525  090E                     	;# 
  1526  090F                     	;# 
  1527  091F                     	;# 
  1528  091F                     	;# 
  1529  098F                     	;# 
  1530  098F                     	;# 
  1531  0990                     	;# 
  1532  0991                     	;# 
  1533  0992                     	;# 
  1534  0993                     	;# 
  1535  0994                     	;# 
  1536  0995                     	;# 
  1537  0996                     	;# 
  1538  0997                     	;# 
  1539  0E0F                     	;# 
  1540  0E10                     	;# 
  1541  0E11                     	;# 
  1542  0E12                     	;# 
  1543  0E13                     	;# 
  1544  0E14                     	;# 
  1545  0E15                     	;# 
  1546  0E16                     	;# 
  1547  0E17                     	;# 
  1548  0E18                     	;# 
  1549  0E19                     	;# 
  1550  0E1A                     	;# 
  1551  0E1B                     	;# 
  1552  0E1C                     	;# 
  1553  0E1D                     	;# 
  1554  0E1E                     	;# 
  1555  0E1F                     	;# 
  1556  0E20                     	;# 
  1557  0E21                     	;# 
  1558  0E22                     	;# 
  1559  0E23                     	;# 
  1560  0E24                     	;# 
  1561  0E25                     	;# 
  1562  0E26                     	;# 
  1563  0E27                     	;# 
  1564  0E28                     	;# 
  1565  0E29                     	;# 
  1566  0E2A                     	;# 
  1567  0E2B                     	;# 
  1568  0E2C                     	;# 
  1569  0E2D                     	;# 
  1570  0E2E                     	;# 
  1571  0E2F                     	;# 
  1572  0E30                     	;# 
  1573  0E31                     	;# 
  1574  0E32                     	;# 
  1575  0E33                     	;# 
  1576  0E34                     	;# 
  1577  0E35                     	;# 
  1578  0E36                     	;# 
  1579  0E37                     	;# 
  1580  0E8F                     	;# 
  1581  0E90                     	;# 
  1582  0E91                     	;# 
  1583  0E92                     	;# 
  1584  0E93                     	;# 
  1585  0E94                     	;# 
  1586  0E95                     	;# 
  1587  0E96                     	;# 
  1588  0E97                     	;# 
  1589  0E9C                     	;# 
  1590  0E9D                     	;# 
  1591  0E9E                     	;# 
  1592  0EA1                     	;# 
  1593  0EA2                     	;# 
  1594  0EA3                     	;# 
  1595  0EA4                     	;# 
  1596  0EA5                     	;# 
  1597  0EA9                     	;# 
  1598  0EAA                     	;# 
  1599  0EAB                     	;# 
  1600  0EAC                     	;# 
  1601  0EB1                     	;# 
  1602  0EB2                     	;# 
  1603  0EB3                     	;# 
  1604  0EB8                     	;# 
  1605  0EB9                     	;# 
  1606  0EBA                     	;# 
  1607  0EBB                     	;# 
  1608  0EBC                     	;# 
  1609  0EBD                     	;# 
  1610  0EBE                     	;# 
  1611  0EC3                     	;# 
  1612  0EC5                     	;# 
  1613  0EC6                     	;# 
  1614  0EC7                     	;# 
  1615  0EC8                     	;# 
  1616  0EC9                     	;# 
  1617  0ECA                     	;# 
  1618  0ECB                     	;# 
  1619  0ECC                     	;# 
  1620  0F10                     	;# 
  1621  0F11                     	;# 
  1622  0F12                     	;# 
  1623  0F13                     	;# 
  1624  0F14                     	;# 
  1625  0F15                     	;# 
  1626  0F16                     	;# 
  1627  0F17                     	;# 
  1628  0F18                     	;# 
  1629  0F19                     	;# 
  1630  0F1A                     	;# 
  1631  0F1B                     	;# 
  1632  0F1C                     	;# 
  1633  0F1D                     	;# 
  1634  0F1E                     	;# 
  1635  0F1F                     	;# 
  1636  0F20                     	;# 
  1637  0F21                     	;# 
  1638  0F22                     	;# 
  1639  0F23                     	;# 
  1640  0F24                     	;# 
  1641  0F25                     	;# 
  1642  0F26                     	;# 
  1643  0F27                     	;# 
  1644  0F28                     	;# 
  1645  0F29                     	;# 
  1646  0F2A                     	;# 
  1647  0F2B                     	;# 
  1648  0F2C                     	;# 
  1649  0F2D                     	;# 
  1650  0F2E                     	;# 
  1651  0F2F                     	;# 
  1652  0F30                     	;# 
  1653  0F31                     	;# 
  1654  0F32                     	;# 
  1655  0F38                     	;# 
  1656  0F39                     	;# 
  1657  0F3A                     	;# 
  1658  0F3B                     	;# 
  1659  0F3C                     	;# 
  1660  0F3D                     	;# 
  1661  0F3E                     	;# 
  1662  0F3F                     	;# 
  1663  0F40                     	;# 
  1664  0F41                     	;# 
  1665  0F43                     	;# 
  1666  0F44                     	;# 
  1667  0F45                     	;# 
  1668  0F46                     	;# 
  1669  0F47                     	;# 
  1670  0F48                     	;# 
  1671  0F49                     	;# 
  1672  0F4A                     	;# 
  1673  0F4B                     	;# 
  1674  0F4C                     	;# 
  1675  0F4E                     	;# 
  1676  0F4F                     	;# 
  1677  0F50                     	;# 
  1678  0F51                     	;# 
  1679  0F52                     	;# 
  1680  0F53                     	;# 
  1681  0F54                     	;# 
  1682  0F55                     	;# 
  1683  0F56                     	;# 
  1684  0F57                     	;# 
  1685  0F59                     	;# 
  1686  0F5A                     	;# 
  1687  0F5B                     	;# 
  1688  0F5C                     	;# 
  1689  0F5D                     	;# 
  1690  0F61                     	;# 
  1691  0F62                     	;# 
  1692  0F64                     	;# 
  1693  0F65                     	;# 
  1694  0F66                     	;# 
  1695  0F67                     	;# 
  1696  0F68                     	;# 
  1697  0F69                     	;# 
  1698  0F6A                     	;# 
  1699  0F6B                     	;# 
  1700  0F6C                     	;# 
  1701  0F6D                     	;# 
  1702  0FE4                     	;# 
  1703  0FE5                     	;# 
  1704  0FE6                     	;# 
  1705  0FE7                     	;# 
  1706  0FE8                     	;# 
  1707  0FE9                     	;# 
  1708  0FEA                     	;# 
  1709  0FEB                     	;# 
  1710  0FED                     	;# 
  1711  0FEE                     	;# 
  1712  0FEF                     	;# 
  1713  0000                     	;# 
  1714  0001                     	;# 
  1715  0002                     	;# 
  1716  0003                     	;# 
  1717  0004                     	;# 
  1718  0005                     	;# 
  1719  0006                     	;# 
  1720  0007                     	;# 
  1721  0008                     	;# 
  1722  0009                     	;# 
  1723  000A                     	;# 
  1724  000B                     	;# 
  1725  000C                     	;# 
  1726  000D                     	;# 
  1727  000E                     	;# 
  1728  000F                     	;# 
  1729  0010                     	;# 
  1730  0011                     	;# 
  1731  0012                     	;# 
  1732  0013                     	;# 
  1733  0014                     	;# 
  1734  0015                     	;# 
  1735  0016                     	;# 
  1736  0017                     	;# 
  1737  0018                     	;# 
  1738  0019                     	;# 
  1739  001A                     	;# 
  1740  001C                     	;# 
  1741  001C                     	;# 
  1742  001D                     	;# 
  1743  001D                     	;# 
  1744  001E                     	;# 
  1745  001F                     	;# 
  1746  008C                     	;# 
  1747  008C                     	;# 
  1748  008D                     	;# 
  1749  008E                     	;# 
  1750  008E                     	;# 
  1751  008F                     	;# 
  1752  0090                     	;# 
  1753  0090                     	;# 
  1754  0091                     	;# 
  1755  0093                     	;# 
  1756  0094                     	;# 
  1757  0095                     	;# 
  1758  0096                     	;# 
  1759  0097                     	;# 
  1760  0098                     	;# 
  1761  0099                     	;# 
  1762  009A                     	;# 
  1763  009B                     	;# 
  1764  009C                     	;# 
  1765  009D                     	;# 
  1766  009E                     	;# 
  1767  010C                     	;# 
  1768  010D                     	;# 
  1769  010E                     	;# 
  1770  010E                     	;# 
  1771  010F                     	;# 
  1772  0110                     	;# 
  1773  0110                     	;# 
  1774  0111                     	;# 
  1775  0112                     	;# 
  1776  0112                     	;# 
  1777  0113                     	;# 
  1778  0114                     	;# 
  1779  0114                     	;# 
  1780  0115                     	;# 
  1781  0116                     	;# 
  1782  0116                     	;# 
  1783  0117                     	;# 
  1784  0119                     	;# 
  1785  0119                     	;# 
  1786  0119                     	;# 
  1787  011A                     	;# 
  1788  011A                     	;# 
  1789  011A                     	;# 
  1790  011B                     	;# 
  1791  011B                     	;# 
  1792  011B                     	;# 
  1793  011B                     	;# 
  1794  011B                     	;# 
  1795  011C                     	;# 
  1796  011C                     	;# 
  1797  011C                     	;# 
  1798  011D                     	;# 
  1799  011D                     	;# 
  1800  011D                     	;# 
  1801  011E                     	;# 
  1802  011E                     	;# 
  1803  011E                     	;# 
  1804  011F                     	;# 
  1805  011F                     	;# 
  1806  011F                     	;# 
  1807  011F                     	;# 
  1808  011F                     	;# 
  1809  018C                     	;# 
  1810  018D                     	;# 
  1811  018E                     	;# 
  1812  018F                     	;# 
  1813  0190                     	;# 
  1814  0191                     	;# 
  1815  0192                     	;# 
  1816  0196                     	;# 
  1817  0197                     	;# 
  1818  0198                     	;# 
  1819  0199                     	;# 
  1820  019A                     	;# 
  1821  019B                     	;# 
  1822  019C                     	;# 
  1823  020C                     	;# 
  1824  020C                     	;# 
  1825  020D                     	;# 
  1826  020E                     	;# 
  1827  020F                     	;# 
  1828  020F                     	;# 
  1829  0210                     	;# 
  1830  0210                     	;# 
  1831  0211                     	;# 
  1832  0211                     	;# 
  1833  0212                     	;# 
  1834  0212                     	;# 
  1835  0213                     	;# 
  1836  0214                     	;# 
  1837  0215                     	;# 
  1838  0215                     	;# 
  1839  0216                     	;# 
  1840  0216                     	;# 
  1841  0217                     	;# 
  1842  0217                     	;# 
  1843  0218                     	;# 
  1844  0218                     	;# 
  1845  0219                     	;# 
  1846  021A                     	;# 
  1847  021B                     	;# 
  1848  021B                     	;# 
  1849  021C                     	;# 
  1850  021C                     	;# 
  1851  021D                     	;# 
  1852  021D                     	;# 
  1853  021E                     	;# 
  1854  021F                     	;# 
  1855  028C                     	;# 
  1856  028C                     	;# 
  1857  028D                     	;# 
  1858  028D                     	;# 
  1859  028E                     	;# 
  1860  028F                     	;# 
  1861  0290                     	;# 
  1862  0290                     	;# 
  1863  0291                     	;# 
  1864  0292                     	;# 
  1865  0292                     	;# 
  1866  0293                     	;# 
  1867  0293                     	;# 
  1868  0294                     	;# 
  1869  0295                     	;# 
  1870  0296                     	;# 
  1871  0296                     	;# 
  1872  0297                     	;# 
  1873  0298                     	;# 
  1874  0298                     	;# 
  1875  0299                     	;# 
  1876  0299                     	;# 
  1877  029A                     	;# 
  1878  029B                     	;# 
  1879  029C                     	;# 
  1880  029C                     	;# 
  1881  029D                     	;# 
  1882  030C                     	;# 
  1883  030C                     	;# 
  1884  030D                     	;# 
  1885  030E                     	;# 
  1886  030F                     	;# 
  1887  0310                     	;# 
  1888  0310                     	;# 
  1889  0311                     	;# 
  1890  0312                     	;# 
  1891  0313                     	;# 
  1892  0314                     	;# 
  1893  0314                     	;# 
  1894  0315                     	;# 
  1895  0316                     	;# 
  1896  0317                     	;# 
  1897  0318                     	;# 
  1898  0318                     	;# 
  1899  0319                     	;# 
  1900  031A                     	;# 
  1901  031B                     	;# 
  1902  031C                     	;# 
  1903  031C                     	;# 
  1904  031D                     	;# 
  1905  031E                     	;# 
  1906  031F                     	;# 
  1907  038C                     	;# 
  1908  038C                     	;# 
  1909  038D                     	;# 
  1910  038E                     	;# 
  1911  0390                     	;# 
  1912  0390                     	;# 
  1913  0391                     	;# 
  1914  0392                     	;# 
  1915  040C                     	;# 
  1916  040D                     	;# 
  1917  040E                     	;# 
  1918  040F                     	;# 
  1919  0410                     	;# 
  1920  0411                     	;# 
  1921  0416                     	;# 
  1922  0416                     	;# 
  1923  0417                     	;# 
  1924  0418                     	;# 
  1925  0418                     	;# 
  1926  0419                     	;# 
  1927  041A                     	;# 
  1928  041A                     	;# 
  1929  041B                     	;# 
  1930  041C                     	;# 
  1931  041C                     	;# 
  1932  041D                     	;# 
  1933  041E                     	;# 
  1934  041F                     	;# 
  1935  048C                     	;# 
  1936  048C                     	;# 
  1937  048D                     	;# 
  1938  048E                     	;# 
  1939  048F                     	;# 
  1940  048F                     	;# 
  1941  0490                     	;# 
  1942  0491                     	;# 
  1943  0492                     	;# 
  1944  0492                     	;# 
  1945  0493                     	;# 
  1946  0494                     	;# 
  1947  0495                     	;# 
  1948  0495                     	;# 
  1949  0496                     	;# 
  1950  0497                     	;# 
  1951  0498                     	;# 
  1952  0499                     	;# 
  1953  049A                     	;# 
  1954  049B                     	;# 
  1955  049C                     	;# 
  1956  049D                     	;# 
  1957  050C                     	;# 
  1958  050C                     	;# 
  1959  050D                     	;# 
  1960  050E                     	;# 
  1961  050F                     	;# 
  1962  050F                     	;# 
  1963  0510                     	;# 
  1964  0511                     	;# 
  1965  0512                     	;# 
  1966  0512                     	;# 
  1967  0513                     	;# 
  1968  0514                     	;# 
  1969  0515                     	;# 
  1970  0515                     	;# 
  1971  0516                     	;# 
  1972  0517                     	;# 
  1973  0518                     	;# 
  1974  0519                     	;# 
  1975  051A                     	;# 
  1976  051B                     	;# 
  1977  051C                     	;# 
  1978  051D                     	;# 
  1979  058C                     	;# 
  1980  058C                     	;# 
  1981  058D                     	;# 
  1982  058E                     	;# 
  1983  058F                     	;# 
  1984  058F                     	;# 
  1985  0590                     	;# 
  1986  0591                     	;# 
  1987  0592                     	;# 
  1988  0593                     	;# 
  1989  060C                     	;# 
  1990  060D                     	;# 
  1991  060E                     	;# 
  1992  060F                     	;# 
  1993  0610                     	;# 
  1994  0611                     	;# 
  1995  0612                     	;# 
  1996  0613                     	;# 
  1997  0614                     	;# 
  1998  0616                     	;# 
  1999  0617                     	;# 
  2000  0618                     	;# 
  2001  0619                     	;# 
  2002  061A                     	;# 
  2003  061B                     	;# 
  2004  061C                     	;# 
  2005  061D                     	;# 
  2006  061E                     	;# 
  2007  068C                     	;# 
  2008  068D                     	;# 
  2009  068E                     	;# 
  2010  068F                     	;# 
  2011  0690                     	;# 
  2012  0691                     	;# 
  2013  0692                     	;# 
  2014  0693                     	;# 
  2015  0694                     	;# 
  2016  070C                     	;# 
  2017  070D                     	;# 
  2018  070E                     	;# 
  2019  070F                     	;# 
  2020  0710                     	;# 
  2021  0711                     	;# 
  2022  0712                     	;# 
  2023  0713                     	;# 
  2024  0714                     	;# 
  2025  0716                     	;# 
  2026  0717                     	;# 
  2027  0718                     	;# 
  2028  0719                     	;# 
  2029  071A                     	;# 
  2030  071B                     	;# 
  2031  071C                     	;# 
  2032  071D                     	;# 
  2033  071E                     	;# 
  2034  0796                     	;# 
  2035  0797                     	;# 
  2036  0798                     	;# 
  2037  0799                     	;# 
  2038  079A                     	;# 
  2039  079B                     	;# 
  2040  080C                     	;# 
  2041  080D                     	;# 
  2042  080E                     	;# 
  2043  080F                     	;# 
  2044  0810                     	;# 
  2045  0811                     	;# 
  2046  0812                     	;# 
  2047  0813                     	;# 
  2048  0814                     	;# 
  2049  081A                     	;# 
  2050  081B                     	;# 
  2051  081C                     	;# 
  2052  081D                     	;# 
  2053  081E                     	;# 
  2054  081F                     	;# 
  2055  088C                     	;# 
  2056  088D                     	;# 
  2057  088E                     	;# 
  2058  088F                     	;# 
  2059  0890                     	;# 
  2060  0891                     	;# 
  2061  0892                     	;# 
  2062  0893                     	;# 
  2063  0895                     	;# 
  2064  0896                     	;# 
  2065  0897                     	;# 
  2066  0898                     	;# 
  2067  0899                     	;# 
  2068  089A                     	;# 
  2069  089B                     	;# 
  2070  090C                     	;# 
  2071  090E                     	;# 
  2072  090F                     	;# 
  2073  091F                     	;# 
  2074  091F                     	;# 
  2075  098F                     	;# 
  2076  098F                     	;# 
  2077  0990                     	;# 
  2078  0991                     	;# 
  2079  0992                     	;# 
  2080  0993                     	;# 
  2081  0994                     	;# 
  2082  0995                     	;# 
  2083  0996                     	;# 
  2084  0997                     	;# 
  2085  0E0F                     	;# 
  2086  0E10                     	;# 
  2087  0E11                     	;# 
  2088  0E12                     	;# 
  2089  0E13                     	;# 
  2090  0E14                     	;# 
  2091  0E15                     	;# 
  2092  0E16                     	;# 
  2093  0E17                     	;# 
  2094  0E18                     	;# 
  2095  0E19                     	;# 
  2096  0E1A                     	;# 
  2097  0E1B                     	;# 
  2098  0E1C                     	;# 
  2099  0E1D                     	;# 
  2100  0E1E                     	;# 
  2101  0E1F                     	;# 
  2102  0E20                     	;# 
  2103  0E21                     	;# 
  2104  0E22                     	;# 
  2105  0E23                     	;# 
  2106  0E24                     	;# 
  2107  0E25                     	;# 
  2108  0E26                     	;# 
  2109  0E27                     	;# 
  2110  0E28                     	;# 
  2111  0E29                     	;# 
  2112  0E2A                     	;# 
  2113  0E2B                     	;# 
  2114  0E2C                     	;# 
  2115  0E2D                     	;# 
  2116  0E2E                     	;# 
  2117  0E2F                     	;# 
  2118  0E30                     	;# 
  2119  0E31                     	;# 
  2120  0E32                     	;# 
  2121  0E33                     	;# 
  2122  0E34                     	;# 
  2123  0E35                     	;# 
  2124  0E36                     	;# 
  2125  0E37                     	;# 
  2126  0E8F                     	;# 
  2127  0E90                     	;# 
  2128  0E91                     	;# 
  2129  0E92                     	;# 
  2130  0E93                     	;# 
  2131  0E94                     	;# 
  2132  0E95                     	;# 
  2133  0E96                     	;# 
  2134  0E97                     	;# 
  2135  0E9C                     	;# 
  2136  0E9D                     	;# 
  2137  0E9E                     	;# 
  2138  0EA1                     	;# 
  2139  0EA2                     	;# 
  2140  0EA3                     	;# 
  2141  0EA4                     	;# 
  2142  0EA5                     	;# 
  2143  0EA9                     	;# 
  2144  0EAA                     	;# 
  2145  0EAB                     	;# 
  2146  0EAC                     	;# 
  2147  0EB1                     	;# 
  2148  0EB2                     	;# 
  2149  0EB3                     	;# 
  2150  0EB8                     	;# 
  2151  0EB9                     	;# 
  2152  0EBA                     	;# 
  2153  0EBB                     	;# 
  2154  0EBC                     	;# 
  2155  0EBD                     	;# 
  2156  0EBE                     	;# 
  2157  0EC3                     	;# 
  2158  0EC5                     	;# 
  2159  0EC6                     	;# 
  2160  0EC7                     	;# 
  2161  0EC8                     	;# 
  2162  0EC9                     	;# 
  2163  0ECA                     	;# 
  2164  0ECB                     	;# 
  2165  0ECC                     	;# 
  2166  0F10                     	;# 
  2167  0F11                     	;# 
  2168  0F12                     	;# 
  2169  0F13                     	;# 
  2170  0F14                     	;# 
  2171  0F15                     	;# 
  2172  0F16                     	;# 
  2173  0F17                     	;# 
  2174  0F18                     	;# 
  2175  0F19                     	;# 
  2176  0F1A                     	;# 
  2177  0F1B                     	;# 
  2178  0F1C                     	;# 
  2179  0F1D                     	;# 
  2180  0F1E                     	;# 
  2181  0F1F                     	;# 
  2182  0F20                     	;# 
  2183  0F21                     	;# 
  2184  0F22                     	;# 
  2185  0F23                     	;# 
  2186  0F24                     	;# 
  2187  0F25                     	;# 
  2188  0F26                     	;# 
  2189  0F27                     	;# 
  2190  0F28                     	;# 
  2191  0F29                     	;# 
  2192  0F2A                     	;# 
  2193  0F2B                     	;# 
  2194  0F2C                     	;# 
  2195  0F2D                     	;# 
  2196  0F2E                     	;# 
  2197  0F2F                     	;# 
  2198  0F30                     	;# 
  2199  0F31                     	;# 
  2200  0F32                     	;# 
  2201  0F38                     	;# 
  2202  0F39                     	;# 
  2203  0F3A                     	;# 
  2204  0F3B                     	;# 
  2205  0F3C                     	;# 
  2206  0F3D                     	;# 
  2207  0F3E                     	;# 
  2208  0F3F                     	;# 
  2209  0F40                     	;# 
  2210  0F41                     	;# 
  2211  0F43                     	;# 
  2212  0F44                     	;# 
  2213  0F45                     	;# 
  2214  0F46                     	;# 
  2215  0F47                     	;# 
  2216  0F48                     	;# 
  2217  0F49                     	;# 
  2218  0F4A                     	;# 
  2219  0F4B                     	;# 
  2220  0F4C                     	;# 
  2221  0F4E                     	;# 
  2222  0F4F                     	;# 
  2223  0F50                     	;# 
  2224  0F51                     	;# 
  2225  0F52                     	;# 
  2226  0F53                     	;# 
  2227  0F54                     	;# 
  2228  0F55                     	;# 
  2229  0F56                     	;# 
  2230  0F57                     	;# 
  2231  0F59                     	;# 
  2232  0F5A                     	;# 
  2233  0F5B                     	;# 
  2234  0F5C                     	;# 
  2235  0F5D                     	;# 
  2236  0F61                     	;# 
  2237  0F62                     	;# 
  2238  0F64                     	;# 
  2239  0F65                     	;# 
  2240  0F66                     	;# 
  2241  0F67                     	;# 
  2242  0F68                     	;# 
  2243  0F69                     	;# 
  2244  0F6A                     	;# 
  2245  0F6B                     	;# 
  2246  0F6C                     	;# 
  2247  0F6D                     	;# 
  2248  0FE4                     	;# 
  2249  0FE5                     	;# 
  2250  0FE6                     	;# 
  2251  0FE7                     	;# 
  2252  0FE8                     	;# 
  2253  0FE9                     	;# 
  2254  0FEA                     	;# 
  2255  0FEB                     	;# 
  2256  0FED                     	;# 
  2257  0FEE                     	;# 
  2258  0FEF                     	;# 
  2259  0000                     	;# 
  2260  0001                     	;# 
  2261  0002                     	;# 
  2262  0003                     	;# 
  2263  0004                     	;# 
  2264  0005                     	;# 
  2265  0006                     	;# 
  2266  0007                     	;# 
  2267  0008                     	;# 
  2268  0009                     	;# 
  2269  000A                     	;# 
  2270  000B                     	;# 
  2271  000C                     	;# 
  2272  000D                     	;# 
  2273  000E                     	;# 
  2274  000F                     	;# 
  2275  0010                     	;# 
  2276  0011                     	;# 
  2277  0012                     	;# 
  2278  0013                     	;# 
  2279  0014                     	;# 
  2280  0015                     	;# 
  2281  0016                     	;# 
  2282  0017                     	;# 
  2283  0018                     	;# 
  2284  0019                     	;# 
  2285  001A                     	;# 
  2286  001C                     	;# 
  2287  001C                     	;# 
  2288  001D                     	;# 
  2289  001D                     	;# 
  2290  001E                     	;# 
  2291  001F                     	;# 
  2292  008C                     	;# 
  2293  008C                     	;# 
  2294  008D                     	;# 
  2295  008E                     	;# 
  2296  008E                     	;# 
  2297  008F                     	;# 
  2298  0090                     	;# 
  2299  0090                     	;# 
  2300  0091                     	;# 
  2301  0093                     	;# 
  2302  0094                     	;# 
  2303  0095                     	;# 
  2304  0096                     	;# 
  2305  0097                     	;# 
  2306  0098                     	;# 
  2307  0099                     	;# 
  2308  009A                     	;# 
  2309  009B                     	;# 
  2310  009C                     	;# 
  2311  009D                     	;# 
  2312  009E                     	;# 
  2313  010C                     	;# 
  2314  010D                     	;# 
  2315  010E                     	;# 
  2316  010E                     	;# 
  2317  010F                     	;# 
  2318  0110                     	;# 
  2319  0110                     	;# 
  2320  0111                     	;# 
  2321  0112                     	;# 
  2322  0112                     	;# 
  2323  0113                     	;# 
  2324  0114                     	;# 
  2325  0114                     	;# 
  2326  0115                     	;# 
  2327  0116                     	;# 
  2328  0116                     	;# 
  2329  0117                     	;# 
  2330  0119                     	;# 
  2331  0119                     	;# 
  2332  0119                     	;# 
  2333  011A                     	;# 
  2334  011A                     	;# 
  2335  011A                     	;# 
  2336  011B                     	;# 
  2337  011B                     	;# 
  2338  011B                     	;# 
  2339  011B                     	;# 
  2340  011B                     	;# 
  2341  011C                     	;# 
  2342  011C                     	;# 
  2343  011C                     	;# 
  2344  011D                     	;# 
  2345  011D                     	;# 
  2346  011D                     	;# 
  2347  011E                     	;# 
  2348  011E                     	;# 
  2349  011E                     	;# 
  2350  011F                     	;# 
  2351  011F                     	;# 
  2352  011F                     	;# 
  2353  011F                     	;# 
  2354  011F                     	;# 
  2355  018C                     	;# 
  2356  018D                     	;# 
  2357  018E                     	;# 
  2358  018F                     	;# 
  2359  0190                     	;# 
  2360  0191                     	;# 
  2361  0192                     	;# 
  2362  0196                     	;# 
  2363  0197                     	;# 
  2364  0198                     	;# 
  2365  0199                     	;# 
  2366  019A                     	;# 
  2367  019B                     	;# 
  2368  019C                     	;# 
  2369  020C                     	;# 
  2370  020C                     	;# 
  2371  020D                     	;# 
  2372  020E                     	;# 
  2373  020F                     	;# 
  2374  020F                     	;# 
  2375  0210                     	;# 
  2376  0210                     	;# 
  2377  0211                     	;# 
  2378  0211                     	;# 
  2379  0212                     	;# 
  2380  0212                     	;# 
  2381  0213                     	;# 
  2382  0214                     	;# 
  2383  0215                     	;# 
  2384  0215                     	;# 
  2385  0216                     	;# 
  2386  0216                     	;# 
  2387  0217                     	;# 
  2388  0217                     	;# 
  2389  0218                     	;# 
  2390  0218                     	;# 
  2391  0219                     	;# 
  2392  021A                     	;# 
  2393  021B                     	;# 
  2394  021B                     	;# 
  2395  021C                     	;# 
  2396  021C                     	;# 
  2397  021D                     	;# 
  2398  021D                     	;# 
  2399  021E                     	;# 
  2400  021F                     	;# 
  2401  028C                     	;# 
  2402  028C                     	;# 
  2403  028D                     	;# 
  2404  028D                     	;# 
  2405  028E                     	;# 
  2406  028F                     	;# 
  2407  0290                     	;# 
  2408  0290                     	;# 
  2409  0291                     	;# 
  2410  0292                     	;# 
  2411  0292                     	;# 
  2412  0293                     	;# 
  2413  0293                     	;# 
  2414  0294                     	;# 
  2415  0295                     	;# 
  2416  0296                     	;# 
  2417  0296                     	;# 
  2418  0297                     	;# 
  2419  0298                     	;# 
  2420  0298                     	;# 
  2421  0299                     	;# 
  2422  0299                     	;# 
  2423  029A                     	;# 
  2424  029B                     	;# 
  2425  029C                     	;# 
  2426  029C                     	;# 
  2427  029D                     	;# 
  2428  030C                     	;# 
  2429  030C                     	;# 
  2430  030D                     	;# 
  2431  030E                     	;# 
  2432  030F                     	;# 
  2433  0310                     	;# 
  2434  0310                     	;# 
  2435  0311                     	;# 
  2436  0312                     	;# 
  2437  0313                     	;# 
  2438  0314                     	;# 
  2439  0314                     	;# 
  2440  0315                     	;# 
  2441  0316                     	;# 
  2442  0317                     	;# 
  2443  0318                     	;# 
  2444  0318                     	;# 
  2445  0319                     	;# 
  2446  031A                     	;# 
  2447  031B                     	;# 
  2448  031C                     	;# 
  2449  031C                     	;# 
  2450  031D                     	;# 
  2451  031E                     	;# 
  2452  031F                     	;# 
  2453  038C                     	;# 
  2454  038C                     	;# 
  2455  038D                     	;# 
  2456  038E                     	;# 
  2457  0390                     	;# 
  2458  0390                     	;# 
  2459  0391                     	;# 
  2460  0392                     	;# 
  2461  040C                     	;# 
  2462  040D                     	;# 
  2463  040E                     	;# 
  2464  040F                     	;# 
  2465  0410                     	;# 
  2466  0411                     	;# 
  2467  0416                     	;# 
  2468  0416                     	;# 
  2469  0417                     	;# 
  2470  0418                     	;# 
  2471  0418                     	;# 
  2472  0419                     	;# 
  2473  041A                     	;# 
  2474  041A                     	;# 
  2475  041B                     	;# 
  2476  041C                     	;# 
  2477  041C                     	;# 
  2478  041D                     	;# 
  2479  041E                     	;# 
  2480  041F                     	;# 
  2481  048C                     	;# 
  2482  048C                     	;# 
  2483  048D                     	;# 
  2484  048E                     	;# 
  2485  048F                     	;# 
  2486  048F                     	;# 
  2487  0490                     	;# 
  2488  0491                     	;# 
  2489  0492                     	;# 
  2490  0492                     	;# 
  2491  0493                     	;# 
  2492  0494                     	;# 
  2493  0495                     	;# 
  2494  0495                     	;# 
  2495  0496                     	;# 
  2496  0497                     	;# 
  2497  0498                     	;# 
  2498  0499                     	;# 
  2499  049A                     	;# 
  2500  049B                     	;# 
  2501  049C                     	;# 
  2502  049D                     	;# 
  2503  050C                     	;# 
  2504  050C                     	;# 
  2505  050D                     	;# 
  2506  050E                     	;# 
  2507  050F                     	;# 
  2508  050F                     	;# 
  2509  0510                     	;# 
  2510  0511                     	;# 
  2511  0512                     	;# 
  2512  0512                     	;# 
  2513  0513                     	;# 
  2514  0514                     	;# 
  2515  0515                     	;# 
  2516  0515                     	;# 
  2517  0516                     	;# 
  2518  0517                     	;# 
  2519  0518                     	;# 
  2520  0519                     	;# 
  2521  051A                     	;# 
  2522  051B                     	;# 
  2523  051C                     	;# 
  2524  051D                     	;# 
  2525  058C                     	;# 
  2526  058C                     	;# 
  2527  058D                     	;# 
  2528  058E                     	;# 
  2529  058F                     	;# 
  2530  058F                     	;# 
  2531  0590                     	;# 
  2532  0591                     	;# 
  2533  0592                     	;# 
  2534  0593                     	;# 
  2535  060C                     	;# 
  2536  060D                     	;# 
  2537  060E                     	;# 
  2538  060F                     	;# 
  2539  0610                     	;# 
  2540  0611                     	;# 
  2541  0612                     	;# 
  2542  0613                     	;# 
  2543  0614                     	;# 
  2544  0616                     	;# 
  2545  0617                     	;# 
  2546  0618                     	;# 
  2547  0619                     	;# 
  2548  061A                     	;# 
  2549  061B                     	;# 
  2550  061C                     	;# 
  2551  061D                     	;# 
  2552  061E                     	;# 
  2553  068C                     	;# 
  2554  068D                     	;# 
  2555  068E                     	;# 
  2556  068F                     	;# 
  2557  0690                     	;# 
  2558  0691                     	;# 
  2559  0692                     	;# 
  2560  0693                     	;# 
  2561  0694                     	;# 
  2562  070C                     	;# 
  2563  070D                     	;# 
  2564  070E                     	;# 
  2565  070F                     	;# 
  2566  0710                     	;# 
  2567  0711                     	;# 
  2568  0712                     	;# 
  2569  0713                     	;# 
  2570  0714                     	;# 
  2571  0716                     	;# 
  2572  0717                     	;# 
  2573  0718                     	;# 
  2574  0719                     	;# 
  2575  071A                     	;# 
  2576  071B                     	;# 
  2577  071C                     	;# 
  2578  071D                     	;# 
  2579  071E                     	;# 
  2580  0796                     	;# 
  2581  0797                     	;# 
  2582  0798                     	;# 
  2583  0799                     	;# 
  2584  079A                     	;# 
  2585  079B                     	;# 
  2586  080C                     	;# 
  2587  080D                     	;# 
  2588  080E                     	;# 
  2589  080F                     	;# 
  2590  0810                     	;# 
  2591  0811                     	;# 
  2592  0812                     	;# 
  2593  0813                     	;# 
  2594  0814                     	;# 
  2595  081A                     	;# 
  2596  081B                     	;# 
  2597  081C                     	;# 
  2598  081D                     	;# 
  2599  081E                     	;# 
  2600  081F                     	;# 
  2601  088C                     	;# 
  2602  088D                     	;# 
  2603  088E                     	;# 
  2604  088F                     	;# 
  2605  0890                     	;# 
  2606  0891                     	;# 
  2607  0892                     	;# 
  2608  0893                     	;# 
  2609  0895                     	;# 
  2610  0896                     	;# 
  2611  0897                     	;# 
  2612  0898                     	;# 
  2613  0899                     	;# 
  2614  089A                     	;# 
  2615  089B                     	;# 
  2616  090C                     	;# 
  2617  090E                     	;# 
  2618  090F                     	;# 
  2619  091F                     	;# 
  2620  091F                     	;# 
  2621  098F                     	;# 
  2622  098F                     	;# 
  2623  0990                     	;# 
  2624  0991                     	;# 
  2625  0992                     	;# 
  2626  0993                     	;# 
  2627  0994                     	;# 
  2628  0995                     	;# 
  2629  0996                     	;# 
  2630  0997                     	;# 
  2631  0E0F                     	;# 
  2632  0E10                     	;# 
  2633  0E11                     	;# 
  2634  0E12                     	;# 
  2635  0E13                     	;# 
  2636  0E14                     	;# 
  2637  0E15                     	;# 
  2638  0E16                     	;# 
  2639  0E17                     	;# 
  2640  0E18                     	;# 
  2641  0E19                     	;# 
  2642  0E1A                     	;# 
  2643  0E1B                     	;# 
  2644  0E1C                     	;# 
  2645  0E1D                     	;# 
  2646  0E1E                     	;# 
  2647  0E1F                     	;# 
  2648  0E20                     	;# 
  2649  0E21                     	;# 
  2650  0E22                     	;# 
  2651  0E23                     	;# 
  2652  0E24                     	;# 
  2653  0E25                     	;# 
  2654  0E26                     	;# 
  2655  0E27                     	;# 
  2656  0E28                     	;# 
  2657  0E29                     	;# 
  2658  0E2A                     	;# 
  2659  0E2B                     	;# 
  2660  0E2C                     	;# 
  2661  0E2D                     	;# 
  2662  0E2E                     	;# 
  2663  0E2F                     	;# 
  2664  0E30                     	;# 
  2665  0E31                     	;# 
  2666  0E32                     	;# 
  2667  0E33                     	;# 
  2668  0E34                     	;# 
  2669  0E35                     	;# 
  2670  0E36                     	;# 
  2671  0E37                     	;# 
  2672  0E8F                     	;# 
  2673  0E90                     	;# 
  2674  0E91                     	;# 
  2675  0E92                     	;# 
  2676  0E93                     	;# 
  2677  0E94                     	;# 
  2678  0E95                     	;# 
  2679  0E96                     	;# 
  2680  0E97                     	;# 
  2681  0E9C                     	;# 
  2682  0E9D                     	;# 
  2683  0E9E                     	;# 
  2684  0EA1                     	;# 
  2685  0EA2                     	;# 
  2686  0EA3                     	;# 
  2687  0EA4                     	;# 
  2688  0EA5                     	;# 
  2689  0EA9                     	;# 
  2690  0EAA                     	;# 
  2691  0EAB                     	;# 
  2692  0EAC                     	;# 
  2693  0EB1                     	;# 
  2694  0EB2                     	;# 
  2695  0EB3                     	;# 
  2696  0EB8                     	;# 
  2697  0EB9                     	;# 
  2698  0EBA                     	;# 
  2699  0EBB                     	;# 
  2700  0EBC                     	;# 
  2701  0EBD                     	;# 
  2702  0EBE                     	;# 
  2703  0EC3                     	;# 
  2704  0EC5                     	;# 
  2705  0EC6                     	;# 
  2706  0EC7                     	;# 
  2707  0EC8                     	;# 
  2708  0EC9                     	;# 
  2709  0ECA                     	;# 
  2710  0ECB                     	;# 
  2711  0ECC                     	;# 
  2712  0F10                     	;# 
  2713  0F11                     	;# 
  2714  0F12                     	;# 
  2715  0F13                     	;# 
  2716  0F14                     	;# 
  2717  0F15                     	;# 
  2718  0F16                     	;# 
  2719  0F17                     	;# 
  2720  0F18                     	;# 
  2721  0F19                     	;# 
  2722  0F1A                     	;# 
  2723  0F1B                     	;# 
  2724  0F1C                     	;# 
  2725  0F1D                     	;# 
  2726  0F1E                     	;# 
  2727  0F1F                     	;# 
  2728  0F20                     	;# 
  2729  0F21                     	;# 
  2730  0F22                     	;# 
  2731  0F23                     	;# 
  2732  0F24                     	;# 
  2733  0F25                     	;# 
  2734  0F26                     	;# 
  2735  0F27                     	;# 
  2736  0F28                     	;# 
  2737  0F29                     	;# 
  2738  0F2A                     	;# 
  2739  0F2B                     	;# 
  2740  0F2C                     	;# 
  2741  0F2D                     	;# 
  2742  0F2E                     	;# 
  2743  0F2F                     	;# 
  2744  0F30                     	;# 
  2745  0F31                     	;# 
  2746  0F32                     	;# 
  2747  0F38                     	;# 
  2748  0F39                     	;# 
  2749  0F3A                     	;# 
  2750  0F3B                     	;# 
  2751  0F3C                     	;# 
  2752  0F3D                     	;# 
  2753  0F3E                     	;# 
  2754  0F3F                     	;# 
  2755  0F40                     	;# 
  2756  0F41                     	;# 
  2757  0F43                     	;# 
  2758  0F44                     	;# 
  2759  0F45                     	;# 
  2760  0F46                     	;# 
  2761  0F47                     	;# 
  2762  0F48                     	;# 
  2763  0F49                     	;# 
  2764  0F4A                     	;# 
  2765  0F4B                     	;# 
  2766  0F4C                     	;# 
  2767  0F4E                     	;# 
  2768  0F4F                     	;# 
  2769  0F50                     	;# 
  2770  0F51                     	;# 
  2771  0F52                     	;# 
  2772  0F53                     	;# 
  2773  0F54                     	;# 
  2774  0F55                     	;# 
  2775  0F56                     	;# 
  2776  0F57                     	;# 
  2777  0F59                     	;# 
  2778  0F5A                     	;# 
  2779  0F5B                     	;# 
  2780  0F5C                     	;# 
  2781  0F5D                     	;# 
  2782  0F61                     	;# 
  2783  0F62                     	;# 
  2784  0F64                     	;# 
  2785  0F65                     	;# 
  2786  0F66                     	;# 
  2787  0F67                     	;# 
  2788  0F68                     	;# 
  2789  0F69                     	;# 
  2790  0F6A                     	;# 
  2791  0F6B                     	;# 
  2792  0F6C                     	;# 
  2793  0F6D                     	;# 
  2794  0FE4                     	;# 
  2795  0FE5                     	;# 
  2796  0FE6                     	;# 
  2797  0FE7                     	;# 
  2798  0FE8                     	;# 
  2799  0FE9                     	;# 
  2800  0FEA                     	;# 
  2801  0FEB                     	;# 
  2802  0FED                     	;# 
  2803  0FEE                     	;# 
  2804  0FEF                     	;# 
  2805  0000                     	;# 
  2806  0001                     	;# 
  2807  0002                     	;# 
  2808  0003                     	;# 
  2809  0004                     	;# 
  2810  0005                     	;# 
  2811  0006                     	;# 
  2812  0007                     	;# 
  2813  0008                     	;# 
  2814  0009                     	;# 
  2815  000A                     	;# 
  2816  000B                     	;# 
  2817  000C                     	;# 
  2818  000D                     	;# 
  2819  000E                     	;# 
  2820  000F                     	;# 
  2821  0010                     	;# 
  2822  0011                     	;# 
  2823  0012                     	;# 
  2824  0013                     	;# 
  2825  0014                     	;# 
  2826  0015                     	;# 
  2827  0016                     	;# 
  2828  0017                     	;# 
  2829  0018                     	;# 
  2830  0019                     	;# 
  2831  001A                     	;# 
  2832  001C                     	;# 
  2833  001C                     	;# 
  2834  001D                     	;# 
  2835  001D                     	;# 
  2836  001E                     	;# 
  2837  001F                     	;# 
  2838  008C                     	;# 
  2839  008C                     	;# 
  2840  008D                     	;# 
  2841  008E                     	;# 
  2842  008E                     	;# 
  2843  008F                     	;# 
  2844  0090                     	;# 
  2845  0090                     	;# 
  2846  0091                     	;# 
  2847  0093                     	;# 
  2848  0094                     	;# 
  2849  0095                     	;# 
  2850  0096                     	;# 
  2851  0097                     	;# 
  2852  0098                     	;# 
  2853  0099                     	;# 
  2854  009A                     	;# 
  2855  009B                     	;# 
  2856  009C                     	;# 
  2857  009D                     	;# 
  2858  009E                     	;# 
  2859  010C                     	;# 
  2860  010D                     	;# 
  2861  010E                     	;# 
  2862  010E                     	;# 
  2863  010F                     	;# 
  2864  0110                     	;# 
  2865  0110                     	;# 
  2866  0111                     	;# 
  2867  0112                     	;# 
  2868  0112                     	;# 
  2869  0113                     	;# 
  2870  0114                     	;# 
  2871  0114                     	;# 
  2872  0115                     	;# 
  2873  0116                     	;# 
  2874  0116                     	;# 
  2875  0117                     	;# 
  2876  0119                     	;# 
  2877  0119                     	;# 
  2878  0119                     	;# 
  2879  011A                     	;# 
  2880  011A                     	;# 
  2881  011A                     	;# 
  2882  011B                     	;# 
  2883  011B                     	;# 
  2884  011B                     	;# 
  2885  011B                     	;# 
  2886  011B                     	;# 
  2887  011C                     	;# 
  2888  011C                     	;# 
  2889  011C                     	;# 
  2890  011D                     	;# 
  2891  011D                     	;# 
  2892  011D                     	;# 
  2893  011E                     	;# 
  2894  011E                     	;# 
  2895  011E                     	;# 
  2896  011F                     	;# 
  2897  011F                     	;# 
  2898  011F                     	;# 
  2899  011F                     	;# 
  2900  011F                     	;# 
  2901  018C                     	;# 
  2902  018D                     	;# 
  2903  018E                     	;# 
  2904  018F                     	;# 
  2905  0190                     	;# 
  2906  0191                     	;# 
  2907  0192                     	;# 
  2908  0196                     	;# 
  2909  0197                     	;# 
  2910  0198                     	;# 
  2911  0199                     	;# 
  2912  019A                     	;# 
  2913  019B                     	;# 
  2914  019C                     	;# 
  2915  020C                     	;# 
  2916  020C                     	;# 
  2917  020D                     	;# 
  2918  020E                     	;# 
  2919  020F                     	;# 
  2920  020F                     	;# 
  2921  0210                     	;# 
  2922  0210                     	;# 
  2923  0211                     	;# 
  2924  0211                     	;# 
  2925  0212                     	;# 
  2926  0212                     	;# 
  2927  0213                     	;# 
  2928  0214                     	;# 
  2929  0215                     	;# 
  2930  0215                     	;# 
  2931  0216                     	;# 
  2932  0216                     	;# 
  2933  0217                     	;# 
  2934  0217                     	;# 
  2935  0218                     	;# 
  2936  0218                     	;# 
  2937  0219                     	;# 
  2938  021A                     	;# 
  2939  021B                     	;# 
  2940  021B                     	;# 
  2941  021C                     	;# 
  2942  021C                     	;# 
  2943  021D                     	;# 
  2944  021D                     	;# 
  2945  021E                     	;# 
  2946  021F                     	;# 
  2947  028C                     	;# 
  2948  028C                     	;# 
  2949  028D                     	;# 
  2950  028D                     	;# 
  2951  028E                     	;# 
  2952  028F                     	;# 
  2953  0290                     	;# 
  2954  0290                     	;# 
  2955  0291                     	;# 
  2956  0292                     	;# 
  2957  0292                     	;# 
  2958  0293                     	;# 
  2959  0293                     	;# 
  2960  0294                     	;# 
  2961  0295                     	;# 
  2962  0296                     	;# 
  2963  0296                     	;# 
  2964  0297                     	;# 
  2965  0298                     	;# 
  2966  0298                     	;# 
  2967  0299                     	;# 
  2968  0299                     	;# 
  2969  029A                     	;# 
  2970  029B                     	;# 
  2971  029C                     	;# 
  2972  029C                     	;# 
  2973  029D                     	;# 
  2974  030C                     	;# 
  2975  030C                     	;# 
  2976  030D                     	;# 
  2977  030E                     	;# 
  2978  030F                     	;# 
  2979  0310                     	;# 
  2980  0310                     	;# 
  2981  0311                     	;# 
  2982  0312                     	;# 
  2983  0313                     	;# 
  2984  0314                     	;# 
  2985  0314                     	;# 
  2986  0315                     	;# 
  2987  0316                     	;# 
  2988  0317                     	;# 
  2989  0318                     	;# 
  2990  0318                     	;# 
  2991  0319                     	;# 
  2992  031A                     	;# 
  2993  031B                     	;# 
  2994  031C                     	;# 
  2995  031C                     	;# 
  2996  031D                     	;# 
  2997  031E                     	;# 
  2998  031F                     	;# 
  2999  038C                     	;# 
  3000  038C                     	;# 
  3001  038D                     	;# 
  3002  038E                     	;# 
  3003  0390                     	;# 
  3004  0390                     	;# 
  3005  0391                     	;# 
  3006  0392                     	;# 
  3007  040C                     	;# 
  3008  040D                     	;# 
  3009  040E                     	;# 
  3010  040F                     	;# 
  3011  0410                     	;# 
  3012  0411                     	;# 
  3013  0416                     	;# 
  3014  0416                     	;# 
  3015  0417                     	;# 
  3016  0418                     	;# 
  3017  0418                     	;# 
  3018  0419                     	;# 
  3019  041A                     	;# 
  3020  041A                     	;# 
  3021  041B                     	;# 
  3022  041C                     	;# 
  3023  041C                     	;# 
  3024  041D                     	;# 
  3025  041E                     	;# 
  3026  041F                     	;# 
  3027  048C                     	;# 
  3028  048C                     	;# 
  3029  048D                     	;# 
  3030  048E                     	;# 
  3031  048F                     	;# 
  3032  048F                     	;# 
  3033  0490                     	;# 
  3034  0491                     	;# 
  3035  0492                     	;# 
  3036  0492                     	;# 
  3037  0493                     	;# 
  3038  0494                     	;# 
  3039  0495                     	;# 
  3040  0495                     	;# 
  3041  0496                     	;# 
  3042  0497                     	;# 
  3043  0498                     	;# 
  3044  0499                     	;# 
  3045  049A                     	;# 
  3046  049B                     	;# 
  3047  049C                     	;# 
  3048  049D                     	;# 
  3049  050C                     	;# 
  3050  050C                     	;# 
  3051  050D                     	;# 
  3052  050E                     	;# 
  3053  050F                     	;# 
  3054  050F                     	;# 
  3055  0510                     	;# 
  3056  0511                     	;# 
  3057  0512                     	;# 
  3058  0512                     	;# 
  3059  0513                     	;# 
  3060  0514                     	;# 
  3061  0515                     	;# 
  3062  0515                     	;# 
  3063  0516                     	;# 
  3064  0517                     	;# 
  3065  0518                     	;# 
  3066  0519                     	;# 
  3067  051A                     	;# 
  3068  051B                     	;# 
  3069  051C                     	;# 
  3070  051D                     	;# 
  3071  058C                     	;# 
  3072  058C                     	;# 
  3073  058D                     	;# 
  3074  058E                     	;# 
  3075  058F                     	;# 
  3076  058F                     	;# 
  3077  0590                     	;# 
  3078  0591                     	;# 
  3079  0592                     	;# 
  3080  0593                     	;# 
  3081  060C                     	;# 
  3082  060D                     	;# 
  3083  060E                     	;# 
  3084  060F                     	;# 
  3085  0610                     	;# 
  3086  0611                     	;# 
  3087  0612                     	;# 
  3088  0613                     	;# 
  3089  0614                     	;# 
  3090  0616                     	;# 
  3091  0617                     	;# 
  3092  0618                     	;# 
  3093  0619                     	;# 
  3094  061A                     	;# 
  3095  061B                     	;# 
  3096  061C                     	;# 
  3097  061D                     	;# 
  3098  061E                     	;# 
  3099  068C                     	;# 
  3100  068D                     	;# 
  3101  068E                     	;# 
  3102  068F                     	;# 
  3103  0690                     	;# 
  3104  0691                     	;# 
  3105  0692                     	;# 
  3106  0693                     	;# 
  3107  0694                     	;# 
  3108  070C                     	;# 
  3109  070D                     	;# 
  3110  070E                     	;# 
  3111  070F                     	;# 
  3112  0710                     	;# 
  3113  0711                     	;# 
  3114  0712                     	;# 
  3115  0713                     	;# 
  3116  0714                     	;# 
  3117  0716                     	;# 
  3118  0717                     	;# 
  3119  0718                     	;# 
  3120  0719                     	;# 
  3121  071A                     	;# 
  3122  071B                     	;# 
  3123  071C                     	;# 
  3124  071D                     	;# 
  3125  071E                     	;# 
  3126  0796                     	;# 
  3127  0797                     	;# 
  3128  0798                     	;# 
  3129  0799                     	;# 
  3130  079A                     	;# 
  3131  079B                     	;# 
  3132  080C                     	;# 
  3133  080D                     	;# 
  3134  080E                     	;# 
  3135  080F                     	;# 
  3136  0810                     	;# 
  3137  0811                     	;# 
  3138  0812                     	;# 
  3139  0813                     	;# 
  3140  0814                     	;# 
  3141  081A                     	;# 
  3142  081B                     	;# 
  3143  081C                     	;# 
  3144  081D                     	;# 
  3145  081E                     	;# 
  3146  081F                     	;# 
  3147  088C                     	;# 
  3148  088D                     	;# 
  3149  088E                     	;# 
  3150  088F                     	;# 
  3151  0890                     	;# 
  3152  0891                     	;# 
  3153  0892                     	;# 
  3154  0893                     	;# 
  3155  0895                     	;# 
  3156  0896                     	;# 
  3157  0897                     	;# 
  3158  0898                     	;# 
  3159  0899                     	;# 
  3160  089A                     	;# 
  3161  089B                     	;# 
  3162  090C                     	;# 
  3163  090E                     	;# 
  3164  090F                     	;# 
  3165  091F                     	;# 
  3166  091F                     	;# 
  3167  098F                     	;# 
  3168  098F                     	;# 
  3169  0990                     	;# 
  3170  0991                     	;# 
  3171  0992                     	;# 
  3172  0993                     	;# 
  3173  0994                     	;# 
  3174  0995                     	;# 
  3175  0996                     	;# 
  3176  0997                     	;# 
  3177  0E0F                     	;# 
  3178  0E10                     	;# 
  3179  0E11                     	;# 
  3180  0E12                     	;# 
  3181  0E13                     	;# 
  3182  0E14                     	;# 
  3183  0E15                     	;# 
  3184  0E16                     	;# 
  3185  0E17                     	;# 
  3186  0E18                     	;# 
  3187  0E19                     	;# 
  3188  0E1A                     	;# 
  3189  0E1B                     	;# 
  3190  0E1C                     	;# 
  3191  0E1D                     	;# 
  3192  0E1E                     	;# 
  3193  0E1F                     	;# 
  3194  0E20                     	;# 
  3195  0E21                     	;# 
  3196  0E22                     	;# 
  3197  0E23                     	;# 
  3198  0E24                     	;# 
  3199  0E25                     	;# 
  3200  0E26                     	;# 
  3201  0E27                     	;# 
  3202  0E28                     	;# 
  3203  0E29                     	;# 
  3204  0E2A                     	;# 
  3205  0E2B                     	;# 
  3206  0E2C                     	;# 
  3207  0E2D                     	;# 
  3208  0E2E                     	;# 
  3209  0E2F                     	;# 
  3210  0E30                     	;# 
  3211  0E31                     	;# 
  3212  0E32                     	;# 
  3213  0E33                     	;# 
  3214  0E34                     	;# 
  3215  0E35                     	;# 
  3216  0E36                     	;# 
  3217  0E37                     	;# 
  3218  0E8F                     	;# 
  3219  0E90                     	;# 
  3220  0E91                     	;# 
  3221  0E92                     	;# 
  3222  0E93                     	;# 
  3223  0E94                     	;# 
  3224  0E95                     	;# 
  3225  0E96                     	;# 
  3226  0E97                     	;# 
  3227  0E9C                     	;# 
  3228  0E9D                     	;# 
  3229  0E9E                     	;# 
  3230  0EA1                     	;# 
  3231  0EA2                     	;# 
  3232  0EA3                     	;# 
  3233  0EA4                     	;# 
  3234  0EA5                     	;# 
  3235  0EA9                     	;# 
  3236  0EAA                     	;# 
  3237  0EAB                     	;# 
  3238  0EAC                     	;# 
  3239  0EB1                     	;# 
  3240  0EB2                     	;# 
  3241  0EB3                     	;# 
  3242  0EB8                     	;# 
  3243  0EB9                     	;# 
  3244  0EBA                     	;# 
  3245  0EBB                     	;# 
  3246  0EBC                     	;# 
  3247  0EBD                     	;# 
  3248  0EBE                     	;# 
  3249  0EC3                     	;# 
  3250  0EC5                     	;# 
  3251  0EC6                     	;# 
  3252  0EC7                     	;# 
  3253  0EC8                     	;# 
  3254  0EC9                     	;# 
  3255  0ECA                     	;# 
  3256  0ECB                     	;# 
  3257  0ECC                     	;# 
  3258  0F10                     	;# 
  3259  0F11                     	;# 
  3260  0F12                     	;# 
  3261  0F13                     	;# 
  3262  0F14                     	;# 
  3263  0F15                     	;# 
  3264  0F16                     	;# 
  3265  0F17                     	;# 
  3266  0F18                     	;# 
  3267  0F19                     	;# 
  3268  0F1A                     	;# 
  3269  0F1B                     	;# 
  3270  0F1C                     	;# 
  3271  0F1D                     	;# 
  3272  0F1E                     	;# 
  3273  0F1F                     	;# 
  3274  0F20                     	;# 
  3275  0F21                     	;# 
  3276  0F22                     	;# 
  3277  0F23                     	;# 
  3278  0F24                     	;# 
  3279  0F25                     	;# 
  3280  0F26                     	;# 
  3281  0F27                     	;# 
  3282  0F28                     	;# 
  3283  0F29                     	;# 
  3284  0F2A                     	;# 
  3285  0F2B                     	;# 
  3286  0F2C                     	;# 
  3287  0F2D                     	;# 
  3288  0F2E                     	;# 
  3289  0F2F                     	;# 
  3290  0F30                     	;# 
  3291  0F31                     	;# 
  3292  0F32                     	;# 
  3293  0F38                     	;# 
  3294  0F39                     	;# 
  3295  0F3A                     	;# 
  3296  0F3B                     	;# 
  3297  0F3C                     	;# 
  3298  0F3D                     	;# 
  3299  0F3E                     	;# 
  3300  0F3F                     	;# 
  3301  0F40                     	;# 
  3302  0F41                     	;# 
  3303  0F43                     	;# 
  3304  0F44                     	;# 
  3305  0F45                     	;# 
  3306  0F46                     	;# 
  3307  0F47                     	;# 
  3308  0F48                     	;# 
  3309  0F49                     	;# 
  3310  0F4A                     	;# 
  3311  0F4B                     	;# 
  3312  0F4C                     	;# 
  3313  0F4E                     	;# 
  3314  0F4F                     	;# 
  3315  0F50                     	;# 
  3316  0F51                     	;# 
  3317  0F52                     	;# 
  3318  0F53                     	;# 
  3319  0F54                     	;# 
  3320  0F55                     	;# 
  3321  0F56                     	;# 
  3322  0F57                     	;# 
  3323  0F59                     	;# 
  3324  0F5A                     	;# 
  3325  0F5B                     	;# 
  3326  0F5C                     	;# 
  3327  0F5D                     	;# 
  3328  0F61                     	;# 
  3329  0F62                     	;# 
  3330  0F64                     	;# 
  3331  0F65                     	;# 
  3332  0F66                     	;# 
  3333  0F67                     	;# 
  3334  0F68                     	;# 
  3335  0F69                     	;# 
  3336  0F6A                     	;# 
  3337  0F6B                     	;# 
  3338  0F6C                     	;# 
  3339  0F6D                     	;# 
  3340  0FE4                     	;# 
  3341  0FE5                     	;# 
  3342  0FE6                     	;# 
  3343  0FE7                     	;# 
  3344  0FE8                     	;# 
  3345  0FE9                     	;# 
  3346  0FEA                     	;# 
  3347  0FEB                     	;# 
  3348  0FED                     	;# 
  3349  0FEE                     	;# 
  3350  0FEF                     	;# 
  3351  0000                     	;# 
  3352  0001                     	;# 
  3353  0002                     	;# 
  3354  0003                     	;# 
  3355  0004                     	;# 
  3356  0005                     	;# 
  3357  0006                     	;# 
  3358  0007                     	;# 
  3359  0008                     	;# 
  3360  0009                     	;# 
  3361  000A                     	;# 
  3362  000B                     	;# 
  3363  000C                     	;# 
  3364  000D                     	;# 
  3365  000E                     	;# 
  3366  000F                     	;# 
  3367  0010                     	;# 
  3368  0011                     	;# 
  3369  0012                     	;# 
  3370  0013                     	;# 
  3371  0014                     	;# 
  3372  0015                     	;# 
  3373  0016                     	;# 
  3374  0017                     	;# 
  3375  0018                     	;# 
  3376  0019                     	;# 
  3377  001A                     	;# 
  3378  001C                     	;# 
  3379  001C                     	;# 
  3380  001D                     	;# 
  3381  001D                     	;# 
  3382  001E                     	;# 
  3383  001F                     	;# 
  3384  008C                     	;# 
  3385  008C                     	;# 
  3386  008D                     	;# 
  3387  008E                     	;# 
  3388  008E                     	;# 
  3389  008F                     	;# 
  3390  0090                     	;# 
  3391  0090                     	;# 
  3392  0091                     	;# 
  3393  0093                     	;# 
  3394  0094                     	;# 
  3395  0095                     	;# 
  3396  0096                     	;# 
  3397  0097                     	;# 
  3398  0098                     	;# 
  3399  0099                     	;# 
  3400  009A                     	;# 
  3401  009B                     	;# 
  3402  009C                     	;# 
  3403  009D                     	;# 
  3404  009E                     	;# 
  3405  010C                     	;# 
  3406  010D                     	;# 
  3407  010E                     	;# 
  3408  010E                     	;# 
  3409  010F                     	;# 
  3410  0110                     	;# 
  3411  0110                     	;# 
  3412  0111                     	;# 
  3413  0112                     	;# 
  3414  0112                     	;# 
  3415  0113                     	;# 
  3416  0114                     	;# 
  3417  0114                     	;# 
  3418  0115                     	;# 
  3419  0116                     	;# 
  3420  0116                     	;# 
  3421  0117                     	;# 
  3422  0119                     	;# 
  3423  0119                     	;# 
  3424  0119                     	;# 
  3425  011A                     	;# 
  3426  011A                     	;# 
  3427  011A                     	;# 
  3428  011B                     	;# 
  3429  011B                     	;# 
  3430  011B                     	;# 
  3431  011B                     	;# 
  3432  011B                     	;# 
  3433  011C                     	;# 
  3434  011C                     	;# 
  3435  011C                     	;# 
  3436  011D                     	;# 
  3437  011D                     	;# 
  3438  011D                     	;# 
  3439  011E                     	;# 
  3440  011E                     	;# 
  3441  011E                     	;# 
  3442  011F                     	;# 
  3443  011F                     	;# 
  3444  011F                     	;# 
  3445  011F                     	;# 
  3446  011F                     	;# 
  3447  018C                     	;# 
  3448  018D                     	;# 
  3449  018E                     	;# 
  3450  018F                     	;# 
  3451  0190                     	;# 
  3452  0191                     	;# 
  3453  0192                     	;# 
  3454  0196                     	;# 
  3455  0197                     	;# 
  3456  0198                     	;# 
  3457  0199                     	;# 
  3458  019A                     	;# 
  3459  019B                     	;# 
  3460  019C                     	;# 
  3461  020C                     	;# 
  3462  020C                     	;# 
  3463  020D                     	;# 
  3464  020E                     	;# 
  3465  020F                     	;# 
  3466  020F                     	;# 
  3467  0210                     	;# 
  3468  0210                     	;# 
  3469  0211                     	;# 
  3470  0211                     	;# 
  3471  0212                     	;# 
  3472  0212                     	;# 
  3473  0213                     	;# 
  3474  0214                     	;# 
  3475  0215                     	;# 
  3476  0215                     	;# 
  3477  0216                     	;# 
  3478  0216                     	;# 
  3479  0217                     	;# 
  3480  0217                     	;# 
  3481  0218                     	;# 
  3482  0218                     	;# 
  3483  0219                     	;# 
  3484  021A                     	;# 
  3485  021B                     	;# 
  3486  021B                     	;# 
  3487  021C                     	;# 
  3488  021C                     	;# 
  3489  021D                     	;# 
  3490  021D                     	;# 
  3491  021E                     	;# 
  3492  021F                     	;# 
  3493  028C                     	;# 
  3494  028C                     	;# 
  3495  028D                     	;# 
  3496  028D                     	;# 
  3497  028E                     	;# 
  3498  028F                     	;# 
  3499  0290                     	;# 
  3500  0290                     	;# 
  3501  0291                     	;# 
  3502  0292                     	;# 
  3503  0292                     	;# 
  3504  0293                     	;# 
  3505  0293                     	;# 
  3506  0294                     	;# 
  3507  0295                     	;# 
  3508  0296                     	;# 
  3509  0296                     	;# 
  3510  0297                     	;# 
  3511  0298                     	;# 
  3512  0298                     	;# 
  3513  0299                     	;# 
  3514  0299                     	;# 
  3515  029A                     	;# 
  3516  029B                     	;# 
  3517  029C                     	;# 
  3518  029C                     	;# 
  3519  029D                     	;# 
  3520  030C                     	;# 
  3521  030C                     	;# 
  3522  030D                     	;# 
  3523  030E                     	;# 
  3524  030F                     	;# 
  3525  0310                     	;# 
  3526  0310                     	;# 
  3527  0311                     	;# 
  3528  0312                     	;# 
  3529  0313                     	;# 
  3530  0314                     	;# 
  3531  0314                     	;# 
  3532  0315                     	;# 
  3533  0316                     	;# 
  3534  0317                     	;# 
  3535  0318                     	;# 
  3536  0318                     	;# 
  3537  0319                     	;# 
  3538  031A                     	;# 
  3539  031B                     	;# 
  3540  031C                     	;# 
  3541  031C                     	;# 
  3542  031D                     	;# 
  3543  031E                     	;# 
  3544  031F                     	;# 
  3545  038C                     	;# 
  3546  038C                     	;# 
  3547  038D                     	;# 
  3548  038E                     	;# 
  3549  0390                     	;# 
  3550  0390                     	;# 
  3551  0391                     	;# 
  3552  0392                     	;# 
  3553  040C                     	;# 
  3554  040D                     	;# 
  3555  040E                     	;# 
  3556  040F                     	;# 
  3557  0410                     	;# 
  3558  0411                     	;# 
  3559  0416                     	;# 
  3560  0416                     	;# 
  3561  0417                     	;# 
  3562  0418                     	;# 
  3563  0418                     	;# 
  3564  0419                     	;# 
  3565  041A                     	;# 
  3566  041A                     	;# 
  3567  041B                     	;# 
  3568  041C                     	;# 
  3569  041C                     	;# 
  3570  041D                     	;# 
  3571  041E                     	;# 
  3572  041F                     	;# 
  3573  048C                     	;# 
  3574  048C                     	;# 
  3575  048D                     	;# 
  3576  048E                     	;# 
  3577  048F                     	;# 
  3578  048F                     	;# 
  3579  0490                     	;# 
  3580  0491                     	;# 
  3581  0492                     	;# 
  3582  0492                     	;# 
  3583  0493                     	;# 
  3584  0494                     	;# 
  3585  0495                     	;# 
  3586  0495                     	;# 
  3587  0496                     	;# 
  3588  0497                     	;# 
  3589  0498                     	;# 
  3590  0499                     	;# 
  3591  049A                     	;# 
  3592  049B                     	;# 
  3593  049C                     	;# 
  3594  049D                     	;# 
  3595  050C                     	;# 
  3596  050C                     	;# 
  3597  050D                     	;# 
  3598  050E                     	;# 
  3599  050F                     	;# 
  3600  050F                     	;# 
  3601  0510                     	;# 
  3602  0511                     	;# 
  3603  0512                     	;# 
  3604  0512                     	;# 
  3605  0513                     	;# 
  3606  0514                     	;# 
  3607  0515                     	;# 
  3608  0515                     	;# 
  3609  0516                     	;# 
  3610  0517                     	;# 
  3611  0518                     	;# 
  3612  0519                     	;# 
  3613  051A                     	;# 
  3614  051B                     	;# 
  3615  051C                     	;# 
  3616  051D                     	;# 
  3617  058C                     	;# 
  3618  058C                     	;# 
  3619  058D                     	;# 
  3620  058E                     	;# 
  3621  058F                     	;# 
  3622  058F                     	;# 
  3623  0590                     	;# 
  3624  0591                     	;# 
  3625  0592                     	;# 
  3626  0593                     	;# 
  3627  060C                     	;# 
  3628  060D                     	;# 
  3629  060E                     	;# 
  3630  060F                     	;# 
  3631  0610                     	;# 
  3632  0611                     	;# 
  3633  0612                     	;# 
  3634  0613                     	;# 
  3635  0614                     	;# 
  3636  0616                     	;# 
  3637  0617                     	;# 
  3638  0618                     	;# 
  3639  0619                     	;# 
  3640  061A                     	;# 
  3641  061B                     	;# 
  3642  061C                     	;# 
  3643  061D                     	;# 
  3644  061E                     	;# 
  3645  068C                     	;# 
  3646  068D                     	;# 
  3647  068E                     	;# 
  3648  068F                     	;# 
  3649  0690                     	;# 
  3650  0691                     	;# 
  3651  0692                     	;# 
  3652  0693                     	;# 
  3653  0694                     	;# 
  3654  070C                     	;# 
  3655  070D                     	;# 
  3656  070E                     	;# 
  3657  070F                     	;# 
  3658  0710                     	;# 
  3659  0711                     	;# 
  3660  0712                     	;# 
  3661  0713                     	;# 
  3662  0714                     	;# 
  3663  0716                     	;# 
  3664  0717                     	;# 
  3665  0718                     	;# 
  3666  0719                     	;# 
  3667  071A                     	;# 
  3668  071B                     	;# 
  3669  071C                     	;# 
  3670  071D                     	;# 
  3671  071E                     	;# 
  3672  0796                     	;# 
  3673  0797                     	;# 
  3674  0798                     	;# 
  3675  0799                     	;# 
  3676  079A                     	;# 
  3677  079B                     	;# 
  3678  080C                     	;# 
  3679  080D                     	;# 
  3680  080E                     	;# 
  3681  080F                     	;# 
  3682  0810                     	;# 
  3683  0811                     	;# 
  3684  0812                     	;# 
  3685  0813                     	;# 
  3686  0814                     	;# 
  3687  081A                     	;# 
  3688  081B                     	;# 
  3689  081C                     	;# 
  3690  081D                     	;# 
  3691  081E                     	;# 
  3692  081F                     	;# 
  3693  088C                     	;# 
  3694  088D                     	;# 
  3695  088E                     	;# 
  3696  088F                     	;# 
  3697  0890                     	;# 
  3698  0891                     	;# 
  3699  0892                     	;# 
  3700  0893                     	;# 
  3701  0895                     	;# 
  3702  0896                     	;# 
  3703  0897                     	;# 
  3704  0898                     	;# 
  3705  0899                     	;# 
  3706  089A                     	;# 
  3707  089B                     	;# 
  3708  090C                     	;# 
  3709  090E                     	;# 
  3710  090F                     	;# 
  3711  091F                     	;# 
  3712  091F                     	;# 
  3713  098F                     	;# 
  3714  098F                     	;# 
  3715  0990                     	;# 
  3716  0991                     	;# 
  3717  0992                     	;# 
  3718  0993                     	;# 
  3719  0994                     	;# 
  3720  0995                     	;# 
  3721  0996                     	;# 
  3722  0997                     	;# 
  3723  0E0F                     	;# 
  3724  0E10                     	;# 
  3725  0E11                     	;# 
  3726  0E12                     	;# 
  3727  0E13                     	;# 
  3728  0E14                     	;# 
  3729  0E15                     	;# 
  3730  0E16                     	;# 
  3731  0E17                     	;# 
  3732  0E18                     	;# 
  3733  0E19                     	;# 
  3734  0E1A                     	;# 
  3735  0E1B                     	;# 
  3736  0E1C                     	;# 
  3737  0E1D                     	;# 
  3738  0E1E                     	;# 
  3739  0E1F                     	;# 
  3740  0E20                     	;# 
  3741  0E21                     	;# 
  3742  0E22                     	;# 
  3743  0E23                     	;# 
  3744  0E24                     	;# 
  3745  0E25                     	;# 
  3746  0E26                     	;# 
  3747  0E27                     	;# 
  3748  0E28                     	;# 
  3749  0E29                     	;# 
  3750  0E2A                     	;# 
  3751  0E2B                     	;# 
  3752  0E2C                     	;# 
  3753  0E2D                     	;# 
  3754  0E2E                     	;# 
  3755  0E2F                     	;# 
  3756  0E30                     	;# 
  3757  0E31                     	;# 
  3758  0E32                     	;# 
  3759  0E33                     	;# 
  3760  0E34                     	;# 
  3761  0E35                     	;# 
  3762  0E36                     	;# 
  3763  0E37                     	;# 
  3764  0E8F                     	;# 
  3765  0E90                     	;# 
  3766  0E91                     	;# 
  3767  0E92                     	;# 
  3768  0E93                     	;# 
  3769  0E94                     	;# 
  3770  0E95                     	;# 
  3771  0E96                     	;# 
  3772  0E97                     	;# 
  3773  0E9C                     	;# 
  3774  0E9D                     	;# 
  3775  0E9E                     	;# 
  3776  0EA1                     	;# 
  3777  0EA2                     	;# 
  3778  0EA3                     	;# 
  3779  0EA4                     	;# 
  3780  0EA5                     	;# 
  3781  0EA9                     	;# 
  3782  0EAA                     	;# 
  3783  0EAB                     	;# 
  3784  0EAC                     	;# 
  3785  0EB1                     	;# 
  3786  0EB2                     	;# 
  3787  0EB3                     	;# 
  3788  0EB8                     	;# 
  3789  0EB9                     	;# 
  3790  0EBA                     	;# 
  3791  0EBB                     	;# 
  3792  0EBC                     	;# 
  3793  0EBD                     	;# 
  3794  0EBE                     	;# 
  3795  0EC3                     	;# 
  3796  0EC5                     	;# 
  3797  0EC6                     	;# 
  3798  0EC7                     	;# 
  3799  0EC8                     	;# 
  3800  0EC9                     	;# 
  3801  0ECA                     	;# 
  3802  0ECB                     	;# 
  3803  0ECC                     	;# 
  3804  0F10                     	;# 
  3805  0F11                     	;# 
  3806  0F12                     	;# 
  3807  0F13                     	;# 
  3808  0F14                     	;# 
  3809  0F15                     	;# 
  3810  0F16                     	;# 
  3811  0F17                     	;# 
  3812  0F18                     	;# 
  3813  0F19                     	;# 
  3814  0F1A                     	;# 
  3815  0F1B                     	;# 
  3816  0F1C                     	;# 
  3817  0F1D                     	;# 
  3818  0F1E                     	;# 
  3819  0F1F                     	;# 
  3820  0F20                     	;# 
  3821  0F21                     	;# 
  3822  0F22                     	;# 
  3823  0F23                     	;# 
  3824  0F24                     	;# 
  3825  0F25                     	;# 
  3826  0F26                     	;# 
  3827  0F27                     	;# 
  3828  0F28                     	;# 
  3829  0F29                     	;# 
  3830  0F2A                     	;# 
  3831  0F2B                     	;# 
  3832  0F2C                     	;# 
  3833  0F2D                     	;# 
  3834  0F2E                     	;# 
  3835  0F2F                     	;# 
  3836  0F30                     	;# 
  3837  0F31                     	;# 
  3838  0F32                     	;# 
  3839  0F38                     	;# 
  3840  0F39                     	;# 
  3841  0F3A                     	;# 
  3842  0F3B                     	;# 
  3843  0F3C                     	;# 
  3844  0F3D                     	;# 
  3845  0F3E                     	;# 
  3846  0F3F                     	;# 
  3847  0F40                     	;# 
  3848  0F41                     	;# 
  3849  0F43                     	;# 
  3850  0F44                     	;# 
  3851  0F45                     	;# 
  3852  0F46                     	;# 
  3853  0F47                     	;# 
  3854  0F48                     	;# 
  3855  0F49                     	;# 
  3856  0F4A                     	;# 
  3857  0F4B                     	;# 
  3858  0F4C                     	;# 
  3859  0F4E                     	;# 
  3860  0F4F                     	;# 
  3861  0F50                     	;# 
  3862  0F51                     	;# 
  3863  0F52                     	;# 
  3864  0F53                     	;# 
  3865  0F54                     	;# 
  3866  0F55                     	;# 
  3867  0F56                     	;# 
  3868  0F57                     	;# 
  3869  0F59                     	;# 
  3870  0F5A                     	;# 
  3871  0F5B                     	;# 
  3872  0F5C                     	;# 
  3873  0F5D                     	;# 
  3874  0F61                     	;# 
  3875  0F62                     	;# 
  3876  0F64                     	;# 
  3877  0F65                     	;# 
  3878  0F66                     	;# 
  3879  0F67                     	;# 
  3880  0F68                     	;# 
  3881  0F69                     	;# 
  3882  0F6A                     	;# 
  3883  0F6B                     	;# 
  3884  0F6C                     	;# 
  3885  0F6D                     	;# 
  3886  0FE4                     	;# 
  3887  0FE5                     	;# 
  3888  0FE6                     	;# 
  3889  0FE7                     	;# 
  3890  0FE8                     	;# 
  3891  0FE9                     	;# 
  3892  0FEA                     	;# 
  3893  0FEB                     	;# 
  3894  0FED                     	;# 
  3895  0FEE                     	;# 
  3896  0FEF                     	;# 
  3897                           
  3898                           	psect	stringtext1
  3899  1024                     __pstringtext1:
  3900  1024                     _dpowers:
  3901  1024  3401               	retlw	1
  3902  1025  3400               	retlw	0
  3903  1026  340A               	retlw	10
  3904  1027  3400               	retlw	0
  3905  1028  3464               	retlw	100
  3906  1029  3400               	retlw	0
  3907  102A  34E8               	retlw	232
  3908  102B  3403               	retlw	3
  3909  102C  3410               	retlw	16
  3910  102D  3427               	retlw	39
  3911  102E                     __end_of_dpowers:
  3912                           
  3913                           	psect	stringtext2
  3914  1000                     __pstringtext2:
  3915  1000                     _hexpowers:
  3916  1000  3401               	retlw	1
  3917  1001  3400               	retlw	0
  3918  1002  3410               	retlw	16
  3919  1003  3400               	retlw	0
  3920  1004  3400               	retlw	0
  3921  1005  3401               	retlw	1
  3922  1006  3400               	retlw	0
  3923  1007  3410               	retlw	16
  3924  1008                     __end_of_hexpowers:
  3925  0016                     _LATAbits	set	22
  3926  000D                     _PORTBbits	set	13
  3927  0017                     _LATBbits	set	23
  3928  0013                     _TRISCbits	set	19
  3929  000B                     _INTCONbits	set	11
  3930  0014                     _TRISD	set	20
  3931  0013                     _TRISC	set	19
  3932  0012                     _TRISB	set	18
  3933  0011                     _TRISA	set	17
  3934  0015                     _TRISE	set	21
  3935  0018                     _LATC	set	24
  3936  0017                     _LATB	set	23
  3937  0016                     _LATA	set	22
  3938  0019                     _LATD	set	25
  3939  001A                     _LATE	set	26
  3940  018E                     _SSP1MSK	set	398
  3941  018D                     _SSP1ADD	set	397
  3942  018F                     _SSP1STAT	set	399
  3943  0191                     _SSP1CON2	set	401
  3944  0190                     _SSP1CON1bits	set	400
  3945  018C                     _SSP1BUF	set	396
  3946  018F                     _SSP1STATbits	set	399
  3947  0191                     _SSP1CON2bits	set	401
  3948  0190                     _SSP1CON1	set	400
  3949  0719                     _PIE3bits	set	1817
  3950  070F                     _PIR3bits	set	1807
  3951  079B                     _PMD5	set	1947
  3952  079A                     _PMD4	set	1946
  3953  0799                     _PMD3	set	1945
  3954  0798                     _PMD2	set	1944
  3955  0797                     _PMD1	set	1943
  3956  0796                     _PMD0	set	1942
  3957  0892                     _OSCTUNE	set	2194
  3958  0893                     _OSCFRQ	set	2195
  3959  0891                     _OSCEN	set	2193
  3960  088F                     _OSCCON3	set	2191
  3961  088D                     _OSCCON1	set	2189
  3962  0EC6                     _SSP1DATPPS	set	3782
  3963  0EC5                     _SSP1CLKPPS	set	3781
  3964  0F24                     _RC4PPS	set	3876
  3965  0F23                     _RC3PPS	set	3875
  3966  0F67                     _SLRCONE	set	3943
  3967  0F5C                     _SLRCOND	set	3932
  3968  0F51                     _SLRCONC	set	3921
  3969  0F46                     _SLRCONB	set	3910
  3970  0F3B                     _SLRCONA	set	3899
  3971  0F5B                     _ODCOND	set	3931
  3972  0F50                     _ODCONC	set	3920
  3973  0F45                     _ODCONB	set	3909
  3974  0F3A                     _ODCONA	set	3898
  3975  0F66                     _ODCONE	set	3942
  3976  0F4F                     _WPUC	set	3919
  3977  0F39                     _WPUA	set	3897
  3978  0F44                     _WPUB	set	3908
  3979  0F65                     _WPUE	set	3941
  3980  0F5A                     _WPUD	set	3930
  3981  0F38                     _ANSELA	set	3896
  3982  0F64                     _ANSELE	set	3940
  3983  0F43                     _ANSELB	set	3907
  3984  0F4E                     _ANSELC	set	3918
  3985  0F59                     _ANSELD	set	3929
  3986  7A7C                     _WPUC4	set	31356
  3987  7A7B                     _WPUC3	set	31355
  3988  1008                     STR_6:
  3989  1008  3430               	retlw	48	;'0'
  3990  1009  3431               	retlw	49	;'1'
  3991  100A  3432               	retlw	50	;'2'
  3992  100B  3433               	retlw	51	;'3'
  3993  100C  3434               	retlw	52	;'4'
  3994  100D  3435               	retlw	53	;'5'
  3995  100E  3436               	retlw	54	;'6'
  3996  100F  3437               	retlw	55	;'7'
  3997  1010  3438               	retlw	56	;'8'
  3998  1011  3439               	retlw	57	;'9'
  3999  1012  3461               	retlw	97	;'a'
  4000  1013  3462               	retlw	98	;'b'
  4001  1014  3463               	retlw	99	;'c'
  4002  1015  3464               	retlw	100	;'d'
  4003  1016  3465               	retlw	101	;'e'
  4004  1017  3466               	retlw	102	;'f'
  4005  1018  3400               	retlw	0
  4006                           
  4007                           	psect	stringtext3
  4008  1019                     __pstringtext3:
  4009  1019                     STR_2:
  4010  1019  3443               	retlw	67	;'C'
  4011  101A  346C               	retlw	108	;'l'
  4012  101B  346F               	retlw	111	;'o'
  4013  101C  3463               	retlw	99	;'c'
  4014  101D  346B               	retlw	107	;'k'
  4015  101E  3420               	retlw	32	;' '
  4016  101F  3425               	retlw	37	;'%'
  4017  1020  3430               	retlw	48	;'0'
  4018  1021  3432               	retlw	50	;'2'
  4019  1022  3464               	retlw	100	;'d'
  4020  1023  3400               	retlw	0
  4021                           
  4022                           	psect	stringtext4
  4023  102E                     __pstringtext4:
  4024  102E                     STR_5:
  4025  102E  3425               	retlw	37	;'%'
  4026  102F  3430               	retlw	48	;'0'
  4027  1030  3432               	retlw	50	;'2'
  4028  1031  3478               	retlw	120	;'x'
  4029  1032  3420               	retlw	32	;' '
  4030  1033  3425               	retlw	37	;'%'
  4031  1034  3430               	retlw	48	;'0'
  4032  1035  3432               	retlw	50	;'2'
  4033  1036  3478               	retlw	120	;'x'
  4034  1037  3400               	retlw	0
  4035                           
  4036                           	psect	stringtext5
  4037  1038                     __pstringtext5:
  4038  1038                     STR_3:
  4039  1038  3425               	retlw	37	;'%'
  4040  1039  3430               	retlw	48	;'0'
  4041  103A  3432               	retlw	50	;'2'
  4042  103B  3464               	retlw	100	;'d'
  4043  103C  3420               	retlw	32	;' '
  4044  103D  3443               	retlw	67	;'C'
  4045  103E  3400               	retlw	0
  4046                           
  4047                           	psect	stringtext6
  4048  103F                     __pstringtext6:
  4049  103F                     STR_1:
  4050  103F  3454               	retlw	84	;'T'
  4051  1040  3465               	retlw	101	;'e'
  4052  1041  346D               	retlw	109	;'m'
  4053  1042  3470               	retlw	112	;'p'
  4054  1043  3400               	retlw	0
  4055                           
  4056                           	psect	stringtext7
  4057  1044                     __pstringtext7:
  4058  1044                     STR_4:
  4059  1044  3425               	retlw	37	;'%'
  4060  1045  3464               	retlw	100	;'d'
  4061  1046  3400               	retlw	0
  4062                           
  4063                           	psect	stringtext8
  4064  0000                     __pstringtext8:
  4065                           
  4066                           	psect	cinit
  4067  001E                     start_initialization:	
  4068                           ; #config settings
  4069                           
  4070  001E                     __initialization:
  4071                           
  4072                           ; Clear objects allocated to BANK0
  4073  001E  0020               	movlb	0	; select bank0
  4074  001F  01CE               	clrf	__pbssBANK0& (0+127)
  4075  0020  01CF               	clrf	(__pbssBANK0+1)& (0+127)
  4076  0021  01D0               	clrf	(__pbssBANK0+2)& (0+127)
  4077  0022  01D1               	clrf	(__pbssBANK0+3)& (0+127)
  4078  0023  01D2               	clrf	(__pbssBANK0+4)& (0+127)
  4079  0024                     end_of_initialization:	
  4080                           ;End of C runtime variable initialization code
  4081                           
  4082  0024                     __end_of__initialization:
  4083  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4084  0025  0020               	movlb	0
  4085  0026  3184  2C92         	ljmp	_main	;jump to C main() function
  4086                           
  4087                           	psect	bssBANK0
  4088  004E                     __pbssBANK0:
  4089  004E                     _i2c1_driver_i2cISR:
  4090  004E                     	ds	2
  4091  0050                     _i2c1_driver_busCollisionISR:
  4092  0050                     	ds	2
  4093  0052                     _btnState:
  4094  0052                     	ds	1
  4095                           
  4096                           	psect	cstackCOMMON
  4097  0070                     __pcstackCOMMON:
  4098  0070                     ?_isdigit:
  4099  0070                     ?_i2c1_driver_open:	
  4100                           ; 1 bit 
  4101                           
  4102  0070                     ?_PMD_Initialize:	
  4103                           ; 1 bit 
  4104                           
  4105  0070                     ??_PMD_Initialize:	
  4106                           ; 1 bytes @ 0x0
  4107                           
  4108  0070                     ?_OSCILLATOR_Initialize:	
  4109                           ; 1 bytes @ 0x0
  4110                           
  4111  0070                     ??_OSCILLATOR_Initialize:	
  4112                           ; 1 bytes @ 0x0
  4113                           
  4114  0070                     ??_isdigit:	
  4115                           ; 1 bytes @ 0x0
  4116                           
  4117  0070                     ?_ReadI2C:	
  4118                           ; 1 bytes @ 0x0
  4119                           
  4120  0070                     ??_ReadI2C:	
  4121                           ; 1 bytes @ 0x0
  4122                           
  4123  0070                     ?_WriteI2C:	
  4124                           ; 1 bytes @ 0x0
  4125                           
  4126  0070                     ??_WriteI2C:	
  4127                           ; 1 bytes @ 0x0
  4128                           
  4129  0070                     ?_PIN_MANAGER_Initialize:	
  4130                           ; 1 bytes @ 0x0
  4131                           
  4132  0070                     ??_PIN_MANAGER_Initialize:	
  4133                           ; 1 bytes @ 0x0
  4134                           
  4135  0070                     ?_SYSTEM_Initialize:	
  4136                           ; 1 bytes @ 0x0
  4137                           
  4138  0070                     ??_SYSTEM_Initialize:	
  4139                           ; 1 bytes @ 0x0
  4140                           
  4141  0070                     ??_i2c1_driver_open:	
  4142                           ; 1 bytes @ 0x0
  4143                           
  4144  0070                     ?_INTERRUPT_InterruptManager:	
  4145                           ; 1 bytes @ 0x0
  4146                           
  4147  0070                     ??_INTERRUPT_InterruptManager:	
  4148                           ; 1 bytes @ 0x0
  4149                           
  4150  0070                     ?_tsttc:	
  4151                           ; 1 bytes @ 0x0
  4152                           
  4153  0070                     ?_LCDsend:	
  4154                           ; 1 bytes @ 0x0
  4155                           
  4156  0070                     ?_LCDrecv:	
  4157                           ; 1 bytes @ 0x0
  4158                           
  4159  0070                     ?_LCDinit:	
  4160                           ; 1 bytes @ 0x0
  4161                           
  4162  0070                     ?_LCDcmd:	
  4163                           ; 1 bytes @ 0x0
  4164                           
  4165  0070                     ?_LCDchar:	
  4166                           ; 1 bytes @ 0x0
  4167                           
  4168  0070                     ?_main:	
  4169                           ; 1 bytes @ 0x0
  4170                           
  4171  0070                     ?___wmul:	
  4172                           ; 1 bytes @ 0x0
  4173                           
  4174  0070                     ?___lwdiv:	
  4175                           ; 2 bytes @ 0x0
  4176                           
  4177  0070                     _isdigit$1607:	
  4178                           ; 2 bytes @ 0x0
  4179                           
  4180  0070                     ___wmul@multiplier:	
  4181                           ; 1 bytes @ 0x0
  4182                           
  4183  0070                     ___lwdiv@divisor:	
  4184                           ; 2 bytes @ 0x0
  4185                           
  4186                           
  4187                           ; 2 bytes @ 0x0
  4188  0070                     	ds	1
  4189  0071                     WriteI2C@data_out:
  4190  0071                     isdigit@c:	
  4191                           ; 1 bytes @ 0x1
  4192                           
  4193                           
  4194                           ; 1 bytes @ 0x1
  4195  0071                     	ds	1
  4196  0072                     ??_tsttc:
  4197  0072                     ??_LCDsend:	
  4198                           ; 1 bytes @ 0x2
  4199                           
  4200  0072                     ??_LCDrecv:	
  4201                           ; 1 bytes @ 0x2
  4202                           
  4203  0072                     ?_LCDsend2x4:	
  4204                           ; 1 bytes @ 0x2
  4205                           
  4206  0072                     LCDsend2x4@mode:	
  4207                           ; 1 bytes @ 0x2
  4208                           
  4209  0072                     ___wmul@multiplicand:	
  4210                           ; 1 bytes @ 0x2
  4211                           
  4212  0072                     ___lwdiv@dividend:	
  4213                           ; 2 bytes @ 0x2
  4214                           
  4215                           
  4216                           ; 2 bytes @ 0x2
  4217  0072                     	ds	1
  4218  0073                     ??_LCDsend2x4:
  4219  0073                     tsttc@value:	
  4220                           ; 1 bytes @ 0x3
  4221                           
  4222  0073                     LCDsend@c:	
  4223                           ; 1 bytes @ 0x3
  4224                           
  4225                           
  4226                           ; 1 bytes @ 0x3
  4227  0073                     	ds	1
  4228  0074                     ??___wmul:
  4229  0074                     ??___lwdiv:	
  4230                           ; 1 bytes @ 0x4
  4231                           
  4232  0074                     LCDrecv@hc:	
  4233                           ; 1 bytes @ 0x4
  4234                           
  4235  0074                     ___wmul@product:	
  4236                           ; 1 bytes @ 0x4
  4237                           
  4238                           
  4239                           ; 2 bytes @ 0x4
  4240  0074                     	ds	1
  4241  0075                     LCDrecv@lc:
  4242  0075                     LCDsend2x4@c:	
  4243                           ; 1 bytes @ 0x5
  4244                           
  4245  0075                     ___lwdiv@quotient:	
  4246                           ; 1 bytes @ 0x5
  4247                           
  4248                           
  4249                           ; 2 bytes @ 0x5
  4250  0075                     	ds	1
  4251  0076                     LCDrecv@mode:
  4252  0076                     LCDsend2x4@hc:	
  4253                           ; 1 bytes @ 0x6
  4254                           
  4255                           
  4256                           ; 1 bytes @ 0x6
  4257  0076                     	ds	1
  4258  0077                     LCDsend2x4@lc:
  4259  0077                     ___lwdiv@counter:	
  4260                           ; 1 bytes @ 0x7
  4261                           
  4262                           
  4263                           ; 1 bytes @ 0x7
  4264  0077                     	ds	1
  4265  0078                     ??_LCDinit:
  4266  0078                     ??_LCDcmd:	
  4267                           ; 1 bytes @ 0x8
  4268                           
  4269  0078                     ??_LCDchar:	
  4270                           ; 1 bytes @ 0x8
  4271                           
  4272  0078                     ?___lwmod:	
  4273                           ; 1 bytes @ 0x8
  4274                           
  4275  0078                     LCDcmd@c:	
  4276                           ; 2 bytes @ 0x8
  4277                           
  4278  0078                     LCDchar@c:	
  4279                           ; 1 bytes @ 0x8
  4280                           
  4281  0078                     ___lwmod@divisor:	
  4282                           ; 1 bytes @ 0x8
  4283                           
  4284                           
  4285                           ; 2 bytes @ 0x8
  4286  0078                     	ds	1
  4287  0079                     ?_LCDstr:
  4288  0079                     LCDstr@p:	
  4289                           ; 1 bytes @ 0x9
  4290                           
  4291                           
  4292                           ; 2 bytes @ 0x9
  4293  0079                     	ds	1
  4294  007A                     ___lwmod@dividend:
  4295                           
  4296                           ; 2 bytes @ 0xA
  4297  007A                     	ds	1
  4298  007B                     ??_LCDstr:
  4299                           
  4300                           ; 1 bytes @ 0xB
  4301  007B                     	ds	1
  4302  007C                     ??___lwmod:
  4303                           
  4304                           ; 1 bytes @ 0xC
  4305  007C                     	ds	1
  4306  007D                     ___lwmod@counter:
  4307                           
  4308                           ; 1 bytes @ 0xD
  4309  007D                     	ds	1
  4310                           
  4311                           	psect	cstackBANK0
  4312  0020                     __pcstackBANK0:
  4313  0020                     ?_sprintf:
  4314  0020                     LCDstr@c:	
  4315                           ; 2 bytes @ 0x0
  4316                           
  4317  0020                     sprintf@f:	
  4318                           ; 1 bytes @ 0x0
  4319                           
  4320                           
  4321                           ; 2 bytes @ 0x0
  4322  0020                     	ds	6
  4323  0026                     ??_sprintf:
  4324                           
  4325                           ; 1 bytes @ 0x6
  4326  0026                     	ds	4
  4327  002A                     sprintf@idx:
  4328                           
  4329                           ; 1 bytes @ 0xA
  4330  002A                     	ds	1
  4331  002B                     sprintf@ap:
  4332                           
  4333                           ; 1 bytes @ 0xB
  4334  002B                     	ds	1
  4335  002C                     sprintf@prec:
  4336                           
  4337                           ; 1 bytes @ 0xC
  4338  002C                     	ds	1
  4339  002D                     sprintf@val:
  4340                           
  4341                           ; 2 bytes @ 0xD
  4342  002D                     	ds	2
  4343  002F                     sprintf@flag:
  4344                           
  4345                           ; 1 bytes @ 0xF
  4346  002F                     	ds	1
  4347  0030                     sprintf@width:
  4348                           
  4349                           ; 2 bytes @ 0x10
  4350  0030                     	ds	2
  4351  0032                     sprintf@sp:
  4352                           
  4353                           ; 1 bytes @ 0x12
  4354  0032                     	ds	1
  4355  0033                     sprintf@c:
  4356                           
  4357                           ; 1 bytes @ 0x13
  4358  0033                     	ds	1
  4359  0034                     ??_main:
  4360                           
  4361                           ; 1 bytes @ 0x14
  4362  0034                     	ds	4
  4363  0038                     main@buf:
  4364                           
  4365                           ; 17 bytes @ 0x18
  4366  0038                     	ds	17
  4367  0049                     main@c:
  4368                           
  4369                           ; 1 bytes @ 0x29
  4370  0049                     	ds	1
  4371  004A                     main@c1:
  4372                           
  4373                           ; 1 bytes @ 0x2A
  4374  004A                     	ds	1
  4375  004B                     main@c2:
  4376                           
  4377                           ; 1 bytes @ 0x2B
  4378  004B                     	ds	1
  4379  004C                     main@counter:
  4380                           
  4381                           ; 2 bytes @ 0x2C
  4382  004C                     	ds	2
  4383                           
  4384                           	psect	maintext
  4385  0492                     __pmaintext:	
  4386 ;;
  4387 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  4388 ;;
  4389 ;; *************** function _main *****************
  4390 ;; Defined at:
  4391 ;;		line 198 in file "main.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;		None
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;  buf            17   24[BANK0 ] unsigned char [17]
  4396 ;;  counter         2   44[BANK0 ] unsigned int 
  4397 ;;  c2              1   43[BANK0 ] unsigned char 
  4398 ;;  c1              1   42[BANK0 ] unsigned char 
  4399 ;;  c               1   41[BANK0 ] unsigned char 
  4400 ;;  lc              1    0        unsigned char 
  4401 ;;  hc              1    0        unsigned char 
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      void 
  4404 ;; Registers used:
  4405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4406 ;; Tracked objects:
  4407 ;;		On entry : B1F/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4412 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4413 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4414 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4415 ;;Total ram usage:       26 bytes
  4416 ;; Hardware stack levels required when called:    5
  4417 ;; This function calls:
  4418 ;;		_LCDcmd
  4419 ;;		_LCDinit
  4420 ;;		_LCDrecv
  4421 ;;		_LCDstr
  4422 ;;		_SYSTEM_Initialize
  4423 ;;		_i2c1_driver_open
  4424 ;;		_sprintf
  4425 ;;		_tsttc
  4426 ;; This function is called by:
  4427 ;;		Startup code after reset
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           
  4432                           ;psect for function _main
  4433  0492                     _main:
  4434  0492                     l2651:	
  4435                           ;incstack = 0
  4436                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4437                           
  4438                           
  4439                           ;main.c: 200: unsigned char c;;main.c: 201: unsigned char hc;;main.c: 202: unsigned char
      +                           lc;;main.c: 203: unsigned char c1;;main.c: 204: unsigned char c2;;main.c: 205: unsigned
      +                           char buf[17];;main.c: 206: unsigned int counter = 0;
  4440  0492  0020               	movlb	0	; select bank0
  4441  0493  01CC               	clrf	main@counter
  4442  0494  01CD               	clrf	main@counter+1
  4443  0495                     l2653:
  4444                           
  4445                           ;main.c: 209: SYSTEM_Initialize();
  4446  0495  318F  2790  3184   	fcall	_SYSTEM_Initialize
  4447  0498                     l2655:
  4448                           
  4449                           ;main.c: 226: i2c1_driver_open();
  4450  0498  3187  27EF  3184   	fcall	_i2c1_driver_open
  4451  049B                     l2657:
  4452                           
  4453                           ;main.c: 227: TRISCbits.TRISC3 = 1;
  4454  049B  0020               	movlb	0	; select bank0
  4455  049C  1593               	bsf	19,3	;volatile
  4456  049D                     l2659:
  4457                           
  4458                           ;main.c: 228: TRISCbits.TRISC4 = 1;
  4459  049D  1613               	bsf	19,4	;volatile
  4460  049E                     l2661:
  4461                           
  4462                           ;main.c: 229: WPUC3 = 1;
  4463  049E  003E               	movlb	30	; select bank30
  4464  049F  15CF               	bsf	79,3	;volatile
  4465  04A0                     l2663:
  4466                           
  4467                           ;main.c: 230: WPUC4 = 1;
  4468  04A0  164F               	bsf	79,4	;volatile
  4469  04A1                     l2665:
  4470                           
  4471                           ;main.c: 231: LCDinit();
  4472  04A1  3186  2645  3184   	fcall	_LCDinit
  4473  04A4                     l2667:
  4474  04A4  1003               	clrc
  4475  04A5  0020               	movlb	0	; select bank0
  4476  04A6  1E17               	btfss	23,4	;volatile
  4477  04A7  1403               	setc
  4478  04A8  1803               	btfsc	3,0
  4479  04A9  2CAB               	goto	u2701
  4480  04AA  2CAE               	goto	u2700
  4481  04AB                     u2701:
  4482  04AB  0020               	movlb	0	; select bank0
  4483  04AC  1617               	bsf	23,4	;volatile
  4484  04AD  2CB0               	goto	u2714
  4485  04AE                     u2700:
  4486  04AE  0020               	movlb	0	; select bank0
  4487  04AF  1217               	bcf	23,4	;volatile
  4488  04B0                     u2714:
  4489  04B0                     l2669:
  4490                           
  4491                           ;main.c: 236: if(PORTBbits.RB4){
  4492  04B0  1E0D               	btfss	13,4	;volatile
  4493  04B1  2CB3               	goto	u2721
  4494  04B2  2CB4               	goto	u2720
  4495  04B3                     u2721:
  4496  04B3  2CE1               	goto	l2673
  4497  04B4                     u2720:
  4498  04B4                     l2671:
  4499  04B4  1003               	clrc
  4500  04B5  1E16               	btfss	22,4	;volatile
  4501  04B6  1403               	setc
  4502  04B7  1803               	btfsc	3,0
  4503  04B8  2CBA               	goto	u2731
  4504  04B9  2CBD               	goto	u2730
  4505  04BA                     u2731:
  4506  04BA  0020               	movlb	0	; select bank0
  4507  04BB  1616               	bsf	22,4	;volatile
  4508  04BC  2CBF               	goto	u2744
  4509  04BD                     u2730:
  4510  04BD  0020               	movlb	0	; select bank0
  4511  04BE  1216               	bcf	22,4	;volatile
  4512  04BF                     u2744:
  4513  04BF                     l611:	
  4514                           ;main.c: 238: do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  4515                           
  4516  04BF  1003               	clrc
  4517  04C0  1E96               	btfss	22,5	;volatile
  4518  04C1  1403               	setc
  4519  04C2  1803               	btfsc	3,0
  4520  04C3  2CC5               	goto	u2751
  4521  04C4  2CC8               	goto	u2750
  4522  04C5                     u2751:
  4523  04C5  0020               	movlb	0	; select bank0
  4524  04C6  1696               	bsf	22,5	;volatile
  4525  04C7  2CCA               	goto	u2764
  4526  04C8                     u2750:
  4527  04C8  0020               	movlb	0	; select bank0
  4528  04C9  1296               	bcf	22,5	;volatile
  4529  04CA                     u2764:
  4530  04CA                     l613:	
  4531                           ;main.c: 239: do { LATAbits.LATA6 = ~LATAbits.LATA6; } while(0);
  4532                           
  4533  04CA  1003               	clrc
  4534  04CB  1F16               	btfss	22,6	;volatile
  4535  04CC  1403               	setc
  4536  04CD  1803               	btfsc	3,0
  4537  04CE  2CD0               	goto	u2771
  4538  04CF  2CD3               	goto	u2770
  4539  04D0                     u2771:
  4540  04D0  0020               	movlb	0	; select bank0
  4541  04D1  1716               	bsf	22,6	;volatile
  4542  04D2  2CD5               	goto	u2784
  4543  04D3                     u2770:
  4544  04D3  0020               	movlb	0	; select bank0
  4545  04D4  1316               	bcf	22,6	;volatile
  4546  04D5                     u2784:
  4547  04D5                     l615:	
  4548                           ;main.c: 240: do { LATAbits.LATA7 = ~LATAbits.LATA7; } while(0);
  4549                           
  4550  04D5  1003               	clrc
  4551  04D6  1F96               	btfss	22,7	;volatile
  4552  04D7  1403               	setc
  4553  04D8  1803               	btfsc	3,0
  4554  04D9  2CDB               	goto	u2791
  4555  04DA  2CDE               	goto	u2790
  4556  04DB                     u2791:
  4557  04DB  0020               	movlb	0	; select bank0
  4558  04DC  1796               	bsf	22,7	;volatile
  4559  04DD  2CE0               	goto	u2804
  4560  04DE                     u2790:
  4561  04DE  0020               	movlb	0	; select bank0
  4562  04DF  1396               	bcf	22,7	;volatile
  4563  04E0                     u2804:
  4564  04E0  2CE2               	goto	l2675
  4565  04E1                     l2673:
  4566  04E1  0196               	clrf	22	;volatile
  4567  04E2                     l2675:
  4568                           
  4569                           ;main.c: 243: };main.c: 246: __nop();
  4570  04E2  0000               	nop
  4571  04E3                     l2677:
  4572                           
  4573                           ;main.c: 247: c = tsttc();
  4574  04E3  3183  2385  3184   	fcall	_tsttc
  4575  04E6  0020               	movlb	0	; select bank0
  4576  04E7  00B4               	movwf	??_main
  4577  04E8  0834               	movf	??_main,w
  4578  04E9  00C9               	movwf	main@c
  4579  04EA                     l2679:
  4580                           
  4581                           ;main.c: 250: LCDcmd(0x80);
  4582  04EA  3080               	movlw	128
  4583  04EB  318F  2770  3184   	fcall	_LCDcmd
  4584  04EE                     l2681:
  4585                           
  4586                           ;main.c: 251: LCDstr("Temp");
  4587  04EE  303F               	movlw	low (STR_1| (0+32768))
  4588  04EF  00F9               	movwf	LCDstr@p
  4589  04F0  3090               	movlw	high (STR_1| (0+32768))
  4590  04F1  00FA               	movwf	LCDstr@p+1
  4591  04F2  318F  27C6  3184   	fcall	_LCDstr
  4592  04F5                     l2683:
  4593                           
  4594                           ;main.c: 252: LCDcmd(0x85);
  4595  04F5  3085               	movlw	133
  4596  04F6  318F  2770  3184   	fcall	_LCDcmd
  4597  04F9                     l2685:
  4598                           
  4599                           ;main.c: 253: sprintf( buf,"Clock %02d", counter );
  4600  04F9  3019               	movlw	low (STR_2| (0+32768))
  4601  04FA  0020               	movlb	0	; select bank0
  4602  04FB  00A0               	movwf	sprintf@f
  4603  04FC  3090               	movlw	high (STR_2| (0+32768))
  4604  04FD  00A1               	movwf	sprintf@f+1
  4605  04FE  084D               	movf	main@counter+1,w
  4606  04FF  00A3               	movwf	?_sprintf+3
  4607  0500  084C               	movf	main@counter,w
  4608  0501  00A2               	movwf	?_sprintf+2
  4609  0502  3038               	movlw	(low (main@buf| 0))& (0+255)
  4610  0503  3180  2028  3184   	fcall	_sprintf
  4611  0506                     l2687:
  4612                           
  4613                           ;main.c: 254: LCDstr(buf);
  4614  0506  3038               	movlw	low main@buf
  4615  0507  00F9               	movwf	LCDstr@p
  4616  0508  3000               	movlw	high main@buf
  4617  0509  00FA               	movwf	LCDstr@p+1
  4618  050A  318F  27C6  3184   	fcall	_LCDstr
  4619  050D                     l2689:
  4620                           
  4621                           ;main.c: 255: LCDcmd(0xc0);
  4622  050D  30C0               	movlw	192
  4623  050E  318F  2770  3184   	fcall	_LCDcmd
  4624  0511                     l2691:
  4625                           
  4626                           ;main.c: 257: sprintf(buf, "%02d C", c);
  4627  0511  3038               	movlw	low (STR_3| (0+32768))
  4628  0512  0020               	movlb	0	; select bank0
  4629  0513  00A0               	movwf	sprintf@f
  4630  0514  3090               	movlw	high (STR_3| (0+32768))
  4631  0515  00A1               	movwf	sprintf@f+1
  4632  0516  0849               	movf	main@c,w
  4633  0517  00B4               	movwf	??_main
  4634  0518  01B5               	clrf	??_main+1
  4635  0519  0834               	movf	??_main,w
  4636  051A  00A2               	movwf	?_sprintf+2
  4637  051B  0835               	movf	??_main+1,w
  4638  051C  00A3               	movwf	?_sprintf+3
  4639  051D  3038               	movlw	(low (main@buf| 0))& (0+255)
  4640  051E  3180  2028  3184   	fcall	_sprintf
  4641  0521                     l2693:
  4642                           
  4643                           ;main.c: 258: LCDstr(buf);
  4644  0521  3038               	movlw	low main@buf
  4645  0522  00F9               	movwf	LCDstr@p
  4646  0523  3000               	movlw	high main@buf
  4647  0524  00FA               	movwf	LCDstr@p+1
  4648  0525  318F  27C6  3184   	fcall	_LCDstr
  4649  0528                     l2695:
  4650                           
  4651                           ;main.c: 259: LCDcmd(0xc5);
  4652  0528  30C5               	movlw	197
  4653  0529  318F  2770  3184   	fcall	_LCDcmd
  4654  052C                     l2697:
  4655                           
  4656                           ;main.c: 260: sprintf(buf, "%d", PORTBbits.RB4);
  4657  052C  3044               	movlw	low (STR_4| (0+32768))
  4658  052D  0020               	movlb	0	; select bank0
  4659  052E  00A0               	movwf	sprintf@f
  4660  052F  3090               	movlw	high (STR_4| (0+32768))
  4661  0530  00A1               	movwf	sprintf@f+1
  4662  0531  0E0D               	swapf	13,w	;volatile
  4663  0532  3901               	andlw	1
  4664  0533  00B4               	movwf	??_main
  4665  0534  01B5               	clrf	??_main+1
  4666  0535  0834               	movf	??_main,w
  4667  0536  00A2               	movwf	?_sprintf+2
  4668  0537  0835               	movf	??_main+1,w
  4669  0538  00A3               	movwf	?_sprintf+3
  4670  0539  3038               	movlw	(low (main@buf| 0))& (0+255)
  4671  053A  3180  2028  3184   	fcall	_sprintf
  4672  053D                     l2699:
  4673                           
  4674                           ;main.c: 261: LCDstr(buf);
  4675  053D  3038               	movlw	low main@buf
  4676  053E  00F9               	movwf	LCDstr@p
  4677  053F  3000               	movlw	high main@buf
  4678  0540  00FA               	movwf	LCDstr@p+1
  4679  0541  318F  27C6  3184   	fcall	_LCDstr
  4680  0544                     l2701:
  4681                           
  4682                           ;main.c: 262: LCDcmd(0x81);
  4683  0544  3081               	movlw	129
  4684  0545  318F  2770  3184   	fcall	_LCDcmd
  4685  0548                     l2703:
  4686                           
  4687                           ;main.c: 265: c1 = LCDrecv(0);
  4688  0548  3000               	movlw	0
  4689  0549  3182  223F  3184   	fcall	_LCDrecv
  4690  054C  0020               	movlb	0	; select bank0
  4691  054D  00B4               	movwf	??_main
  4692  054E  0834               	movf	??_main,w
  4693  054F  00CA               	movwf	main@c1
  4694  0550                     l2705:
  4695                           
  4696                           ;main.c: 266: c2 = LCDrecv(0x01);
  4697  0550  3001               	movlw	1
  4698  0551  3182  223F  3184   	fcall	_LCDrecv
  4699  0554  0020               	movlb	0	; select bank0
  4700  0555  00B4               	movwf	??_main
  4701  0556  0834               	movf	??_main,w
  4702  0557  00CB               	movwf	main@c2
  4703  0558                     l2707:
  4704                           
  4705                           ;main.c: 267: LCDcmd(0xc8);
  4706  0558  30C8               	movlw	200
  4707  0559  318F  2770  3184   	fcall	_LCDcmd
  4708  055C                     l2709:
  4709                           
  4710                           ;main.c: 268: sprintf(buf, "%02x %02x", c1, c2);
  4711  055C  302E               	movlw	low (STR_5| (0+32768))
  4712  055D  0020               	movlb	0	; select bank0
  4713  055E  00A0               	movwf	sprintf@f
  4714  055F  3090               	movlw	high (STR_5| (0+32768))
  4715  0560  00A1               	movwf	sprintf@f+1
  4716  0561  084A               	movf	main@c1,w
  4717  0562  00B4               	movwf	??_main
  4718  0563  01B5               	clrf	??_main+1
  4719  0564  0834               	movf	??_main,w
  4720  0565  00A2               	movwf	?_sprintf+2
  4721  0566  0835               	movf	??_main+1,w
  4722  0567  00A3               	movwf	?_sprintf+3
  4723  0568  084B               	movf	main@c2,w
  4724  0569  00B6               	movwf	??_main+2
  4725  056A  01B7               	clrf	??_main+3
  4726  056B  0836               	movf	??_main+2,w
  4727  056C  00A4               	movwf	?_sprintf+4
  4728  056D  0837               	movf	??_main+3,w
  4729  056E  00A5               	movwf	?_sprintf+5
  4730  056F  3038               	movlw	(low (main@buf| 0))& (0+255)
  4731  0570  3180  2028  3184   	fcall	_sprintf
  4732  0573                     l2711:
  4733                           
  4734                           ;main.c: 269: LCDstr(buf);
  4735  0573  3038               	movlw	low main@buf
  4736  0574  00F9               	movwf	LCDstr@p
  4737  0575  3000               	movlw	high main@buf
  4738  0576  00FA               	movwf	LCDstr@p+1
  4739  0577  318F  27C6  3184   	fcall	_LCDstr
  4740  057A                     l2713:
  4741                           
  4742                           ;main.c: 270: __nop();
  4743  057A  0000               	nop
  4744  057B                     l2715:
  4745                           
  4746                           ;main.c: 271: _delay((unsigned long)((3000)*(1000000/4000.0)));
  4747  057B  3004               	movlw	4
  4748  057C  0020               	movlb	0	; select bank0
  4749  057D  00B5               	movwf	??_main+1
  4750  057E  30CF               	movlw	207
  4751  057F  00B4               	movwf	??_main
  4752  0580  3001               	movlw	1
  4753  0581                     u2847:
  4754  0581  0B89               	decfsz	9,f
  4755  0582  2D81               	goto	u2847
  4756  0583  0BB4               	decfsz	??_main,f
  4757  0584  2D81               	goto	u2847
  4758  0585  0BB5               	decfsz	??_main+1,f
  4759  0586  2D81               	goto	u2847
  4760  0587  3200               	nop2
  4761  0588                     l2717:
  4762                           
  4763                           ;main.c: 272: counter = counter + 3;
  4764  0588  0020               	movlb	0	; select bank0
  4765  0589  084C               	movf	main@counter,w
  4766  058A  3E03               	addlw	3
  4767  058B  00CC               	movwf	main@counter
  4768  058C  3000               	movlw	0
  4769  058D  3D4D               	addwfc	main@counter+1,w
  4770  058E  00CD               	movwf	main@counter+1
  4771  058F  2CA4               	goto	l2667
  4772  0590  3180  281C         	ljmp	start
  4773  0592                     __end_of_main:
  4774                           
  4775                           	psect	text1
  4776  0385                     __ptext1:	
  4777 ;; *************** function _tsttc *****************
  4778 ;; Defined at:
  4779 ;;		line 55 in file "main.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;		None
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  value           1    3[COMMON] unsigned char 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      unsigned char 
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0, pclath, cstack
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4795 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4797 ;;Total ram usage:        2 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    2
  4800 ;; This function calls:
  4801 ;;		_ReadI2C
  4802 ;;		_WriteI2C
  4803 ;; This function is called by:
  4804 ;;		_main
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           
  4809                           ;psect for function _tsttc
  4810  0385                     _tsttc:
  4811  0385                     l369:	
  4812                           ;incstack = 0
  4813                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
  4814                           ;main.c: 57: unsigned char value;;main.c: 58: do{
  4815                           
  4816  0385                     l2349:	
  4817                           ;main.c: 59: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4818                           
  4819  0385  0023               	movlb	3	; select bank3
  4820  0386  0C0F               	rrf	15,w	;volatile
  4821  0387  0C89               	rrf	9,f
  4822  0388  3901               	andlw	1
  4823  0389  00F2               	movwf	??_tsttc
  4824  038A  0811               	movf	17,w	;volatile
  4825  038B  391F               	andlw	31
  4826  038C  0472               	iorwf	??_tsttc,w
  4827  038D  1D03               	btfss	3,2
  4828  038E  2B90               	goto	u1961
  4829  038F  2B91               	goto	u1960
  4830  0390                     u1961:
  4831  0390  2B85               	goto	l2349
  4832  0391                     u1960:
  4833  0391                     l372:
  4834                           
  4835                           ;main.c: 60: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
  4836  0391  1411               	bsf	17,0	;volatile
  4837  0392                     l373:
  4838  0392  1811               	btfsc	17,0	;volatile
  4839  0393  2B95               	goto	u1971
  4840  0394  2B96               	goto	u1970
  4841  0395                     u1971:
  4842  0395  2B92               	goto	l373
  4843  0396                     u1970:
  4844  0396                     l2351:
  4845  0396  0C0F               	rrf	15,w	;volatile
  4846  0397  0C89               	rrf	9,f
  4847  0398  3901               	andlw	1
  4848  0399  00F2               	movwf	??_tsttc
  4849  039A  0811               	movf	17,w	;volatile
  4850  039B  391F               	andlw	31
  4851  039C  0472               	iorwf	??_tsttc,w
  4852  039D  1D03               	btfss	3,2
  4853  039E  2BA0               	goto	u1981
  4854  039F  2BA1               	goto	u1980
  4855  03A0                     u1981:
  4856  03A0  2B96               	goto	l2351
  4857  03A1                     u1980:
  4858  03A1                     l2353:
  4859                           
  4860                           ;main.c: 62: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4861  03A1  309A               	movlw	154
  4862  03A2  3186  26B6  3183   	fcall	_WriteI2C
  4863  03A5                     l2355:
  4864  03A5  0023               	movlb	3	; select bank3
  4865  03A6  0C0F               	rrf	15,w	;volatile
  4866  03A7  0C89               	rrf	9,f
  4867  03A8  3901               	andlw	1
  4868  03A9  00F2               	movwf	??_tsttc
  4869  03AA  0811               	movf	17,w	;volatile
  4870  03AB  391F               	andlw	31
  4871  03AC  0472               	iorwf	??_tsttc,w
  4872  03AD  1D03               	btfss	3,2
  4873  03AE  2BB0               	goto	u1991
  4874  03AF  2BB1               	goto	u1990
  4875  03B0                     u1991:
  4876  03B0  2BA5               	goto	l2355
  4877  03B1                     u1990:
  4878  03B1                     l2357:
  4879                           
  4880                           ;main.c: 63: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4881  03B1  3001               	movlw	1
  4882  03B2  3186  26B6  3183   	fcall	_WriteI2C
  4883  03B5                     l2359:
  4884  03B5  0023               	movlb	3	; select bank3
  4885  03B6  0C0F               	rrf	15,w	;volatile
  4886  03B7  0C89               	rrf	9,f
  4887  03B8  3901               	andlw	1
  4888  03B9  00F2               	movwf	??_tsttc
  4889  03BA  0811               	movf	17,w	;volatile
  4890  03BB  391F               	andlw	31
  4891  03BC  0472               	iorwf	??_tsttc,w
  4892  03BD  1D03               	btfss	3,2
  4893  03BE  2BC0               	goto	u2001
  4894  03BF  2BC1               	goto	u2000
  4895  03C0                     u2001:
  4896  03C0  2BB5               	goto	l2359
  4897  03C1                     u2000:
  4898  03C1                     l384:
  4899                           
  4900                           ;main.c: 64: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
  4901  03C1  1491               	bsf	17,1	;volatile
  4902  03C2                     l385:
  4903  03C2  1891               	btfsc	17,1	;volatile
  4904  03C3  2BC5               	goto	u2011
  4905  03C4  2BC6               	goto	u2010
  4906  03C5                     u2011:
  4907  03C5  2BC2               	goto	l385
  4908  03C6                     u2010:
  4909  03C6                     l2361:
  4910  03C6  0C0F               	rrf	15,w	;volatile
  4911  03C7  0C89               	rrf	9,f
  4912  03C8  3901               	andlw	1
  4913  03C9  00F2               	movwf	??_tsttc
  4914  03CA  0811               	movf	17,w	;volatile
  4915  03CB  391F               	andlw	31
  4916  03CC  0472               	iorwf	??_tsttc,w
  4917  03CD  1D03               	btfss	3,2
  4918  03CE  2BD0               	goto	u2021
  4919  03CF  2BD1               	goto	u2020
  4920  03D0                     u2021:
  4921  03D0  2BC6               	goto	l2361
  4922  03D1                     u2020:
  4923  03D1                     l2363:
  4924                           
  4925                           ;main.c: 65: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4926  03D1  309B               	movlw	155
  4927  03D2  3186  26B6  3183   	fcall	_WriteI2C
  4928  03D5                     l2365:
  4929  03D5  0023               	movlb	3	; select bank3
  4930  03D6  0C0F               	rrf	15,w	;volatile
  4931  03D7  0C89               	rrf	9,f
  4932  03D8  3901               	andlw	1
  4933  03D9  00F2               	movwf	??_tsttc
  4934  03DA  0811               	movf	17,w	;volatile
  4935  03DB  391F               	andlw	31
  4936  03DC  0472               	iorwf	??_tsttc,w
  4937  03DD  1D03               	btfss	3,2
  4938  03DE  2BE0               	goto	u2031
  4939  03DF  2BE1               	goto	u2030
  4940  03E0                     u2031:
  4941  03E0  2BD5               	goto	l2365
  4942  03E1                     u2030:
  4943  03E1                     l2367:
  4944                           
  4945                           ;main.c: 66: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4946  03E1  318F  27AC  3183   	fcall	_ReadI2C
  4947  03E4  00F2               	movwf	??_tsttc
  4948  03E5  0872               	movf	??_tsttc,w
  4949  03E6  00F3               	movwf	tsttc@value
  4950  03E7                     l2369:
  4951  03E7  0023               	movlb	3	; select bank3
  4952  03E8  0C0F               	rrf	15,w	;volatile
  4953  03E9  0C89               	rrf	9,f
  4954  03EA  3901               	andlw	1
  4955  03EB  00F2               	movwf	??_tsttc
  4956  03EC  0811               	movf	17,w	;volatile
  4957  03ED  391F               	andlw	31
  4958  03EE  0472               	iorwf	??_tsttc,w
  4959  03EF  1D03               	btfss	3,2
  4960  03F0  2BF2               	goto	u2041
  4961  03F1  2BF3               	goto	u2040
  4962  03F2                     u2041:
  4963  03F2  2BE7               	goto	l2369
  4964  03F3                     u2040:
  4965  03F3                     l396:
  4966                           
  4967                           ;main.c: 67: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4968  03F3  1691               	bsf	17,5	;volatile
  4969  03F4  1611               	bsf	17,4	;volatile
  4970  03F5                     l397:
  4971  03F5  1A11               	btfsc	17,4	;volatile
  4972  03F6  2BF8               	goto	u2051
  4973  03F7  2BF9               	goto	u2050
  4974  03F8                     u2051:
  4975  03F8  2BF5               	goto	l397
  4976  03F9                     u2050:
  4977  03F9                     l2371:
  4978  03F9  0C0F               	rrf	15,w	;volatile
  4979  03FA  0C89               	rrf	9,f
  4980  03FB  3901               	andlw	1
  4981  03FC  00F2               	movwf	??_tsttc
  4982  03FD  0811               	movf	17,w	;volatile
  4983  03FE  391F               	andlw	31
  4984  03FF  0472               	iorwf	??_tsttc,w
  4985  0400  1D03               	btfss	3,2
  4986  0401  2C03               	goto	u2061
  4987  0402  2C04               	goto	u2060
  4988  0403                     u2061:
  4989  0403  2BF9               	goto	l2371
  4990  0404                     u2060:
  4991  0404                     l402:
  4992                           
  4993                           ;main.c: 68: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  4994  0404  1511               	bsf	17,2	;volatile
  4995  0405                     l403:
  4996  0405  1911               	btfsc	17,2	;volatile
  4997  0406  2C08               	goto	u2071
  4998  0407  2C09               	goto	u2070
  4999  0408                     u2071:
  5000  0408  2C05               	goto	l403
  5001  0409                     u2070:
  5002  0409                     l405:
  5003                           
  5004                           ;main.c: 69: } while (!(value & 0x40));
  5005  0409  1F73               	btfss	tsttc@value,6
  5006  040A  2C0C               	goto	u2081
  5007  040B  2C0D               	goto	u2080
  5008  040C                     u2081:
  5009  040C  2B85               	goto	l369
  5010  040D                     u2080:
  5011  040D                     l2373:
  5012  040D  0C0F               	rrf	15,w	;volatile
  5013  040E  0C89               	rrf	9,f
  5014  040F  3901               	andlw	1
  5015  0410  00F2               	movwf	??_tsttc
  5016  0411  0811               	movf	17,w	;volatile
  5017  0412  391F               	andlw	31
  5018  0413  0472               	iorwf	??_tsttc,w
  5019  0414  1D03               	btfss	3,2
  5020  0415  2C17               	goto	u2091
  5021  0416  2C18               	goto	u2090
  5022  0417                     u2091:
  5023  0417  2C0D               	goto	l2373
  5024  0418                     u2090:
  5025  0418                     l409:
  5026                           
  5027                           ;main.c: 72: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
  5028  0418  1411               	bsf	17,0	;volatile
  5029  0419                     l410:
  5030  0419  1811               	btfsc	17,0	;volatile
  5031  041A  2C1C               	goto	u2101
  5032  041B  2C1D               	goto	u2100
  5033  041C                     u2101:
  5034  041C  2C19               	goto	l410
  5035  041D                     u2100:
  5036  041D                     l2375:
  5037  041D  0C0F               	rrf	15,w	;volatile
  5038  041E  0C89               	rrf	9,f
  5039  041F  3901               	andlw	1
  5040  0420  00F2               	movwf	??_tsttc
  5041  0421  0811               	movf	17,w	;volatile
  5042  0422  391F               	andlw	31
  5043  0423  0472               	iorwf	??_tsttc,w
  5044  0424  1D03               	btfss	3,2
  5045  0425  2C27               	goto	u2111
  5046  0426  2C28               	goto	u2110
  5047  0427                     u2111:
  5048  0427  2C1D               	goto	l2375
  5049  0428                     u2110:
  5050  0428                     l2377:
  5051                           
  5052                           ;main.c: 73: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  5053  0428  309A               	movlw	154
  5054  0429  3186  26B6  3183   	fcall	_WriteI2C
  5055  042C                     l2379:
  5056  042C  0023               	movlb	3	; select bank3
  5057  042D  0C0F               	rrf	15,w	;volatile
  5058  042E  0C89               	rrf	9,f
  5059  042F  3901               	andlw	1
  5060  0430  00F2               	movwf	??_tsttc
  5061  0431  0811               	movf	17,w	;volatile
  5062  0432  391F               	andlw	31
  5063  0433  0472               	iorwf	??_tsttc,w
  5064  0434  1D03               	btfss	3,2
  5065  0435  2C37               	goto	u2121
  5066  0436  2C38               	goto	u2120
  5067  0437                     u2121:
  5068  0437  2C2C               	goto	l2379
  5069  0438                     u2120:
  5070  0438                     l2381:
  5071                           
  5072                           ;main.c: 74: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  5073  0438  3000               	movlw	0
  5074  0439  3186  26B6  3183   	fcall	_WriteI2C
  5075  043C                     l2383:
  5076  043C  0023               	movlb	3	; select bank3
  5077  043D  0C0F               	rrf	15,w	;volatile
  5078  043E  0C89               	rrf	9,f
  5079  043F  3901               	andlw	1
  5080  0440  00F2               	movwf	??_tsttc
  5081  0441  0811               	movf	17,w	;volatile
  5082  0442  391F               	andlw	31
  5083  0443  0472               	iorwf	??_tsttc,w
  5084  0444  1D03               	btfss	3,2
  5085  0445  2C47               	goto	u2131
  5086  0446  2C48               	goto	u2130
  5087  0447                     u2131:
  5088  0447  2C3C               	goto	l2383
  5089  0448                     u2130:
  5090  0448                     l421:
  5091                           
  5092                           ;main.c: 75: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
  5093  0448  1491               	bsf	17,1	;volatile
  5094  0449                     l422:
  5095  0449  1891               	btfsc	17,1	;volatile
  5096  044A  2C4C               	goto	u2141
  5097  044B  2C4D               	goto	u2140
  5098  044C                     u2141:
  5099  044C  2C49               	goto	l422
  5100  044D                     u2140:
  5101  044D                     l2385:
  5102  044D  0C0F               	rrf	15,w	;volatile
  5103  044E  0C89               	rrf	9,f
  5104  044F  3901               	andlw	1
  5105  0450  00F2               	movwf	??_tsttc
  5106  0451  0811               	movf	17,w	;volatile
  5107  0452  391F               	andlw	31
  5108  0453  0472               	iorwf	??_tsttc,w
  5109  0454  1D03               	btfss	3,2
  5110  0455  2C57               	goto	u2151
  5111  0456  2C58               	goto	u2150
  5112  0457                     u2151:
  5113  0457  2C4D               	goto	l2385
  5114  0458                     u2150:
  5115  0458                     l2387:
  5116                           
  5117                           ;main.c: 76: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  5118  0458  309B               	movlw	155
  5119  0459  3186  26B6  3183   	fcall	_WriteI2C
  5120  045C                     l2389:
  5121  045C  0023               	movlb	3	; select bank3
  5122  045D  0C0F               	rrf	15,w	;volatile
  5123  045E  0C89               	rrf	9,f
  5124  045F  3901               	andlw	1
  5125  0460  00F2               	movwf	??_tsttc
  5126  0461  0811               	movf	17,w	;volatile
  5127  0462  391F               	andlw	31
  5128  0463  0472               	iorwf	??_tsttc,w
  5129  0464  1D03               	btfss	3,2
  5130  0465  2C67               	goto	u2161
  5131  0466  2C68               	goto	u2160
  5132  0467                     u2161:
  5133  0467  2C5C               	goto	l2389
  5134  0468                     u2160:
  5135  0468                     l2391:
  5136                           
  5137                           ;main.c: 77: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  5138  0468  318F  27AC  3183   	fcall	_ReadI2C
  5139  046B  00F2               	movwf	??_tsttc
  5140  046C  0872               	movf	??_tsttc,w
  5141  046D  00F3               	movwf	tsttc@value
  5142  046E                     l2393:
  5143  046E  0023               	movlb	3	; select bank3
  5144  046F  0C0F               	rrf	15,w	;volatile
  5145  0470  0C89               	rrf	9,f
  5146  0471  3901               	andlw	1
  5147  0472  00F2               	movwf	??_tsttc
  5148  0473  0811               	movf	17,w	;volatile
  5149  0474  391F               	andlw	31
  5150  0475  0472               	iorwf	??_tsttc,w
  5151  0476  1D03               	btfss	3,2
  5152  0477  2C79               	goto	u2171
  5153  0478  2C7A               	goto	u2170
  5154  0479                     u2171:
  5155  0479  2C6E               	goto	l2393
  5156  047A                     u2170:
  5157  047A                     l433:
  5158                           
  5159                           ;main.c: 78: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  5160  047A  1691               	bsf	17,5	;volatile
  5161  047B  1611               	bsf	17,4	;volatile
  5162  047C                     l434:
  5163  047C  1A11               	btfsc	17,4	;volatile
  5164  047D  2C7F               	goto	u2181
  5165  047E  2C80               	goto	u2180
  5166  047F                     u2181:
  5167  047F  2C7C               	goto	l434
  5168  0480                     u2180:
  5169  0480                     l2395:
  5170  0480  0C0F               	rrf	15,w	;volatile
  5171  0481  0C89               	rrf	9,f
  5172  0482  3901               	andlw	1
  5173  0483  00F2               	movwf	??_tsttc
  5174  0484  0811               	movf	17,w	;volatile
  5175  0485  391F               	andlw	31
  5176  0486  0472               	iorwf	??_tsttc,w
  5177  0487  1D03               	btfss	3,2
  5178  0488  2C8A               	goto	u2191
  5179  0489  2C8B               	goto	u2190
  5180  048A                     u2191:
  5181  048A  2C80               	goto	l2395
  5182  048B                     u2190:
  5183  048B                     l439:
  5184                           
  5185                           ;main.c: 79: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  5186  048B  1511               	bsf	17,2	;volatile
  5187  048C                     l440:
  5188  048C  1911               	btfsc	17,2	;volatile
  5189  048D  2C8F               	goto	u2201
  5190  048E  2C90               	goto	u2200
  5191  048F                     u2201:
  5192  048F  2C8C               	goto	l440
  5193  0490                     u2200:
  5194  0490                     l2397:
  5195                           
  5196                           ;main.c: 81: return value;
  5197  0490  0873               	movf	tsttc@value,w
  5198  0491                     l443:
  5199  0491  0008               	return
  5200  0492                     __end_of_tsttc:
  5201                           
  5202                           	psect	text2
  5203  0028                     __ptext2:	
  5204 ;; *************** function _sprintf *****************
  5205 ;; Defined at:
  5206 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  sp              1    wreg     PTR unsigned char 
  5209 ;;		 -> main@buf(17), 
  5210 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  5211 ;;		 -> STR_5(10), STR_4(3), STR_3(7), STR_2(11), 
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;  sp              1   18[BANK0 ] PTR unsigned char 
  5214 ;;		 -> main@buf(17), 
  5215 ;;  idx             1   10[BANK0 ] unsigned char 
  5216 ;;  tmpval          4    0        struct .
  5217 ;;  width           2   16[BANK0 ] int 
  5218 ;;  val             2   13[BANK0 ] unsigned int 
  5219 ;;  cp              2    0        PTR const unsigned char 
  5220 ;;  len             2    0        unsigned int 
  5221 ;;  c               1   19[BANK0 ] unsigned char 
  5222 ;;  flag            1   15[BANK0 ] unsigned char 
  5223 ;;  prec            1   12[BANK0 ] char 
  5224 ;;  ap              1   11[BANK0 ] PTR void [1]
  5225 ;;		 -> ?_sprintf(2), 
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  2    0[BANK0 ] int 
  5228 ;; Registers used:
  5229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5235 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5236 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5237 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5238 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5239 ;;Total ram usage:       20 bytes
  5240 ;; Hardware stack levels used:    1
  5241 ;; Hardware stack levels required when called:    2
  5242 ;; This function calls:
  5243 ;;		___lwdiv
  5244 ;;		___lwmod
  5245 ;;		___wmul
  5246 ;;		_isdigit
  5247 ;; This function is called by:
  5248 ;;		_main
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           
  5253                           ;psect for function _sprintf
  5254  0028                     _sprintf:
  5255                           
  5256                           ;incstack = 0
  5257                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5258                           ;sprintf@sp stored from wreg
  5259  0028  0020               	movlb	0	; select bank0
  5260  0029  00B2               	movwf	sprintf@sp
  5261  002A                     l2509:
  5262                           
  5263                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  5264  002A  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  5265  002B  00A6               	movwf	??_sprintf
  5266  002C  0826               	movf	??_sprintf,w
  5267  002D  00AB               	movwf	sprintf@ap
  5268                           
  5269                           ;doprnt.c: 553: while((c = *f++)) {
  5270  002E  2A26               	goto	l2637
  5271  002F                     l2511:
  5272                           
  5273                           ;doprnt.c: 555: if(c != '%')
  5274  002F  3025               	movlw	37
  5275  0030  0633               	xorwf	sprintf@c,w
  5276  0031  1903               	btfsc	3,2
  5277  0032  2834               	goto	u2491
  5278  0033  2835               	goto	u2490
  5279  0034                     u2491:
  5280  0034  2841               	goto	l2517
  5281  0035                     u2490:
  5282  0035                     l2513:
  5283                           
  5284                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  5285  0035  0833               	movf	sprintf@c,w
  5286  0036  00A6               	movwf	??_sprintf
  5287  0037  0832               	movf	sprintf@sp,w
  5288  0038  0086               	movwf	6
  5289  0039  0187               	clrf	7
  5290  003A  0826               	movf	??_sprintf,w
  5291  003B  0081               	movwf	1
  5292  003C                     l2515:
  5293  003C  3001               	movlw	1
  5294  003D  00A6               	movwf	??_sprintf
  5295  003E  0826               	movf	??_sprintf,w
  5296  003F  07B2               	addwf	sprintf@sp,f
  5297                           
  5298                           ;doprnt.c: 559: continue;
  5299  0040  2A26               	goto	l2637
  5300  0041                     l2517:
  5301                           
  5302                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  5303  0041  01B0               	clrf	sprintf@width
  5304  0042  01B1               	clrf	sprintf@width+1
  5305                           
  5306                           ;doprnt.c: 565: flag = 0;
  5307  0043  01AF               	clrf	sprintf@flag
  5308  0044  284A               	goto	l2523
  5309  0045                     l795:	
  5310                           ;doprnt.c: 596: case '0':
  5311                           
  5312                           
  5313                           ;doprnt.c: 597: flag |= 0x04;
  5314  0045  152F               	bsf	sprintf@flag,2
  5315  0046                     l2519:
  5316                           
  5317                           ;doprnt.c: 598: f++;
  5318  0046  3001               	movlw	1
  5319  0047  07A0               	addwf	sprintf@f,f
  5320  0048  3000               	movlw	0
  5321  0049  3DA1               	addwfc	sprintf@f+1,f
  5322  004A                     l2523:	
  5323                           ;doprnt.c: 599: continue;
  5324                           
  5325  004A  0820               	movf	sprintf@f,w
  5326  004B  0084               	movwf	4
  5327  004C  0821               	movf	sprintf@f+1,w
  5328  004D  0085               	movwf	5
  5329  004E  0800               	movf	0,w	;code access
  5330                           
  5331                           ; Switch size 1, requested type "simple"
  5332                           ; Number of cases is 1, Range of values is 48 to 48
  5333                           ; switch strategies available:
  5334                           ; Name         Instructions Cycles
  5335                           ; simple_byte            4     3 (average)
  5336                           ; direct_byte           11     9 (fixed)
  5337                           ; jumptable            263     9 (fixed)
  5338                           ;	Chosen strategy is simple_byte
  5339  004F  3A30               	xorlw	48	; case 48
  5340  0050  1903               	skipnz
  5341  0051  2845               	goto	l795
  5342  0052  2853               	goto	l2525
  5343  0053                     l2525:
  5344                           
  5345                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  5346  0053  0820               	movf	sprintf@f,w
  5347  0054  0084               	movwf	4
  5348  0055  0821               	movf	sprintf@f+1,w
  5349  0056  0085               	movwf	5
  5350  0057  0800               	movf	0,w	;code access
  5351  0058  318F  279A  3180   	fcall	_isdigit
  5352  005B  1C03               	btfss	3,0
  5353  005C  285E               	goto	u2501
  5354  005D  285F               	goto	u2500
  5355  005E                     u2501:
  5356  005E  2895               	goto	l2539
  5357  005F                     u2500:
  5358  005F                     l2527:
  5359                           
  5360                           ;doprnt.c: 615: width = 0;
  5361  005F  0020               	movlb	0	; select bank0
  5362  0060  01B0               	clrf	sprintf@width
  5363  0061  01B1               	clrf	sprintf@width+1
  5364  0062                     l2529:
  5365                           
  5366                           ;doprnt.c: 617: width *= 10;
  5367  0062  300A               	movlw	10
  5368  0063  00F0               	movwf	___wmul@multiplier
  5369  0064  3000               	movlw	0
  5370  0065  00F1               	movwf	___wmul@multiplier+1
  5371  0066  0020               	movlb	0	; select bank0
  5372  0067  0831               	movf	sprintf@width+1,w
  5373  0068  00F3               	movwf	___wmul@multiplicand+1
  5374  0069  0830               	movf	sprintf@width,w
  5375  006A  00F2               	movwf	___wmul@multiplicand
  5376  006B  318F  27E1  3180   	fcall	___wmul
  5377  006E  0871               	movf	?___wmul+1,w
  5378  006F  0020               	movlb	0	; select bank0
  5379  0070  00B1               	movwf	sprintf@width+1
  5380  0071  0870               	movf	?___wmul,w
  5381  0072  00B0               	movwf	sprintf@width
  5382  0073                     l2531:
  5383                           
  5384                           ;doprnt.c: 618: width += *f++ - '0';
  5385  0073  0820               	movf	sprintf@f,w
  5386  0074  0084               	movwf	4
  5387  0075  0821               	movf	sprintf@f+1,w
  5388  0076  0085               	movwf	5
  5389  0077  0800               	movf	0,w	;code access
  5390  0078  3ED0               	addlw	208
  5391  0079  00A6               	movwf	??_sprintf
  5392  007A  30FF               	movlw	255
  5393  007B  1803               	skipnc
  5394  007C  3000               	movlw	0
  5395  007D  00A7               	movwf	??_sprintf+1
  5396  007E  0826               	movf	??_sprintf,w
  5397  007F  07B0               	addwf	sprintf@width,f
  5398  0080  0827               	movf	??_sprintf+1,w
  5399  0081  3DB1               	addwfc	sprintf@width+1,f
  5400  0082                     l2533:
  5401  0082  3001               	movlw	1
  5402  0083  07A0               	addwf	sprintf@f,f
  5403  0084  3000               	movlw	0
  5404  0085  3DA1               	addwfc	sprintf@f+1,f
  5405  0086                     l2535:
  5406                           
  5407                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  5408  0086  0820               	movf	sprintf@f,w
  5409  0087  0084               	movwf	4
  5410  0088  0821               	movf	sprintf@f+1,w
  5411  0089  0085               	movwf	5
  5412  008A  0800               	movf	0,w	;code access
  5413  008B  318F  279A  3180   	fcall	_isdigit
  5414  008E  1803               	btfsc	3,0
  5415  008F  2891               	goto	u2511
  5416  0090  2892               	goto	u2510
  5417  0091                     u2511:
  5418  0091  2862               	goto	l2529
  5419  0092                     u2510:
  5420  0092  2895               	goto	l2539
  5421  0093                     l808:	
  5422                           ;doprnt.c: 744: case 'x':
  5423                           
  5424                           
  5425                           ;doprnt.c: 747: flag |= 0x80;
  5426  0093  17AF               	bsf	sprintf@flag,7
  5427                           
  5428                           ;doprnt.c: 749: break;
  5429  0094  28B0               	goto	l807
  5430  0095                     l2539:
  5431  0095  0020               	movlb	0	; select bank0
  5432  0096  0821               	movf	sprintf@f+1,w
  5433  0097  00A7               	movwf	??_sprintf+1
  5434  0098  0820               	movf	sprintf@f,w
  5435  0099  00A6               	movwf	??_sprintf
  5436  009A  0AA0               	incf	sprintf@f,f
  5437  009B  1903               	skipnz
  5438  009C  0AA1               	incf	sprintf@f+1,f
  5439  009D  0826               	movf	??_sprintf,w
  5440  009E  0084               	movwf	4
  5441  009F  0827               	movf	??_sprintf+1,w
  5442  00A0  0085               	movwf	5
  5443  00A1  0800               	movf	0,w	;code access
  5444  00A2  00B3               	movwf	sprintf@c
  5445                           
  5446                           ; Switch size 1, requested type "simple"
  5447                           ; Number of cases is 4, Range of values is 0 to 120
  5448                           ; switch strategies available:
  5449                           ; Name         Instructions Cycles
  5450                           ; simple_byte           13     7 (average)
  5451                           ; direct_byte          248     6 (fixed)
  5452                           ; jumptable            260     6 (fixed)
  5453                           ;	Chosen strategy is simple_byte
  5454  00A3  3A00               	xorlw	0	; case 0
  5455  00A4  1903               	skipnz
  5456  00A5  2A3A               	goto	l2639
  5457  00A6  3A64               	xorlw	100	; case 100
  5458  00A7  1903               	skipnz
  5459  00A8  28B0               	goto	l807
  5460  00A9  3A0D               	xorlw	13	; case 105
  5461  00AA  1903               	skipnz
  5462  00AB  28B0               	goto	l807
  5463  00AC  3A11               	xorlw	17	; case 120
  5464  00AD  1903               	skipnz
  5465  00AE  2893               	goto	l808
  5466  00AF  2A26               	goto	l2637
  5467  00B0                     l807:
  5468                           
  5469                           ;doprnt.c: 1277: if((flag & 0x80) == 0x00)
  5470  00B0  1BAF               	btfsc	sprintf@flag,7
  5471  00B1  28B3               	goto	u2521
  5472  00B2  28B4               	goto	u2520
  5473  00B3                     u2521:
  5474  00B3  28CD               	goto	l2551
  5475  00B4                     u2520:
  5476  00B4                     l2541:
  5477                           
  5478                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  5479  00B4  082B               	movf	sprintf@ap,w
  5480  00B5  0086               	movwf	6
  5481  00B6  0187               	clrf	7
  5482  00B7  3F40               	moviw [0]fsr1
  5483  00B8  00AD               	movwf	sprintf@val
  5484  00B9  3F41               	moviw [1]fsr1
  5485  00BA  00AE               	movwf	sprintf@val+1
  5486  00BB                     l2543:
  5487  00BB  3002               	movlw	2
  5488  00BC  00A6               	movwf	??_sprintf
  5489  00BD  0826               	movf	??_sprintf,w
  5490  00BE  07AB               	addwf	sprintf@ap,f
  5491  00BF                     l2545:
  5492                           
  5493                           ;doprnt.c: 1287: if((int)val < 0) {
  5494  00BF  1FAE               	btfss	sprintf@val+1,7
  5495  00C0  28C2               	goto	u2531
  5496  00C1  28C3               	goto	u2530
  5497  00C2                     u2531:
  5498  00C2  2927               	goto	l2577
  5499  00C3                     u2530:
  5500  00C3                     l2547:
  5501                           
  5502                           ;doprnt.c: 1288: flag |= 0x03;
  5503  00C3  3003               	movlw	3
  5504  00C4  00A6               	movwf	??_sprintf
  5505  00C5  0826               	movf	??_sprintf,w
  5506  00C6  04AF               	iorwf	sprintf@flag,f
  5507  00C7                     l2549:
  5508                           
  5509                           ;doprnt.c: 1289: val = -val;
  5510  00C7  09AD               	comf	sprintf@val,f
  5511  00C8  09AE               	comf	sprintf@val+1,f
  5512  00C9  0AAD               	incf	sprintf@val,f
  5513  00CA  1903               	skipnz
  5514  00CB  0AAE               	incf	sprintf@val+1,f
  5515  00CC  2927               	goto	l2577
  5516  00CD                     l2551:
  5517                           
  5518                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  5519  00CD  082B               	movf	sprintf@ap,w
  5520  00CE  0086               	movwf	6
  5521  00CF  0187               	clrf	7
  5522  00D0  3F40               	moviw [0]fsr1
  5523  00D1  00AD               	movwf	sprintf@val
  5524  00D2  3F41               	moviw [1]fsr1
  5525  00D3  00AE               	movwf	sprintf@val+1
  5526  00D4                     l2553:
  5527  00D4  3002               	movlw	2
  5528  00D5  00A6               	movwf	??_sprintf
  5529  00D6  0826               	movf	??_sprintf,w
  5530  00D7  07AB               	addwf	sprintf@ap,f
  5531  00D8  2927               	goto	l2577
  5532  00D9                     l814:	
  5533                           ;doprnt.c: 1325: case 0x00:
  5534                           
  5535                           
  5536                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5537  00D9  01B3               	clrf	sprintf@c
  5538  00DA  0AB3               	incf	sprintf@c,f
  5539  00DB                     l2559:
  5540                           
  5541                           ;doprnt.c: 1332: if(val < dpowers[c])
  5542  00DB  0833               	movf	sprintf@c,w
  5543  00DC  00A6               	movwf	??_sprintf
  5544  00DD  01A7               	clrf	??_sprintf+1
  5545  00DE  35A6               	lslf	??_sprintf,f
  5546  00DF  0DA7               	rlf	??_sprintf+1,f
  5547  00E0  3024               	movlw	low (_dpowers| (0+32768))
  5548  00E1  0726               	addwf	??_sprintf,w
  5549  00E2  0084               	movwf	4
  5550  00E3  3090               	movlw	high (_dpowers| (0+32768))
  5551  00E4  3D27               	addwfc	??_sprintf+1,w
  5552  00E5  0085               	movwf	5
  5553  00E6  3F00               	moviw [0]fsr0
  5554  00E7  00A8               	movwf	??_sprintf+2
  5555  00E8  3F01               	moviw [1]fsr0
  5556  00E9  00A9               	movwf	??_sprintf+3
  5557  00EA  0829               	movf	??_sprintf+3,w
  5558  00EB  022E               	subwf	sprintf@val+1,w
  5559  00EC  1D03               	skipz
  5560  00ED  28F0               	goto	u2545
  5561  00EE  0828               	movf	??_sprintf+2,w
  5562  00EF  022D               	subwf	sprintf@val,w
  5563  00F0                     u2545:
  5564  00F0  1803               	skipnc
  5565  00F1  28F3               	goto	u2541
  5566  00F2  28F4               	goto	u2540
  5567  00F3                     u2541:
  5568  00F3  28F5               	goto	l2563
  5569  00F4                     u2540:
  5570  00F4  2930               	goto	l2579
  5571  00F5                     l2563:
  5572  00F5  3001               	movlw	1
  5573  00F6  00A6               	movwf	??_sprintf
  5574  00F7  0826               	movf	??_sprintf,w
  5575  00F8  07B3               	addwf	sprintf@c,f
  5576  00F9  3005               	movlw	5
  5577  00FA  0633               	xorwf	sprintf@c,w
  5578  00FB  1D03               	btfss	3,2
  5579  00FC  28FE               	goto	u2551
  5580  00FD  28FF               	goto	u2550
  5581  00FE                     u2551:
  5582  00FE  28DB               	goto	l2559
  5583  00FF                     u2550:
  5584  00FF  2930               	goto	l2579
  5585  0100                     l819:	
  5586                           ;doprnt.c: 1340: case 0x80:
  5587                           
  5588                           
  5589                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5590  0100  01B3               	clrf	sprintf@c
  5591  0101  0AB3               	incf	sprintf@c,f
  5592  0102                     l2569:
  5593                           
  5594                           ;doprnt.c: 1343: if(val < hexpowers[c])
  5595  0102  0833               	movf	sprintf@c,w
  5596  0103  00A6               	movwf	??_sprintf
  5597  0104  01A7               	clrf	??_sprintf+1
  5598  0105  35A6               	lslf	??_sprintf,f
  5599  0106  0DA7               	rlf	??_sprintf+1,f
  5600  0107  3000               	movlw	low (_hexpowers| (0+32768))
  5601  0108  0726               	addwf	??_sprintf,w
  5602  0109  0084               	movwf	4
  5603  010A  3090               	movlw	high (_hexpowers| (0+32768))
  5604  010B  3D27               	addwfc	??_sprintf+1,w
  5605  010C  0085               	movwf	5
  5606  010D  3F00               	moviw [0]fsr0
  5607  010E  00A8               	movwf	??_sprintf+2
  5608  010F  3F01               	moviw [1]fsr0
  5609  0110  00A9               	movwf	??_sprintf+3
  5610  0111  0829               	movf	??_sprintf+3,w
  5611  0112  022E               	subwf	sprintf@val+1,w
  5612  0113  1D03               	skipz
  5613  0114  2917               	goto	u2565
  5614  0115  0828               	movf	??_sprintf+2,w
  5615  0116  022D               	subwf	sprintf@val,w
  5616  0117                     u2565:
  5617  0117  1803               	skipnc
  5618  0118  291A               	goto	u2561
  5619  0119  291B               	goto	u2560
  5620  011A                     u2561:
  5621  011A  291C               	goto	l2573
  5622  011B                     u2560:
  5623  011B  2930               	goto	l2579
  5624  011C                     l2573:
  5625  011C  3001               	movlw	1
  5626  011D  00A6               	movwf	??_sprintf
  5627  011E  0826               	movf	??_sprintf,w
  5628  011F  07B3               	addwf	sprintf@c,f
  5629  0120  3004               	movlw	4
  5630  0121  0633               	xorwf	sprintf@c,w
  5631  0122  1D03               	btfss	3,2
  5632  0123  2925               	goto	u2571
  5633  0124  2926               	goto	u2570
  5634  0125                     u2571:
  5635  0125  2902               	goto	l2569
  5636  0126                     u2570:
  5637  0126  2930               	goto	l2579
  5638  0127                     l2577:
  5639  0127  082F               	movf	sprintf@flag,w
  5640  0128  3980               	andlw	128
  5641                           
  5642                           ; Switch size 1, requested type "simple"
  5643                           ; Number of cases is 2, Range of values is 0 to 128
  5644                           ; switch strategies available:
  5645                           ; Name         Instructions Cycles
  5646                           ; simple_byte            7     4 (average)
  5647                           ; jumptable            260     6 (fixed)
  5648                           ;	Chosen strategy is simple_byte
  5649  0129  3A00               	xorlw	0	; case 0
  5650  012A  1903               	skipnz
  5651  012B  28D9               	goto	l814
  5652  012C  3A80               	xorlw	128	; case 128
  5653  012D  1903               	skipnz
  5654  012E  2900               	goto	l819
  5655  012F  2930               	goto	l2579
  5656  0130                     l2579:
  5657                           
  5658                           ;doprnt.c: 1371: if(width && flag & 0x03)
  5659  0130  0830               	movf	sprintf@width,w
  5660  0131  0431               	iorwf	sprintf@width+1,w
  5661  0132  1903               	btfsc	3,2
  5662  0133  2935               	goto	u2581
  5663  0134  2936               	goto	u2580
  5664  0135                     u2581:
  5665  0135  2940               	goto	l823
  5666  0136                     u2580:
  5667  0136                     l2581:
  5668  0136  082F               	movf	sprintf@flag,w
  5669  0137  3903               	andlw	3
  5670  0138  1903               	btfsc	3,2
  5671  0139  293B               	goto	u2591
  5672  013A  293C               	goto	u2590
  5673  013B                     u2591:
  5674  013B  2940               	goto	l823
  5675  013C                     u2590:
  5676  013C                     l2583:
  5677                           
  5678                           ;doprnt.c: 1372: width--;
  5679  013C  30FF               	movlw	255
  5680  013D  07B0               	addwf	sprintf@width,f
  5681  013E  30FF               	movlw	255
  5682  013F  3DB1               	addwfc	sprintf@width+1,f
  5683  0140                     l823:
  5684                           
  5685                           ;doprnt.c: 1407: if(width > c)
  5686  0140  0831               	movf	sprintf@width+1,w
  5687  0141  3A80               	xorlw	128
  5688  0142  3C80               	sublw	128
  5689  0143  1D03               	skipz
  5690  0144  2947               	goto	u2605
  5691  0145  0830               	movf	sprintf@width,w
  5692  0146  0233               	subwf	sprintf@c,w
  5693  0147                     u2605:
  5694  0147  1803               	skipnc
  5695  0148  294A               	goto	u2601
  5696  0149  294B               	goto	u2600
  5697  014A                     u2601:
  5698  014A  2954               	goto	l2587
  5699  014B                     u2600:
  5700  014B                     l2585:
  5701                           
  5702                           ;doprnt.c: 1408: width -= c;
  5703  014B  0020               	movlb	0	; select bank0
  5704  014C  0833               	movf	sprintf@c,w
  5705  014D  00A6               	movwf	??_sprintf
  5706  014E  01A7               	clrf	??_sprintf+1
  5707  014F  0826               	movf	??_sprintf,w
  5708  0150  02B0               	subwf	sprintf@width,f
  5709  0151  0827               	movf	??_sprintf+1,w
  5710  0152  3BB1               	subwfb	sprintf@width+1,f
  5711  0153  2957               	goto	l2589
  5712  0154                     l2587:
  5713                           
  5714                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  5715  0154  0020               	movlb	0	; select bank0
  5716  0155  01B0               	clrf	sprintf@width
  5717  0156  01B1               	clrf	sprintf@width+1
  5718  0157                     l2589:
  5719                           
  5720                           ;doprnt.c: 1413: if(flag & 0x04) {
  5721  0157  1D2F               	btfss	sprintf@flag,2
  5722  0158  295A               	goto	u2611
  5723  0159  295B               	goto	u2610
  5724  015A                     u2611:
  5725  015A  2988               	goto	l2605
  5726  015B                     u2610:
  5727  015B                     l2591:
  5728                           
  5729                           ;doprnt.c: 1418: if(flag & 0x03)
  5730  015B  082F               	movf	sprintf@flag,w
  5731  015C  3903               	andlw	3
  5732  015D  1903               	btfsc	3,2
  5733  015E  2960               	goto	u2621
  5734  015F  2961               	goto	u2620
  5735  0160                     u2621:
  5736  0160  296C               	goto	l2597
  5737  0161                     u2620:
  5738  0161                     l2593:
  5739                           
  5740                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  5741  0161  302D               	movlw	45
  5742  0162  00A6               	movwf	??_sprintf
  5743  0163  0832               	movf	sprintf@sp,w
  5744  0164  0086               	movwf	6
  5745  0165  0187               	clrf	7
  5746  0166  0826               	movf	??_sprintf,w
  5747  0167  0081               	movwf	1
  5748  0168                     l2595:
  5749  0168  3001               	movlw	1
  5750  0169  00A6               	movwf	??_sprintf
  5751  016A  0826               	movf	??_sprintf,w
  5752  016B  07B2               	addwf	sprintf@sp,f
  5753  016C                     l2597:
  5754                           
  5755                           ;doprnt.c: 1441: if(width)
  5756  016C  0830               	movf	sprintf@width,w
  5757  016D  0431               	iorwf	sprintf@width+1,w
  5758  016E  1903               	btfsc	3,2
  5759  016F  2971               	goto	u2631
  5760  0170  2972               	goto	u2630
  5761  0171                     u2631:
  5762  0171  29B4               	goto	l2619
  5763  0172                     u2630:
  5764  0172                     l2599:
  5765                           
  5766                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  5767  0172  3030               	movlw	48
  5768  0173  00A6               	movwf	??_sprintf
  5769  0174  0832               	movf	sprintf@sp,w
  5770  0175  0086               	movwf	6
  5771  0176  0187               	clrf	7
  5772  0177  0826               	movf	??_sprintf,w
  5773  0178  0081               	movwf	1
  5774  0179                     l2601:
  5775  0179  3001               	movlw	1
  5776  017A  00A6               	movwf	??_sprintf
  5777  017B  0826               	movf	??_sprintf,w
  5778  017C  07B2               	addwf	sprintf@sp,f
  5779  017D                     l2603:
  5780                           
  5781                           ;doprnt.c: 1444: while(--width);
  5782  017D  30FF               	movlw	255
  5783  017E  07B0               	addwf	sprintf@width,f
  5784  017F  30FF               	movlw	255
  5785  0180  3DB1               	addwfc	sprintf@width+1,f
  5786  0181  0830               	movf	sprintf@width,w
  5787  0182  0431               	iorwf	sprintf@width+1,w
  5788  0183  1D03               	btfss	3,2
  5789  0184  2986               	goto	u2641
  5790  0185  2987               	goto	u2640
  5791  0186                     u2641:
  5792  0186  2972               	goto	l2599
  5793  0187                     u2640:
  5794  0187  29B4               	goto	l2619
  5795  0188                     l2605:
  5796                           
  5797                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  5798  0188  0830               	movf	sprintf@width,w
  5799  0189  0431               	iorwf	sprintf@width+1,w
  5800  018A  1903               	btfsc	3,2
  5801  018B  298D               	goto	u2651
  5802  018C  298E               	goto	u2650
  5803  018D                     u2651:
  5804  018D  29A3               	goto	l2613
  5805  018E                     u2650:
  5806  018E                     l2607:
  5807                           
  5808                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  5809  018E  3020               	movlw	32
  5810  018F  00A6               	movwf	??_sprintf
  5811  0190  0832               	movf	sprintf@sp,w
  5812  0191  0086               	movwf	6
  5813  0192  0187               	clrf	7
  5814  0193  0826               	movf	??_sprintf,w
  5815  0194  0081               	movwf	1
  5816  0195                     l2609:
  5817  0195  3001               	movlw	1
  5818  0196  00A6               	movwf	??_sprintf
  5819  0197  0826               	movf	??_sprintf,w
  5820  0198  07B2               	addwf	sprintf@sp,f
  5821  0199                     l2611:
  5822                           
  5823                           ;doprnt.c: 1457: while(--width);
  5824  0199  30FF               	movlw	255
  5825  019A  07B0               	addwf	sprintf@width,f
  5826  019B  30FF               	movlw	255
  5827  019C  3DB1               	addwfc	sprintf@width+1,f
  5828  019D  0830               	movf	sprintf@width,w
  5829  019E  0431               	iorwf	sprintf@width+1,w
  5830  019F  1D03               	btfss	3,2
  5831  01A0  29A2               	goto	u2661
  5832  01A1  29A3               	goto	u2660
  5833  01A2                     u2661:
  5834  01A2  298E               	goto	l2607
  5835  01A3                     u2660:
  5836  01A3                     l2613:
  5837                           
  5838                           ;doprnt.c: 1464: if(flag & 0x03)
  5839  01A3  082F               	movf	sprintf@flag,w
  5840  01A4  3903               	andlw	3
  5841  01A5  1903               	btfsc	3,2
  5842  01A6  29A8               	goto	u2671
  5843  01A7  29A9               	goto	u2670
  5844  01A8                     u2671:
  5845  01A8  29B4               	goto	l2619
  5846  01A9                     u2670:
  5847  01A9                     l2615:
  5848                           
  5849                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  5850  01A9  302D               	movlw	45
  5851  01AA  00A6               	movwf	??_sprintf
  5852  01AB  0832               	movf	sprintf@sp,w
  5853  01AC  0086               	movwf	6
  5854  01AD  0187               	clrf	7
  5855  01AE  0826               	movf	??_sprintf,w
  5856  01AF  0081               	movwf	1
  5857  01B0                     l2617:
  5858  01B0  3001               	movlw	1
  5859  01B1  00A6               	movwf	??_sprintf
  5860  01B2  0826               	movf	??_sprintf,w
  5861  01B3  07B2               	addwf	sprintf@sp,f
  5862  01B4                     l2619:
  5863                           
  5864                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  5865  01B4  0833               	movf	sprintf@c,w
  5866  01B5  00A6               	movwf	??_sprintf
  5867  01B6  0826               	movf	??_sprintf,w
  5868  01B7  00AC               	movwf	sprintf@prec
  5869                           
  5870                           ;doprnt.c: 1500: while(prec--) {
  5871  01B8  2A1D               	goto	l2635
  5872  01B9                     l2621:
  5873                           
  5874                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  5875  01B9  300A               	movlw	10
  5876  01BA  00F8               	movwf	___lwmod@divisor
  5877  01BB  3000               	movlw	0
  5878  01BC  00F9               	movwf	___lwmod@divisor+1
  5879  01BD  082C               	movf	sprintf@prec,w
  5880  01BE  00A6               	movwf	??_sprintf
  5881  01BF  01A7               	clrf	??_sprintf+1
  5882  01C0  35A6               	lslf	??_sprintf,f
  5883  01C1  0DA7               	rlf	??_sprintf+1,f
  5884  01C2  3024               	movlw	low (_dpowers| (0+32768))
  5885  01C3  0726               	addwf	??_sprintf,w
  5886  01C4  0084               	movwf	4
  5887  01C5  3090               	movlw	high (_dpowers| (0+32768))
  5888  01C6  3D27               	addwfc	??_sprintf+1,w
  5889  01C7  0085               	movwf	5
  5890  01C8  3F00               	moviw [0]fsr0
  5891  01C9  00F0               	movwf	___lwdiv@divisor
  5892  01CA  3F01               	moviw [1]fsr0
  5893  01CB  00F1               	movwf	___lwdiv@divisor+1
  5894  01CC  082E               	movf	sprintf@val+1,w
  5895  01CD  00F3               	movwf	___lwdiv@dividend+1
  5896  01CE  082D               	movf	sprintf@val,w
  5897  01CF  00F2               	movwf	___lwdiv@dividend
  5898  01D0  3187  2744  3180   	fcall	___lwdiv
  5899  01D3  0871               	movf	?___lwdiv+1,w
  5900  01D4  00FB               	movwf	___lwmod@dividend+1
  5901  01D5  0870               	movf	?___lwdiv,w
  5902  01D6  00FA               	movwf	___lwmod@dividend
  5903  01D7  3187  27BB  3180   	fcall	___lwmod
  5904  01DA  0878               	movf	?___lwmod,w
  5905  01DB  3E30               	addlw	48
  5906  01DC  0020               	movlb	0	; select bank0
  5907  01DD  00A8               	movwf	??_sprintf+2
  5908  01DE  0828               	movf	??_sprintf+2,w
  5909  01DF  00B3               	movwf	sprintf@c
  5910                           
  5911                           ;doprnt.c: 1517: break;
  5912  01E0  2A12               	goto	l2631
  5913  01E1                     l2623:
  5914                           
  5915                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned char)p
      +                          rec]) & 0xF;
  5916  01E1  082C               	movf	sprintf@prec,w
  5917  01E2  00A6               	movwf	??_sprintf
  5918  01E3  01A7               	clrf	??_sprintf+1
  5919  01E4  35A6               	lslf	??_sprintf,f
  5920  01E5  0DA7               	rlf	??_sprintf+1,f
  5921  01E6  3000               	movlw	low (_hexpowers| (0+32768))
  5922  01E7  0726               	addwf	??_sprintf,w
  5923  01E8  0084               	movwf	4
  5924  01E9  3090               	movlw	high (_hexpowers| (0+32768))
  5925  01EA  3D27               	addwfc	??_sprintf+1,w
  5926  01EB  0085               	movwf	5
  5927  01EC  3F00               	moviw [0]fsr0
  5928  01ED  00F0               	movwf	___lwdiv@divisor
  5929  01EE  3F01               	moviw [1]fsr0
  5930  01EF  00F1               	movwf	___lwdiv@divisor+1
  5931  01F0  082E               	movf	sprintf@val+1,w
  5932  01F1  00F3               	movwf	___lwdiv@dividend+1
  5933  01F2  082D               	movf	sprintf@val,w
  5934  01F3  00F2               	movwf	___lwdiv@dividend
  5935  01F4  3187  2744  3180   	fcall	___lwdiv
  5936  01F7  0870               	movf	?___lwdiv,w
  5937  01F8  390F               	andlw	15
  5938  01F9  0020               	movlb	0	; select bank0
  5939  01FA  00A8               	movwf	??_sprintf+2
  5940  01FB  0828               	movf	??_sprintf+2,w
  5941  01FC  00AA               	movwf	sprintf@idx
  5942  01FD                     l2625:
  5943                           
  5944                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  5945  01FD  082A               	movf	sprintf@idx,w
  5946  01FE  3E08               	addlw	low (STR_6| (0+32768))
  5947  01FF  0084               	movwf	4
  5948  0200  3090               	movlw	high (STR_6| (0+32768))
  5949  0201  1803               	skipnc
  5950  0202  3E01               	addlw	1
  5951  0203  0085               	movwf	5
  5952  0204  0800               	movf	0,w	;code access
  5953  0205  00A6               	movwf	??_sprintf
  5954  0206  0826               	movf	??_sprintf,w
  5955  0207  00B3               	movwf	sprintf@c
  5956                           
  5957                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  5958  0208  2A12               	goto	l2631
  5959  0209                     l2629:
  5960  0209  082F               	movf	sprintf@flag,w
  5961  020A  3980               	andlw	128
  5962                           
  5963                           ; Switch size 1, requested type "simple"
  5964                           ; Number of cases is 2, Range of values is 0 to 128
  5965                           ; switch strategies available:
  5966                           ; Name         Instructions Cycles
  5967                           ; simple_byte            7     4 (average)
  5968                           ; jumptable            260     6 (fixed)
  5969                           ;	Chosen strategy is simple_byte
  5970  020B  3A00               	xorlw	0	; case 0
  5971  020C  1903               	skipnz
  5972  020D  29B9               	goto	l2621
  5973  020E  3A80               	xorlw	128	; case 128
  5974  020F  1903               	skipnz
  5975  0210  29E1               	goto	l2623
  5976  0211  2A12               	goto	l2631
  5977  0212                     l2631:
  5978                           
  5979                           ;doprnt.c: 1550: ((*sp++ = (c)));
  5980  0212  0833               	movf	sprintf@c,w
  5981  0213  00A6               	movwf	??_sprintf
  5982  0214  0832               	movf	sprintf@sp,w
  5983  0215  0086               	movwf	6
  5984  0216  0187               	clrf	7
  5985  0217  0826               	movf	??_sprintf,w
  5986  0218  0081               	movwf	1
  5987  0219                     l2633:
  5988  0219  3001               	movlw	1
  5989  021A  00A6               	movwf	??_sprintf
  5990  021B  0826               	movf	??_sprintf,w
  5991  021C  07B2               	addwf	sprintf@sp,f
  5992  021D                     l2635:
  5993  021D  30FF               	movlw	255
  5994  021E  00A6               	movwf	??_sprintf
  5995  021F  0826               	movf	??_sprintf,w
  5996  0220  07AC               	addwf	sprintf@prec,f
  5997  0221  0A2C               	incf	sprintf@prec,w
  5998  0222  1D03               	btfss	3,2
  5999  0223  2A25               	goto	u2681
  6000  0224  2A26               	goto	u2680
  6001  0225                     u2681:
  6002  0225  2A09               	goto	l2629
  6003  0226                     u2680:
  6004  0226                     l2637:
  6005  0226  0821               	movf	sprintf@f+1,w
  6006  0227  00A7               	movwf	??_sprintf+1
  6007  0228  0820               	movf	sprintf@f,w
  6008  0229  00A6               	movwf	??_sprintf
  6009  022A  0AA0               	incf	sprintf@f,f
  6010  022B  1903               	skipnz
  6011  022C  0AA1               	incf	sprintf@f+1,f
  6012  022D  0826               	movf	??_sprintf,w
  6013  022E  0084               	movwf	4
  6014  022F  0827               	movf	??_sprintf+1,w
  6015  0230  0085               	movwf	5
  6016  0231  0800               	movf	0,w	;code access
  6017  0232  00A8               	movwf	??_sprintf+2
  6018  0233  0828               	movf	??_sprintf+2,w
  6019  0234  00B3               	movwf	sprintf@c
  6020  0235  0833               	movf	sprintf@c,w
  6021  0236  1D03               	btfss	3,2
  6022  0237  2A39               	goto	u2691
  6023  0238  2A3A               	goto	u2690
  6024  0239                     u2691:
  6025  0239  282F               	goto	l2511
  6026  023A                     u2690:
  6027  023A                     l2639:
  6028                           
  6029                           ;doprnt.c: 1564: *sp = 0;
  6030  023A  0832               	movf	sprintf@sp,w
  6031  023B  0086               	movwf	6
  6032  023C  0187               	clrf	7
  6033  023D  0181               	clrf	1
  6034  023E                     l844:
  6035  023E  0008               	return
  6036  023F                     __end_of_sprintf:
  6037                           
  6038                           	psect	text3
  6039  0F9A                     __ptext3:	
  6040 ;; *************** function _isdigit *****************
  6041 ;; Defined at:
  6042 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  c               1    wreg     unsigned char 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  c               1    1[COMMON] unsigned char 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;		None               void
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6059 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;Total ram usage:        2 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    1
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_sprintf
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           
  6071                           ;psect for function _isdigit
  6072  0F9A                     _isdigit:
  6073                           
  6074                           ;incstack = 0
  6075                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6076                           ;isdigit@c stored from wreg
  6077  0F9A  00F1               	movwf	isdigit@c
  6078  0F9B                     l2257:
  6079  0F9B  01F0               	clrf	_isdigit$1607
  6080  0F9C                     l2259:
  6081  0F9C  303A               	movlw	58
  6082  0F9D  0271               	subwf	isdigit@c,w
  6083  0F9E  1803               	skipnc
  6084  0F9F  2FA1               	goto	u1761
  6085  0FA0  2FA2               	goto	u1760
  6086  0FA1                     u1761:
  6087  0FA1  2FAA               	goto	l2265
  6088  0FA2                     u1760:
  6089  0FA2                     l2261:
  6090  0FA2  3030               	movlw	48
  6091  0FA3  0271               	subwf	isdigit@c,w
  6092  0FA4  1C03               	skipc
  6093  0FA5  2FA7               	goto	u1771
  6094  0FA6  2FA8               	goto	u1770
  6095  0FA7                     u1771:
  6096  0FA7  2FAA               	goto	l2265
  6097  0FA8                     u1770:
  6098  0FA8                     l2263:
  6099  0FA8  01F0               	clrf	_isdigit$1607
  6100  0FA9  0AF0               	incf	_isdigit$1607,f
  6101  0FAA                     l2265:
  6102  0FAA  0C70               	rrf	_isdigit$1607,w
  6103  0FAB                     l1301:
  6104  0FAB  0008               	return
  6105  0FAC                     __end_of_isdigit:
  6106                           
  6107                           	psect	text4
  6108  0FE1                     __ptext4:	
  6109 ;; *************** function ___wmul *****************
  6110 ;; Defined at:
  6111 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;  multiplier      2    0[COMMON] unsigned int 
  6114 ;;  multiplicand    2    2[COMMON] unsigned int 
  6115 ;; Auto vars:     Size  Location     Type
  6116 ;;  product         2    4[COMMON] unsigned int 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  2    0[COMMON] unsigned int 
  6119 ;; Registers used:
  6120 ;;		wreg, status,2, status,0
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6129 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6130 ;;Total ram usage:        6 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; Hardware stack levels required when called:    1
  6133 ;; This function calls:
  6134 ;;		Nothing
  6135 ;; This function is called by:
  6136 ;;		_sprintf
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           
  6141                           ;psect for function ___wmul
  6142  0FE1                     ___wmul:
  6143  0FE1                     l2269:	
  6144                           ;incstack = 0
  6145                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6146                           
  6147  0FE1  01F4               	clrf	___wmul@product
  6148  0FE2  01F5               	clrf	___wmul@product+1
  6149  0FE3                     l2271:
  6150  0FE3  1C70               	btfss	___wmul@multiplier,0
  6151  0FE4  2FE6               	goto	u1781
  6152  0FE5  2FE7               	goto	u1780
  6153  0FE6                     u1781:
  6154  0FE6  2FEB               	goto	l848
  6155  0FE7                     u1780:
  6156  0FE7                     l2273:
  6157  0FE7  0872               	movf	___wmul@multiplicand,w
  6158  0FE8  07F4               	addwf	___wmul@product,f
  6159  0FE9  0873               	movf	___wmul@multiplicand+1,w
  6160  0FEA  3DF5               	addwfc	___wmul@product+1,f
  6161  0FEB                     l848:
  6162  0FEB  3001               	movlw	1
  6163  0FEC                     u1795:
  6164  0FEC  35F2               	lslf	___wmul@multiplicand,f
  6165  0FED  0DF3               	rlf	___wmul@multiplicand+1,f
  6166  0FEE  0B89               	decfsz	9,f
  6167  0FEF  2FEC               	goto	u1795
  6168  0FF0                     l2275:
  6169  0FF0  3001               	movlw	1
  6170  0FF1                     u1805:
  6171  0FF1  36F1               	lsrf	___wmul@multiplier+1,f
  6172  0FF2  0CF0               	rrf	___wmul@multiplier,f
  6173  0FF3  0B89               	decfsz	9,f
  6174  0FF4  2FF1               	goto	u1805
  6175  0FF5                     l2277:
  6176  0FF5  0870               	movf	___wmul@multiplier,w
  6177  0FF6  0471               	iorwf	___wmul@multiplier+1,w
  6178  0FF7  1D03               	btfss	3,2
  6179  0FF8  2FFA               	goto	u1811
  6180  0FF9  2FFB               	goto	u1810
  6181  0FFA                     u1811:
  6182  0FFA  2FE3               	goto	l2271
  6183  0FFB                     u1810:
  6184  0FFB                     l2279:
  6185  0FFB  0875               	movf	___wmul@product+1,w
  6186  0FFC  00F1               	movwf	?___wmul+1
  6187  0FFD  0874               	movf	___wmul@product,w
  6188  0FFE  00F0               	movwf	?___wmul
  6189  0FFF                     l850:
  6190  0FFF  0008               	return
  6191  1000                     __end_of___wmul:
  6192                           
  6193                           	psect	text5
  6194  07BB                     __ptext5:	
  6195 ;; *************** function ___lwmod *****************
  6196 ;; Defined at:
  6197 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;  divisor         2    8[COMMON] unsigned int 
  6200 ;;  dividend        2   10[COMMON] unsigned int 
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;  counter         1   13[COMMON] unsigned char 
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  2    8[COMMON] unsigned int 
  6205 ;; Registers used:
  6206 ;;		wreg, status,2, status,0
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6216 ;;Total ram usage:        6 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:    1
  6219 ;; This function calls:
  6220 ;;		Nothing
  6221 ;; This function is called by:
  6222 ;;		_sprintf
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           
  6227                           ;psect for function ___lwmod
  6228  07BB                     ___lwmod:
  6229  07BB                     l2309:	
  6230                           ;incstack = 0
  6231                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6232                           
  6233  07BB  0878               	movf	___lwmod@divisor,w
  6234  07BC  0479               	iorwf	___lwmod@divisor+1,w
  6235  07BD  1903               	btfsc	3,2
  6236  07BE  2FC0               	goto	u1891
  6237  07BF  2FC1               	goto	u1890
  6238  07C0                     u1891:
  6239  07C0  2FEA               	goto	l2327
  6240  07C1                     u1890:
  6241  07C1                     l2311:
  6242  07C1  01FD               	clrf	___lwmod@counter
  6243  07C2  0AFD               	incf	___lwmod@counter,f
  6244  07C3  2FCD               	goto	l2317
  6245  07C4                     l2313:
  6246  07C4  3001               	movlw	1
  6247  07C5                     u1905:
  6248  07C5  35F8               	lslf	___lwmod@divisor,f
  6249  07C6  0DF9               	rlf	___lwmod@divisor+1,f
  6250  07C7  0B89               	decfsz	9,f
  6251  07C8  2FC5               	goto	u1905
  6252  07C9                     l2315:
  6253  07C9  3001               	movlw	1
  6254  07CA  00FC               	movwf	??___lwmod
  6255  07CB  087C               	movf	??___lwmod,w
  6256  07CC  07FD               	addwf	___lwmod@counter,f
  6257  07CD                     l2317:
  6258  07CD  1FF9               	btfss	___lwmod@divisor+1,7
  6259  07CE  2FD0               	goto	u1911
  6260  07CF  2FD1               	goto	u1910
  6261  07D0                     u1911:
  6262  07D0  2FC4               	goto	l2313
  6263  07D1                     u1910:
  6264  07D1                     l2319:
  6265  07D1  0879               	movf	___lwmod@divisor+1,w
  6266  07D2  027B               	subwf	___lwmod@dividend+1,w
  6267  07D3  1D03               	skipz
  6268  07D4  2FD7               	goto	u1925
  6269  07D5  0878               	movf	___lwmod@divisor,w
  6270  07D6  027A               	subwf	___lwmod@dividend,w
  6271  07D7                     u1925:
  6272  07D7  1C03               	skipc
  6273  07D8  2FDA               	goto	u1921
  6274  07D9  2FDB               	goto	u1920
  6275  07DA                     u1921:
  6276  07DA  2FDF               	goto	l2323
  6277  07DB                     u1920:
  6278  07DB                     l2321:
  6279  07DB  0878               	movf	___lwmod@divisor,w
  6280  07DC  02FA               	subwf	___lwmod@dividend,f
  6281  07DD  0879               	movf	___lwmod@divisor+1,w
  6282  07DE  3BFB               	subwfb	___lwmod@dividend+1,f
  6283  07DF                     l2323:
  6284  07DF  3001               	movlw	1
  6285  07E0                     u1935:
  6286  07E0  36F9               	lsrf	___lwmod@divisor+1,f
  6287  07E1  0CF8               	rrf	___lwmod@divisor,f
  6288  07E2  0B89               	decfsz	9,f
  6289  07E3  2FE0               	goto	u1935
  6290  07E4                     l2325:
  6291  07E4  3001               	movlw	1
  6292  07E5  02FD               	subwf	___lwmod@counter,f
  6293  07E6  1D03               	btfss	3,2
  6294  07E7  2FE9               	goto	u1941
  6295  07E8  2FEA               	goto	u1940
  6296  07E9                     u1941:
  6297  07E9  2FD1               	goto	l2319
  6298  07EA                     u1940:
  6299  07EA                     l2327:
  6300  07EA  087B               	movf	___lwmod@dividend+1,w
  6301  07EB  00F9               	movwf	?___lwmod+1
  6302  07EC  087A               	movf	___lwmod@dividend,w
  6303  07ED  00F8               	movwf	?___lwmod
  6304  07EE                     l1130:
  6305  07EE  0008               	return
  6306  07EF                     __end_of___lwmod:
  6307                           
  6308                           	psect	text6
  6309  0744                     __ptext6:	
  6310 ;; *************** function ___lwdiv *****************
  6311 ;; Defined at:
  6312 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;  divisor         2    0[COMMON] unsigned int 
  6315 ;;  dividend        2    2[COMMON] unsigned int 
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  quotient        2    5[COMMON] unsigned int 
  6318 ;;  counter         1    7[COMMON] unsigned char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  2    0[COMMON] unsigned int 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6331 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;Total ram usage:        8 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    1
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_sprintf
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           
  6343                           ;psect for function ___lwdiv
  6344  0744                     ___lwdiv:
  6345  0744                     l2283:	
  6346                           ;incstack = 0
  6347                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6348                           
  6349  0744  01F5               	clrf	___lwdiv@quotient
  6350  0745  01F6               	clrf	___lwdiv@quotient+1
  6351  0746                     l2285:
  6352  0746  0870               	movf	___lwdiv@divisor,w
  6353  0747  0471               	iorwf	___lwdiv@divisor+1,w
  6354  0748  1903               	btfsc	3,2
  6355  0749  2F4B               	goto	u1821
  6356  074A  2F4C               	goto	u1820
  6357  074B                     u1821:
  6358  074B  2F7B               	goto	l2305
  6359  074C                     u1820:
  6360  074C                     l2287:
  6361  074C  01F7               	clrf	___lwdiv@counter
  6362  074D  0AF7               	incf	___lwdiv@counter,f
  6363  074E  2F58               	goto	l2293
  6364  074F                     l2289:
  6365  074F  3001               	movlw	1
  6366  0750                     u1835:
  6367  0750  35F0               	lslf	___lwdiv@divisor,f
  6368  0751  0DF1               	rlf	___lwdiv@divisor+1,f
  6369  0752  0B89               	decfsz	9,f
  6370  0753  2F50               	goto	u1835
  6371  0754                     l2291:
  6372  0754  3001               	movlw	1
  6373  0755  00F4               	movwf	??___lwdiv
  6374  0756  0874               	movf	??___lwdiv,w
  6375  0757  07F7               	addwf	___lwdiv@counter,f
  6376  0758                     l2293:
  6377  0758  1FF1               	btfss	___lwdiv@divisor+1,7
  6378  0759  2F5B               	goto	u1841
  6379  075A  2F5C               	goto	u1840
  6380  075B                     u1841:
  6381  075B  2F4F               	goto	l2289
  6382  075C                     u1840:
  6383  075C                     l2295:
  6384  075C  3001               	movlw	1
  6385  075D                     u1855:
  6386  075D  35F5               	lslf	___lwdiv@quotient,f
  6387  075E  0DF6               	rlf	___lwdiv@quotient+1,f
  6388  075F  0B89               	decfsz	9,f
  6389  0760  2F5D               	goto	u1855
  6390  0761  0871               	movf	___lwdiv@divisor+1,w
  6391  0762  0273               	subwf	___lwdiv@dividend+1,w
  6392  0763  1D03               	skipz
  6393  0764  2F67               	goto	u1865
  6394  0765  0870               	movf	___lwdiv@divisor,w
  6395  0766  0272               	subwf	___lwdiv@dividend,w
  6396  0767                     u1865:
  6397  0767  1C03               	skipc
  6398  0768  2F6A               	goto	u1861
  6399  0769  2F6B               	goto	u1860
  6400  076A                     u1861:
  6401  076A  2F70               	goto	l2301
  6402  076B                     u1860:
  6403  076B                     l2297:
  6404  076B  0870               	movf	___lwdiv@divisor,w
  6405  076C  02F2               	subwf	___lwdiv@dividend,f
  6406  076D  0871               	movf	___lwdiv@divisor+1,w
  6407  076E  3BF3               	subwfb	___lwdiv@dividend+1,f
  6408  076F                     l2299:
  6409  076F  1475               	bsf	___lwdiv@quotient,0
  6410  0770                     l2301:
  6411  0770  3001               	movlw	1
  6412  0771                     u1875:
  6413  0771  36F1               	lsrf	___lwdiv@divisor+1,f
  6414  0772  0CF0               	rrf	___lwdiv@divisor,f
  6415  0773  0B89               	decfsz	9,f
  6416  0774  2F71               	goto	u1875
  6417  0775                     l2303:
  6418  0775  3001               	movlw	1
  6419  0776  02F7               	subwf	___lwdiv@counter,f
  6420  0777  1D03               	btfss	3,2
  6421  0778  2F7A               	goto	u1881
  6422  0779  2F7B               	goto	u1880
  6423  077A                     u1881:
  6424  077A  2F5C               	goto	l2295
  6425  077B                     u1880:
  6426  077B                     l2305:
  6427  077B  0876               	movf	___lwdiv@quotient+1,w
  6428  077C  00F1               	movwf	?___lwdiv+1
  6429  077D  0875               	movf	___lwdiv@quotient,w
  6430  077E  00F0               	movwf	?___lwdiv
  6431  077F                     l1120:
  6432  077F  0008               	return
  6433  0780                     __end_of___lwdiv:
  6434                           
  6435                           	psect	text7
  6436  07EF                     __ptext7:	
  6437 ;; *************** function _i2c1_driver_open *****************
  6438 ;; Defined at:
  6439 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;		None
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;		None
  6444 ;; Return value:  Size  Location     Type
  6445 ;;		None               void
  6446 ;; Registers used:
  6447 ;;		wreg, status,2
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6457 ;;Total ram usage:        0 bytes
  6458 ;; Hardware stack levels used:    1
  6459 ;; Hardware stack levels required when called:    1
  6460 ;; This function calls:
  6461 ;;		Nothing
  6462 ;; This function is called by:
  6463 ;;		_main
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           
  6468                           ;psect for function _i2c1_driver_open
  6469  07EF                     _i2c1_driver_open:
  6470  07EF                     l2337:	
  6471                           ;incstack = 0
  6472                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  6473                           
  6474                           
  6475                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  6476  07EF  0023               	movlb	3	; select bank3
  6477  07F0  1A90               	btfsc	16,5	;volatile
  6478  07F1  2FF3               	goto	u1951
  6479  07F2  2FF4               	goto	u1950
  6480  07F3                     u1951:
  6481  07F3  2FFA               	goto	l225
  6482  07F4                     u1950:
  6483  07F4                     l2339:
  6484                           
  6485                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
  6486  07F4  018F               	clrf	15	;volatile
  6487  07F5                     l2341:
  6488                           
  6489                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  6490  07F5  3028               	movlw	40
  6491  07F6  0090               	movwf	16	;volatile
  6492  07F7                     l2343:
  6493                           
  6494                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  6495  07F7  0191               	clrf	17	;volatile
  6496                           
  6497                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
  6498  07F8  3003               	movlw	3
  6499  07F9  008D               	movwf	13	;volatile
  6500  07FA                     l225:
  6501  07FA  0008               	return
  6502  07FB                     __end_of_i2c1_driver_open:
  6503                           
  6504                           	psect	text8
  6505  0F90                     __ptext8:	
  6506 ;; *************** function _SYSTEM_Initialize *****************
  6507 ;; Defined at:
  6508 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;		None
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;		None
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  1    wreg      void 
  6515 ;; Registers used:
  6516 ;;		wreg, status,2, status,0, pclath, cstack
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6526 ;;Total ram usage:        0 bytes
  6527 ;; Hardware stack levels used:    1
  6528 ;; Hardware stack levels required when called:    2
  6529 ;; This function calls:
  6530 ;;		_OSCILLATOR_Initialize
  6531 ;;		_PIN_MANAGER_Initialize
  6532 ;;		_PMD_Initialize
  6533 ;; This function is called by:
  6534 ;;		_main
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538                           
  6539                           ;psect for function _SYSTEM_Initialize
  6540  0F90                     _SYSTEM_Initialize:
  6541  0F90                     l2331:	
  6542                           ;incstack = 0
  6543                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6544                           
  6545                           
  6546                           ;mcc.c: 52: PMD_Initialize();
  6547  0F90  318F  277F  318F   	fcall	_PMD_Initialize
  6548  0F93                     l2333:
  6549                           
  6550                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  6551  0F93  3187  2780  318F   	fcall	_PIN_MANAGER_Initialize
  6552  0F96                     l2335:
  6553                           
  6554                           ;mcc.c: 54: OSCILLATOR_Initialize();
  6555  0F96  318F  2787  318F   	fcall	_OSCILLATOR_Initialize
  6556  0F99                     l158:
  6557  0F99  0008               	return
  6558  0F9A                     __end_of_SYSTEM_Initialize:
  6559                           
  6560                           	psect	text9
  6561  0F7F                     __ptext9:	
  6562 ;; *************** function _PMD_Initialize *****************
  6563 ;; Defined at:
  6564 ;;		line 71 in file "mcc_generated_files/mcc.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;		None
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;		None
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  1    wreg      void 
  6571 ;; Registers used:
  6572 ;;		status,2
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;Total ram usage:        0 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; Hardware stack levels required when called:    1
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_SYSTEM_Initialize
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           
  6593                           ;psect for function _PMD_Initialize
  6594  0F7F                     _PMD_Initialize:
  6595  0F7F                     l2231:	
  6596                           ;incstack = 0
  6597                           ; Regs used in _PMD_Initialize: [status,2]
  6598                           
  6599                           
  6600                           ;mcc.c: 74: PMD0 = 0x00;
  6601  0F7F  002F               	movlb	15	; select bank15
  6602  0F80  0196               	clrf	22	;volatile
  6603                           
  6604                           ;mcc.c: 76: PMD1 = 0x00;
  6605  0F81  0197               	clrf	23	;volatile
  6606                           
  6607                           ;mcc.c: 78: PMD2 = 0x00;
  6608  0F82  0198               	clrf	24	;volatile
  6609                           
  6610                           ;mcc.c: 80: PMD3 = 0x00;
  6611  0F83  0199               	clrf	25	;volatile
  6612                           
  6613                           ;mcc.c: 82: PMD4 = 0x00;
  6614  0F84  019A               	clrf	26	;volatile
  6615                           
  6616                           ;mcc.c: 84: PMD5 = 0x00;
  6617  0F85  019B               	clrf	27	;volatile
  6618  0F86                     l164:
  6619  0F86  0008               	return
  6620  0F87                     __end_of_PMD_Initialize:
  6621                           
  6622                           	psect	text10
  6623  0780                     __ptext10:	
  6624 ;; *************** function _PIN_MANAGER_Initialize *****************
  6625 ;; Defined at:
  6626 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;		None
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;		None
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  1    wreg      void 
  6633 ;; Registers used:
  6634 ;;		wreg, status,2
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6644 ;;Total ram usage:        0 bytes
  6645 ;; Hardware stack levels used:    1
  6646 ;; Hardware stack levels required when called:    1
  6647 ;; This function calls:
  6648 ;;		Nothing
  6649 ;; This function is called by:
  6650 ;;		_SYSTEM_Initialize
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           
  6655                           ;psect for function _PIN_MANAGER_Initialize
  6656  0780                     _PIN_MANAGER_Initialize:
  6657  0780                     l2191:	
  6658                           ;incstack = 0
  6659                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6660                           
  6661                           
  6662                           ;pin_manager.c: 62: LATE = 0x00;
  6663  0780  0020               	movlb	0	; select bank0
  6664  0781  019A               	clrf	26	;volatile
  6665                           
  6666                           ;pin_manager.c: 63: LATD = 0x00;
  6667  0782  0199               	clrf	25	;volatile
  6668                           
  6669                           ;pin_manager.c: 64: LATA = 0x00;
  6670  0783  0196               	clrf	22	;volatile
  6671                           
  6672                           ;pin_manager.c: 65: LATB = 0x00;
  6673  0784  0197               	clrf	23	;volatile
  6674                           
  6675                           ;pin_manager.c: 66: LATC = 0x00;
  6676  0785  0198               	clrf	24	;volatile
  6677  0786                     l2193:
  6678                           
  6679                           ;pin_manager.c: 71: TRISE = 0x07;
  6680  0786  3007               	movlw	7
  6681  0787  0095               	movwf	21	;volatile
  6682  0788                     l2195:
  6683                           
  6684                           ;pin_manager.c: 72: TRISA = 0xFF;
  6685  0788  30FF               	movlw	255
  6686  0789  0091               	movwf	17	;volatile
  6687  078A                     l2197:
  6688                           
  6689                           ;pin_manager.c: 73: TRISB = 0xFF;
  6690  078A  30FF               	movlw	255
  6691  078B  0092               	movwf	18	;volatile
  6692  078C                     l2199:
  6693                           
  6694                           ;pin_manager.c: 74: TRISC = 0xFF;
  6695  078C  30FF               	movlw	255
  6696  078D  0093               	movwf	19	;volatile
  6697  078E                     l2201:
  6698                           
  6699                           ;pin_manager.c: 75: TRISD = 0xFF;
  6700  078E  30FF               	movlw	255
  6701  078F  0094               	movwf	20	;volatile
  6702  0790                     l2203:
  6703                           
  6704                           ;pin_manager.c: 80: ANSELD = 0xFF;
  6705  0790  30FF               	movlw	255
  6706  0791  003E               	movlb	30	; select bank30
  6707  0792  00D9               	movwf	89	;volatile
  6708  0793                     l2205:
  6709                           
  6710                           ;pin_manager.c: 81: ANSELC = 0xE7;
  6711  0793  30E7               	movlw	231
  6712  0794  00CE               	movwf	78	;volatile
  6713  0795                     l2207:
  6714                           
  6715                           ;pin_manager.c: 82: ANSELB = 0xFF;
  6716  0795  30FF               	movlw	255
  6717  0796  00C3               	movwf	67	;volatile
  6718  0797                     l2209:
  6719                           
  6720                           ;pin_manager.c: 83: ANSELE = 0x07;
  6721  0797  3007               	movlw	7
  6722  0798  00E4               	movwf	100	;volatile
  6723  0799                     l2211:
  6724                           
  6725                           ;pin_manager.c: 84: ANSELA = 0xFF;
  6726  0799  30FF               	movlw	255
  6727  079A  00B8               	movwf	56	;volatile
  6728                           
  6729                           ;pin_manager.c: 89: WPUD = 0x00;
  6730  079B  01DA               	clrf	90	;volatile
  6731                           
  6732                           ;pin_manager.c: 90: WPUE = 0x00;
  6733  079C  01E5               	clrf	101	;volatile
  6734                           
  6735                           ;pin_manager.c: 91: WPUB = 0x00;
  6736  079D  01C4               	clrf	68	;volatile
  6737                           
  6738                           ;pin_manager.c: 92: WPUA = 0x00;
  6739  079E  01B9               	clrf	57	;volatile
  6740                           
  6741                           ;pin_manager.c: 93: WPUC = 0x00;
  6742  079F  01CF               	clrf	79	;volatile
  6743                           
  6744                           ;pin_manager.c: 98: ODCONE = 0x00;
  6745  07A0  01E6               	clrf	102	;volatile
  6746                           
  6747                           ;pin_manager.c: 99: ODCONA = 0x00;
  6748  07A1  01BA               	clrf	58	;volatile
  6749                           
  6750                           ;pin_manager.c: 100: ODCONB = 0x00;
  6751  07A2  01C5               	clrf	69	;volatile
  6752                           
  6753                           ;pin_manager.c: 101: ODCONC = 0x00;
  6754  07A3  01D0               	clrf	80	;volatile
  6755                           
  6756                           ;pin_manager.c: 102: ODCOND = 0x00;
  6757  07A4  01DB               	clrf	91	;volatile
  6758  07A5                     l2213:
  6759                           
  6760                           ;pin_manager.c: 107: SLRCONA = 0xFF;
  6761  07A5  30FF               	movlw	255
  6762  07A6  00BB               	movwf	59	;volatile
  6763  07A7                     l2215:
  6764                           
  6765                           ;pin_manager.c: 108: SLRCONB = 0xFF;
  6766  07A7  30FF               	movlw	255
  6767  07A8  00C6               	movwf	70	;volatile
  6768  07A9                     l2217:
  6769                           
  6770                           ;pin_manager.c: 109: SLRCONC = 0xFF;
  6771  07A9  30FF               	movlw	255
  6772  07AA  00D1               	movwf	81	;volatile
  6773  07AB                     l2219:
  6774                           
  6775                           ;pin_manager.c: 110: SLRCOND = 0xFF;
  6776  07AB  30FF               	movlw	255
  6777  07AC  00DC               	movwf	92	;volatile
  6778  07AD                     l2221:
  6779                           
  6780                           ;pin_manager.c: 111: SLRCONE = 0x07;
  6781  07AD  3007               	movlw	7
  6782  07AE  00E7               	movwf	103	;volatile
  6783  07AF                     l2223:
  6784                           
  6785                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
  6786  07AF  3013               	movlw	19
  6787  07B0  003D               	movlb	29	; select bank29
  6788  07B1  00C5               	movwf	69	;volatile
  6789  07B2                     l2225:
  6790                           
  6791                           ;pin_manager.c: 121: RC3PPS = 0x14;
  6792  07B2  3014               	movlw	20
  6793  07B3  003E               	movlb	30	; select bank30
  6794  07B4  00A3               	movwf	35	;volatile
  6795  07B5                     l2227:
  6796                           
  6797                           ;pin_manager.c: 122: RC4PPS = 0x15;
  6798  07B5  3015               	movlw	21
  6799  07B6  00A4               	movwf	36	;volatile
  6800  07B7                     l2229:
  6801                           
  6802                           ;pin_manager.c: 123: SSP1DATPPS = 0x14;
  6803  07B7  3014               	movlw	20
  6804  07B8  003D               	movlb	29	; select bank29
  6805  07B9  00C6               	movwf	70	;volatile
  6806  07BA                     l120:
  6807  07BA  0008               	return
  6808  07BB                     __end_of_PIN_MANAGER_Initialize:
  6809                           
  6810                           	psect	text11
  6811  0F87                     __ptext11:	
  6812 ;; *************** function _OSCILLATOR_Initialize *****************
  6813 ;; Defined at:
  6814 ;;		line 57 in file "mcc_generated_files/mcc.c"
  6815 ;; Parameters:    Size  Location     Type
  6816 ;;		None
  6817 ;; Auto vars:     Size  Location     Type
  6818 ;;		None
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  1    wreg      void 
  6821 ;; Registers used:
  6822 ;;		wreg, status,2
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6832 ;;Total ram usage:        0 bytes
  6833 ;; Hardware stack levels used:    1
  6834 ;; Hardware stack levels required when called:    1
  6835 ;; This function calls:
  6836 ;;		Nothing
  6837 ;; This function is called by:
  6838 ;;		_SYSTEM_Initialize
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           
  6843                           ;psect for function _OSCILLATOR_Initialize
  6844  0F87                     _OSCILLATOR_Initialize:
  6845  0F87                     l2233:	
  6846                           ;incstack = 0
  6847                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6848                           
  6849                           
  6850                           ;mcc.c: 60: OSCCON1 = 0x62;
  6851  0F87  3062               	movlw	98
  6852  0F88  0031               	movlb	17	; select bank17
  6853  0F89  008D               	movwf	13	;volatile
  6854  0F8A                     l2235:
  6855                           
  6856                           ;mcc.c: 62: OSCCON3 = 0x00;
  6857  0F8A  018F               	clrf	15	;volatile
  6858  0F8B                     l2237:
  6859                           
  6860                           ;mcc.c: 64: OSCEN = 0x00;
  6861  0F8B  0191               	clrf	17	;volatile
  6862                           
  6863                           ;mcc.c: 66: OSCFRQ = 0x02;
  6864  0F8C  3002               	movlw	2
  6865  0F8D  0093               	movwf	19	;volatile
  6866  0F8E                     l2239:
  6867                           
  6868                           ;mcc.c: 68: OSCTUNE = 0x00;
  6869  0F8E  0192               	clrf	18	;volatile
  6870  0F8F                     l161:
  6871  0F8F  0008               	return
  6872  0F90                     __end_of_OSCILLATOR_Initialize:
  6873                           
  6874                           	psect	text12
  6875  0FC6                     __ptext12:	
  6876 ;; *************** function _LCDstr *****************
  6877 ;; Defined at:
  6878 ;;		line 185 in file "main.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  p               2    9[COMMON] PTR unsigned char 
  6881 ;;		 -> main@buf(17), STR_1(5), 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  c               1    0[BANK0 ] unsigned char 
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  1    wreg      void 
  6886 ;; Registers used:
  6887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6895 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6896 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6897 ;;Total ram usage:        6 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; Hardware stack levels required when called:    4
  6900 ;; This function calls:
  6901 ;;		_LCDchar
  6902 ;; This function is called by:
  6903 ;;		_main
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           
  6908                           ;psect for function _LCDstr
  6909  0FC6                     _LCDstr:
  6910  0FC6                     l2503:	
  6911                           ;incstack = 0
  6912                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6913                           
  6914                           
  6915                           ;main.c: 187: unsigned char c;;main.c: 189: while((c = *p++)) LCDchar(c);
  6916  0FC6  2FCB               	goto	l2507
  6917  0FC7                     l2505:
  6918  0FC7  0820               	movf	LCDstr@c,w
  6919  0FC8  318F  2777  318F   	fcall	_LCDchar
  6920  0FCB                     l2507:
  6921  0FCB  087A               	movf	LCDstr@p+1,w
  6922  0FCC  00FC               	movwf	??_LCDstr+1
  6923  0FCD  0879               	movf	LCDstr@p,w
  6924  0FCE  00FB               	movwf	??_LCDstr
  6925  0FCF  0AF9               	incf	LCDstr@p,f
  6926  0FD0  1903               	skipnz
  6927  0FD1  0AFA               	incf	LCDstr@p+1,f
  6928  0FD2  087B               	movf	??_LCDstr,w
  6929  0FD3  0084               	movwf	4
  6930  0FD4  087C               	movf	??_LCDstr+1,w
  6931  0FD5  0085               	movwf	5
  6932  0FD6  0800               	movf	0,w	;code access
  6933  0FD7  00FD               	movwf	??_LCDstr+2
  6934  0FD8  087D               	movf	??_LCDstr+2,w
  6935  0FD9  0020               	movlb	0	; select bank0
  6936  0FDA  00A0               	movwf	LCDstr@c
  6937  0FDB  0820               	movf	LCDstr@c,w
  6938  0FDC  1D03               	btfss	3,2
  6939  0FDD  2FDF               	goto	u2481
  6940  0FDE  2FE0               	goto	u2480
  6941  0FDF                     u2481:
  6942  0FDF  2FC7               	goto	l2505
  6943  0FE0                     u2480:
  6944  0FE0                     l596:
  6945  0FE0  0008               	return
  6946  0FE1                     __end_of_LCDstr:
  6947                           
  6948                           	psect	text13
  6949  0F77                     __ptext13:	
  6950 ;; *************** function _LCDchar *****************
  6951 ;; Defined at:
  6952 ;;		line 180 in file "main.c"
  6953 ;; Parameters:    Size  Location     Type
  6954 ;;  c               1    wreg     unsigned char 
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;  c               1    8[COMMON] unsigned char 
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  1    wreg      void 
  6959 ;; Registers used:
  6960 ;;		wreg, status,2, status,0, pclath, cstack
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6969 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6970 ;;Total ram usage:        1 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; Hardware stack levels required when called:    3
  6973 ;; This function calls:
  6974 ;;		_LCDsend2x4
  6975 ;; This function is called by:
  6976 ;;		_LCDstr
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           
  6981                           ;psect for function _LCDchar
  6982  0F77                     _LCDchar:
  6983                           
  6984                           ;incstack = 0
  6985                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
  6986                           ;LCDchar@c stored from wreg
  6987  0F77  00F8               	movwf	LCDchar@c
  6988  0F78                     l2255:
  6989                           
  6990                           ;main.c: 182: LCDsend2x4(c, 0x01);
  6991  0F78  01F2               	clrf	LCDsend2x4@mode
  6992  0F79  0AF2               	incf	LCDsend2x4@mode,f
  6993  0F7A  0878               	movf	LCDchar@c,w
  6994  0F7B  3185  2592  318F   	fcall	_LCDsend2x4
  6995  0F7E                     l590:
  6996  0F7E  0008               	return
  6997  0F7F                     __end_of_LCDchar:
  6998                           
  6999                           	psect	text14
  7000  023F                     __ptext14:	
  7001 ;; *************** function _LCDrecv *****************
  7002 ;; Defined at:
  7003 ;;		line 98 in file "main.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  mode            1    wreg     unsigned char 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  mode            1    6[COMMON] unsigned char 
  7008 ;;  lc              1    5[COMMON] unsigned char 
  7009 ;;  hc              1    4[COMMON] unsigned char 
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1    wreg      unsigned char 
  7012 ;; Registers used:
  7013 ;;		wreg, status,2, status,0, pclath, cstack
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7020 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7022 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7023 ;;Total ram usage:        5 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; Hardware stack levels required when called:    2
  7026 ;; This function calls:
  7027 ;;		_ReadI2C
  7028 ;;		_WriteI2C
  7029 ;; This function is called by:
  7030 ;;		_main
  7031 ;;		_LCDbusy
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           
  7036                           ;psect for function _LCDrecv
  7037  023F                     _LCDrecv:
  7038                           
  7039                           ;incstack = 0
  7040                           ; Regs used in _LCDrecv: [wreg+status,2+status,0+pclath+cstack]
  7041                           ;LCDrecv@mode stored from wreg
  7042  023F  00F6               	movwf	LCDrecv@mode
  7043  0240                     l2401:
  7044  0240                     l2403:	
  7045                           ;main.c: 100: unsigned char hc;;main.c: 101: unsigned char lc;;main.c: 103: while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
  7046                           
  7047  0240  0023               	movlb	3	; select bank3
  7048  0241  0C0F               	rrf	15,w	;volatile
  7049  0242  0C89               	rrf	9,f
  7050  0243  3901               	andlw	1
  7051  0244  00F2               	movwf	??_LCDrecv
  7052  0245  0811               	movf	17,w	;volatile
  7053  0246  391F               	andlw	31
  7054  0247  0472               	iorwf	??_LCDrecv,w
  7055  0248  1D03               	btfss	3,2
  7056  0249  2A4B               	goto	u2211
  7057  024A  2A4C               	goto	u2210
  7058  024B                     u2211:
  7059  024B  2A40               	goto	l2403
  7060  024C                     u2210:
  7061  024C                     l469:
  7062                           
  7063                           ;main.c: 104: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  7064  024C  1411               	bsf	17,0	;volatile
  7065  024D                     l470:
  7066  024D  1811               	btfsc	17,0	;volatile
  7067  024E  2A50               	goto	u2221
  7068  024F  2A51               	goto	u2220
  7069  0250                     u2221:
  7070  0250  2A4D               	goto	l470
  7071  0251                     u2220:
  7072  0251                     l2405:
  7073  0251  0C0F               	rrf	15,w	;volatile
  7074  0252  0C89               	rrf	9,f
  7075  0253  3901               	andlw	1
  7076  0254  00F2               	movwf	??_LCDrecv
  7077  0255  0811               	movf	17,w	;volatile
  7078  0256  391F               	andlw	31
  7079  0257  0472               	iorwf	??_LCDrecv,w
  7080  0258  1D03               	btfss	3,2
  7081  0259  2A5B               	goto	u2231
  7082  025A  2A5C               	goto	u2230
  7083  025B                     u2231:
  7084  025B  2A51               	goto	l2405
  7085  025C                     u2230:
  7086  025C                     l2407:
  7087                           
  7088                           ;main.c: 105: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7089  025C  304E               	movlw	78
  7090  025D  3186  26B6  3182   	fcall	_WriteI2C
  7091  0260                     l2409:
  7092  0260  0023               	movlb	3	; select bank3
  7093  0261  0C0F               	rrf	15,w	;volatile
  7094  0262  0C89               	rrf	9,f
  7095  0263  3901               	andlw	1
  7096  0264  00F2               	movwf	??_LCDrecv
  7097  0265  0811               	movf	17,w	;volatile
  7098  0266  391F               	andlw	31
  7099  0267  0472               	iorwf	??_LCDrecv,w
  7100  0268  1D03               	btfss	3,2
  7101  0269  2A6B               	goto	u2241
  7102  026A  2A6C               	goto	u2240
  7103  026B                     u2241:
  7104  026B  2A60               	goto	l2409
  7105  026C                     u2240:
  7106  026C                     l2411:
  7107                           
  7108                           ;main.c: 106: WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATb
      +                          its.R_W));
  7109  026C  0876               	movf	LCDrecv@mode,w
  7110  026D  38FA               	iorlw	250
  7111  026E  3186  26B6  3182   	fcall	_WriteI2C
  7112  0271                     l2413:
  7113  0271  0023               	movlb	3	; select bank3
  7114  0272  0C0F               	rrf	15,w	;volatile
  7115  0273  0C89               	rrf	9,f
  7116  0274  3901               	andlw	1
  7117  0275  00F2               	movwf	??_LCDrecv
  7118  0276  0811               	movf	17,w	;volatile
  7119  0277  391F               	andlw	31
  7120  0278  0472               	iorwf	??_LCDrecv,w
  7121  0279  1D03               	btfss	3,2
  7122  027A  2A7C               	goto	u2251
  7123  027B  2A7D               	goto	u2250
  7124  027C                     u2251:
  7125  027C  2A71               	goto	l2413
  7126  027D                     u2250:
  7127  027D                     l2415:
  7128                           
  7129                           ;main.c: 107: WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  7130  027D  0876               	movf	LCDrecv@mode,w
  7131  027E  38FE               	iorlw	254
  7132  027F  3186  26B6  3182   	fcall	_WriteI2C
  7133  0282                     l2417:
  7134  0282  0023               	movlb	3	; select bank3
  7135  0283  0C0F               	rrf	15,w	;volatile
  7136  0284  0C89               	rrf	9,f
  7137  0285  3901               	andlw	1
  7138  0286  00F2               	movwf	??_LCDrecv
  7139  0287  0811               	movf	17,w	;volatile
  7140  0288  391F               	andlw	31
  7141  0289  0472               	iorwf	??_LCDrecv,w
  7142  028A  1D03               	btfss	3,2
  7143  028B  2A8D               	goto	u2261
  7144  028C  2A8E               	goto	u2260
  7145  028D                     u2261:
  7146  028D  2A82               	goto	l2417
  7147  028E                     u2260:
  7148  028E                     l484:
  7149                           
  7150                           ;main.c: 108: _delay((unsigned long)((1)*(1000000/4000000.0)));
  7151                           ;main.c: 109: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  7152  028E  0023               	movlb	3	; select bank3
  7153  028F  1491               	bsf	17,1	;volatile
  7154  0290                     l485:
  7155  0290  1891               	btfsc	17,1	;volatile
  7156  0291  2A93               	goto	u2271
  7157  0292  2A94               	goto	u2270
  7158  0293                     u2271:
  7159  0293  2A90               	goto	l485
  7160  0294                     u2270:
  7161  0294                     l2419:
  7162  0294  0C0F               	rrf	15,w	;volatile
  7163  0295  0C89               	rrf	9,f
  7164  0296  3901               	andlw	1
  7165  0297  00F2               	movwf	??_LCDrecv
  7166  0298  0811               	movf	17,w	;volatile
  7167  0299  391F               	andlw	31
  7168  029A  0472               	iorwf	??_LCDrecv,w
  7169  029B  1D03               	btfss	3,2
  7170  029C  2A9E               	goto	u2281
  7171  029D  2A9F               	goto	u2280
  7172  029E                     u2281:
  7173  029E  2A94               	goto	l2419
  7174  029F                     u2280:
  7175  029F                     l2421:
  7176                           
  7177                           ;main.c: 110: WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7178  029F  304F               	movlw	79
  7179  02A0  3186  26B6  3182   	fcall	_WriteI2C
  7180  02A3                     l2423:
  7181  02A3  0023               	movlb	3	; select bank3
  7182  02A4  0C0F               	rrf	15,w	;volatile
  7183  02A5  0C89               	rrf	9,f
  7184  02A6  3901               	andlw	1
  7185  02A7  00F2               	movwf	??_LCDrecv
  7186  02A8  0811               	movf	17,w	;volatile
  7187  02A9  391F               	andlw	31
  7188  02AA  0472               	iorwf	??_LCDrecv,w
  7189  02AB  1D03               	btfss	3,2
  7190  02AC  2AAE               	goto	u2291
  7191  02AD  2AAF               	goto	u2290
  7192  02AE                     u2291:
  7193  02AE  2AA3               	goto	l2423
  7194  02AF                     u2290:
  7195  02AF                     l2425:
  7196                           
  7197                           ;main.c: 111: hc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7198  02AF  318F  27AC  3182   	fcall	_ReadI2C
  7199  02B2  00F2               	movwf	??_LCDrecv
  7200  02B3  0872               	movf	??_LCDrecv,w
  7201  02B4  00F4               	movwf	LCDrecv@hc
  7202  02B5                     l2427:
  7203  02B5  0023               	movlb	3	; select bank3
  7204  02B6  0C0F               	rrf	15,w	;volatile
  7205  02B7  0C89               	rrf	9,f
  7206  02B8  3901               	andlw	1
  7207  02B9  00F2               	movwf	??_LCDrecv
  7208  02BA  0811               	movf	17,w	;volatile
  7209  02BB  391F               	andlw	31
  7210  02BC  0472               	iorwf	??_LCDrecv,w
  7211  02BD  1D03               	btfss	3,2
  7212  02BE  2AC0               	goto	u2301
  7213  02BF  2AC1               	goto	u2300
  7214  02C0                     u2301:
  7215  02C0  2AB5               	goto	l2427
  7216  02C1                     u2300:
  7217  02C1                     l496:
  7218                           
  7219                           ;main.c: 112: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  7220  02C1  1691               	bsf	17,5	;volatile
  7221  02C2  1611               	bsf	17,4	;volatile
  7222  02C3                     l497:
  7223  02C3  1A11               	btfsc	17,4	;volatile
  7224  02C4  2AC6               	goto	u2311
  7225  02C5  2AC7               	goto	u2310
  7226  02C6                     u2311:
  7227  02C6  2AC3               	goto	l497
  7228  02C7                     u2310:
  7229  02C7                     l499:
  7230                           
  7231                           ;main.c: 113: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  7232  02C7  1491               	bsf	17,1	;volatile
  7233  02C8                     l500:
  7234  02C8  1891               	btfsc	17,1	;volatile
  7235  02C9  2ACB               	goto	u2321
  7236  02CA  2ACC               	goto	u2320
  7237  02CB                     u2321:
  7238  02CB  2AC8               	goto	l500
  7239  02CC                     u2320:
  7240  02CC                     l2429:
  7241  02CC  0C0F               	rrf	15,w	;volatile
  7242  02CD  0C89               	rrf	9,f
  7243  02CE  3901               	andlw	1
  7244  02CF  00F2               	movwf	??_LCDrecv
  7245  02D0  0811               	movf	17,w	;volatile
  7246  02D1  391F               	andlw	31
  7247  02D2  0472               	iorwf	??_LCDrecv,w
  7248  02D3  1D03               	btfss	3,2
  7249  02D4  2AD6               	goto	u2331
  7250  02D5  2AD7               	goto	u2330
  7251  02D6                     u2331:
  7252  02D6  2ACC               	goto	l2429
  7253  02D7                     u2330:
  7254  02D7                     l2431:
  7255                           
  7256                           ;main.c: 114: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7257  02D7  304E               	movlw	78
  7258  02D8  3186  26B6  3182   	fcall	_WriteI2C
  7259  02DB                     l2433:
  7260  02DB  0023               	movlb	3	; select bank3
  7261  02DC  0C0F               	rrf	15,w	;volatile
  7262  02DD  0C89               	rrf	9,f
  7263  02DE  3901               	andlw	1
  7264  02DF  00F2               	movwf	??_LCDrecv
  7265  02E0  0811               	movf	17,w	;volatile
  7266  02E1  391F               	andlw	31
  7267  02E2  0472               	iorwf	??_LCDrecv,w
  7268  02E3  1D03               	btfss	3,2
  7269  02E4  2AE6               	goto	u2341
  7270  02E5  2AE7               	goto	u2340
  7271  02E6                     u2341:
  7272  02E6  2ADB               	goto	l2433
  7273  02E7                     u2340:
  7274  02E7                     l2435:
  7275                           
  7276                           ;main.c: 115: WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATb
      +                          its.R_W));
  7277  02E7  0876               	movf	LCDrecv@mode,w
  7278  02E8  38FA               	iorlw	250
  7279  02E9  3186  26B6  3182   	fcall	_WriteI2C
  7280  02EC                     l2437:
  7281  02EC  0023               	movlb	3	; select bank3
  7282  02ED  0C0F               	rrf	15,w	;volatile
  7283  02EE  0C89               	rrf	9,f
  7284  02EF  3901               	andlw	1
  7285  02F0  00F2               	movwf	??_LCDrecv
  7286  02F1  0811               	movf	17,w	;volatile
  7287  02F2  391F               	andlw	31
  7288  02F3  0472               	iorwf	??_LCDrecv,w
  7289  02F4  1D03               	btfss	3,2
  7290  02F5  2AF7               	goto	u2351
  7291  02F6  2AF8               	goto	u2350
  7292  02F7                     u2351:
  7293  02F7  2AEC               	goto	l2437
  7294  02F8                     u2350:
  7295  02F8                     l2439:
  7296                           
  7297                           ;main.c: 116: WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  7298  02F8  0876               	movf	LCDrecv@mode,w
  7299  02F9  38FE               	iorlw	254
  7300  02FA  3186  26B6  3182   	fcall	_WriteI2C
  7301  02FD                     l2441:
  7302  02FD  0023               	movlb	3	; select bank3
  7303  02FE  0C0F               	rrf	15,w	;volatile
  7304  02FF  0C89               	rrf	9,f
  7305  0300  3901               	andlw	1
  7306  0301  00F2               	movwf	??_LCDrecv
  7307  0302  0811               	movf	17,w	;volatile
  7308  0303  391F               	andlw	31
  7309  0304  0472               	iorwf	??_LCDrecv,w
  7310  0305  1D03               	btfss	3,2
  7311  0306  2B08               	goto	u2361
  7312  0307  2B09               	goto	u2360
  7313  0308                     u2361:
  7314  0308  2AFD               	goto	l2441
  7315  0309                     u2360:
  7316  0309                     l514:
  7317                           
  7318                           ;main.c: 117: _delay((unsigned long)((1)*(1000000/4000000.0)));
  7319                           ;main.c: 118: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  7320  0309  0023               	movlb	3	; select bank3
  7321  030A  1491               	bsf	17,1	;volatile
  7322  030B                     l515:
  7323  030B  1891               	btfsc	17,1	;volatile
  7324  030C  2B0E               	goto	u2371
  7325  030D  2B0F               	goto	u2370
  7326  030E                     u2371:
  7327  030E  2B0B               	goto	l515
  7328  030F                     u2370:
  7329  030F                     l2443:
  7330  030F  0C0F               	rrf	15,w	;volatile
  7331  0310  0C89               	rrf	9,f
  7332  0311  3901               	andlw	1
  7333  0312  00F2               	movwf	??_LCDrecv
  7334  0313  0811               	movf	17,w	;volatile
  7335  0314  391F               	andlw	31
  7336  0315  0472               	iorwf	??_LCDrecv,w
  7337  0316  1D03               	btfss	3,2
  7338  0317  2B19               	goto	u2381
  7339  0318  2B1A               	goto	u2380
  7340  0319                     u2381:
  7341  0319  2B0F               	goto	l2443
  7342  031A                     u2380:
  7343  031A                     l2445:
  7344                           
  7345                           ;main.c: 119: WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7346  031A  304F               	movlw	79
  7347  031B  3186  26B6  3182   	fcall	_WriteI2C
  7348  031E                     l2447:
  7349  031E  0023               	movlb	3	; select bank3
  7350  031F  0C0F               	rrf	15,w	;volatile
  7351  0320  0C89               	rrf	9,f
  7352  0321  3901               	andlw	1
  7353  0322  00F2               	movwf	??_LCDrecv
  7354  0323  0811               	movf	17,w	;volatile
  7355  0324  391F               	andlw	31
  7356  0325  0472               	iorwf	??_LCDrecv,w
  7357  0326  1D03               	btfss	3,2
  7358  0327  2B29               	goto	u2391
  7359  0328  2B2A               	goto	u2390
  7360  0329                     u2391:
  7361  0329  2B1E               	goto	l2447
  7362  032A                     u2390:
  7363  032A                     l2449:
  7364                           
  7365                           ;main.c: 120: lc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7366  032A  318F  27AC  3182   	fcall	_ReadI2C
  7367  032D  00F2               	movwf	??_LCDrecv
  7368  032E  0872               	movf	??_LCDrecv,w
  7369  032F  00F5               	movwf	LCDrecv@lc
  7370  0330                     l2451:
  7371  0330  0023               	movlb	3	; select bank3
  7372  0331  0C0F               	rrf	15,w	;volatile
  7373  0332  0C89               	rrf	9,f
  7374  0333  3901               	andlw	1
  7375  0334  00F2               	movwf	??_LCDrecv
  7376  0335  0811               	movf	17,w	;volatile
  7377  0336  391F               	andlw	31
  7378  0337  0472               	iorwf	??_LCDrecv,w
  7379  0338  1D03               	btfss	3,2
  7380  0339  2B3B               	goto	u2401
  7381  033A  2B3C               	goto	u2400
  7382  033B                     u2401:
  7383  033B  2B30               	goto	l2451
  7384  033C                     u2400:
  7385  033C                     l526:
  7386                           
  7387                           ;main.c: 121: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  7388  033C  1691               	bsf	17,5	;volatile
  7389  033D  1611               	bsf	17,4	;volatile
  7390  033E                     l527:
  7391  033E  1A11               	btfsc	17,4	;volatile
  7392  033F  2B41               	goto	u2411
  7393  0340  2B42               	goto	u2410
  7394  0341                     u2411:
  7395  0341  2B3E               	goto	l527
  7396  0342                     u2410:
  7397  0342                     l529:
  7398                           
  7399                           ;main.c: 122: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  7400  0342  1491               	bsf	17,1	;volatile
  7401  0343                     l530:
  7402  0343  1891               	btfsc	17,1	;volatile
  7403  0344  2B46               	goto	u2421
  7404  0345  2B47               	goto	u2420
  7405  0346                     u2421:
  7406  0346  2B43               	goto	l530
  7407  0347                     u2420:
  7408  0347                     l2453:
  7409  0347  0C0F               	rrf	15,w	;volatile
  7410  0348  0C89               	rrf	9,f
  7411  0349  3901               	andlw	1
  7412  034A  00F2               	movwf	??_LCDrecv
  7413  034B  0811               	movf	17,w	;volatile
  7414  034C  391F               	andlw	31
  7415  034D  0472               	iorwf	??_LCDrecv,w
  7416  034E  1D03               	btfss	3,2
  7417  034F  2B51               	goto	u2431
  7418  0350  2B52               	goto	u2430
  7419  0351                     u2431:
  7420  0351  2B47               	goto	l2453
  7421  0352                     u2430:
  7422  0352                     l2455:
  7423                           
  7424                           ;main.c: 123: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7425  0352  304E               	movlw	78
  7426  0353  3186  26B6  3182   	fcall	_WriteI2C
  7427  0356                     l2457:
  7428  0356  0023               	movlb	3	; select bank3
  7429  0357  0C0F               	rrf	15,w	;volatile
  7430  0358  0C89               	rrf	9,f
  7431  0359  3901               	andlw	1
  7432  035A  00F2               	movwf	??_LCDrecv
  7433  035B  0811               	movf	17,w	;volatile
  7434  035C  391F               	andlw	31
  7435  035D  0472               	iorwf	??_LCDrecv,w
  7436  035E  1D03               	btfss	3,2
  7437  035F  2B61               	goto	u2441
  7438  0360  2B62               	goto	u2440
  7439  0361                     u2441:
  7440  0361  2B56               	goto	l2457
  7441  0362                     u2440:
  7442  0362                     l2459:
  7443                           
  7444                           ;main.c: 124: WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATb
      +                          its.R_W));
  7445  0362  0876               	movf	LCDrecv@mode,w
  7446  0363  38FA               	iorlw	250
  7447  0364  3186  26B6  3182   	fcall	_WriteI2C
  7448  0367                     l2461:
  7449  0367  0023               	movlb	3	; select bank3
  7450  0368  0C0F               	rrf	15,w	;volatile
  7451  0369  0C89               	rrf	9,f
  7452  036A  3901               	andlw	1
  7453  036B  00F2               	movwf	??_LCDrecv
  7454  036C  0811               	movf	17,w	;volatile
  7455  036D  391F               	andlw	31
  7456  036E  0472               	iorwf	??_LCDrecv,w
  7457  036F  1D03               	btfss	3,2
  7458  0370  2B72               	goto	u2451
  7459  0371  2B73               	goto	u2450
  7460  0372                     u2451:
  7461  0372  2B67               	goto	l2461
  7462  0373                     u2450:
  7463  0373                     l541:
  7464                           
  7465                           ;main.c: 125: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  7466  0373  1511               	bsf	17,2	;volatile
  7467  0374                     l542:
  7468  0374  1911               	btfsc	17,2	;volatile
  7469  0375  2B77               	goto	u2461
  7470  0376  2B78               	goto	u2460
  7471  0377                     u2461:
  7472  0377  2B74               	goto	l542
  7473  0378                     u2460:
  7474  0378                     l2463:
  7475                           
  7476                           ;main.c: 126: return ((hc&0xf0) | ((lc>>4)&0x0f));
  7477  0378  0875               	movf	LCDrecv@lc,w
  7478  0379  00F2               	movwf	??_LCDrecv
  7479  037A  3004               	movlw	4
  7480  037B                     u2475:
  7481  037B  36F2               	lsrf	??_LCDrecv,f
  7482  037C  0B89               	decfsz	9,f
  7483  037D  2B7B               	goto	u2475
  7484  037E  300F               	movlw	15
  7485  037F  0572               	andwf	??_LCDrecv,w
  7486  0380  00F3               	movwf	??_LCDrecv+1
  7487  0381  0874               	movf	LCDrecv@hc,w
  7488  0382  39F0               	andlw	240
  7489  0383  0473               	iorwf	??_LCDrecv+1,w
  7490  0384                     l545:
  7491  0384  0008               	return
  7492  0385                     __end_of_LCDrecv:
  7493                           
  7494                           	psect	text15
  7495  0FAC                     __ptext15:	
  7496 ;; *************** function _ReadI2C *****************
  7497 ;; Defined at:
  7498 ;;		line 32 in file "I2C/i2c.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;		None
  7501 ;; Auto vars:     Size  Location     Type
  7502 ;;		None
  7503 ;; Return value:  Size  Location     Type
  7504 ;;                  1    wreg      unsigned char 
  7505 ;; Registers used:
  7506 ;;		wreg, status,2, status,0
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7516 ;;Total ram usage:        1 bytes
  7517 ;; Hardware stack levels used:    1
  7518 ;; Hardware stack levels required when called:    1
  7519 ;; This function calls:
  7520 ;;		Nothing
  7521 ;; This function is called by:
  7522 ;;		_tsttc
  7523 ;;		_LCDrecv
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           
  7528                           ;psect for function _ReadI2C
  7529  0FAC                     _ReadI2C:
  7530  0FAC                     l2183:	
  7531                           ;incstack = 0
  7532                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
  7533                           
  7534                           
  7535                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
  7536  0FAC  300F               	movlw	15
  7537  0FAD  0023               	movlb	3	; select bank3
  7538  0FAE  0510               	andwf	16,w	;volatile
  7539  0FAF  00F0               	movwf	??_ReadI2C
  7540  0FB0  3008               	movlw	8
  7541  0FB1  0670               	xorwf	??_ReadI2C,w
  7542  0FB2  1903               	btfsc	3,2
  7543  0FB3  2FB5               	goto	u1671
  7544  0FB4  2FB6               	goto	u1670
  7545  0FB5                     u1671:
  7546  0FB5  2FBF               	goto	l22
  7547  0FB6                     u1670:
  7548  0FB6                     l2185:
  7549  0FB6  300F               	movlw	15
  7550  0FB7  0510               	andwf	16,w	;volatile
  7551  0FB8  00F0               	movwf	??_ReadI2C
  7552  0FB9  300B               	movlw	11
  7553  0FBA  0670               	xorwf	??_ReadI2C,w
  7554  0FBB  1D03               	btfss	3,2
  7555  0FBC  2FBE               	goto	u1681
  7556  0FBD  2FBF               	goto	u1680
  7557  0FBE                     u1681:
  7558  0FBE  2FC0               	goto	l23
  7559  0FBF                     u1680:
  7560  0FBF                     l22:
  7561                           
  7562                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
  7563  0FBF  1591               	bsf	17,3	;volatile
  7564  0FC0                     l23:
  7565  0FC0  1C0F               	btfss	15,0	;volatile
  7566  0FC1  2FC3               	goto	u1691
  7567  0FC2  2FC4               	goto	u1690
  7568  0FC3                     u1691:
  7569  0FC3  2FC0               	goto	l23
  7570  0FC4                     u1690:
  7571  0FC4                     l2187:
  7572                           
  7573                           ;i2c.c: 37: return ( SSP1BUF );
  7574  0FC4  080C               	movf	12,w	;volatile
  7575  0FC5                     l26:
  7576  0FC5  0008               	return
  7577  0FC6                     __end_of_ReadI2C:
  7578                           
  7579                           	psect	text16
  7580  0645                     __ptext16:	
  7581 ;; *************** function _LCDinit *****************
  7582 ;; Defined at:
  7583 ;;		line 152 in file "main.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;		None
  7586 ;; Auto vars:     Size  Location     Type
  7587 ;;		None
  7588 ;; Return value:  Size  Location     Type
  7589 ;;                  1    wreg      void 
  7590 ;; Registers used:
  7591 ;;		wreg, status,2, status,0, pclath, cstack
  7592 ;; Tracked objects:
  7593 ;;		On entry : 0/0
  7594 ;;		On exit  : 0/0
  7595 ;;		Unchanged: 0/0
  7596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7599 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7600 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7601 ;;Total ram usage:        1 bytes
  7602 ;; Hardware stack levels used:    1
  7603 ;; Hardware stack levels required when called:    3
  7604 ;; This function calls:
  7605 ;;		_LCDsend
  7606 ;;		_LCDsend2x4
  7607 ;; This function is called by:
  7608 ;;		_main
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           
  7613                           ;psect for function _LCDinit
  7614  0645                     _LCDinit:
  7615  0645                     l2467:	
  7616                           ;incstack = 0
  7617                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
  7618                           
  7619                           
  7620                           ;main.c: 154: _delay((unsigned long)((50)*(1000000/4000.0)));
  7621  0645  3011               	movlw	17
  7622  0646  00F8               	movwf	??_LCDinit
  7623  0647  303A               	movlw	58
  7624  0648                     u2857:
  7625  0648  0B89               	decfsz	9,f
  7626  0649  2E48               	goto	u2857
  7627  064A  0BF8               	decfsz	??_LCDinit,f
  7628  064B  2E48               	goto	u2857
  7629  064C  3200               	nop2
  7630  064D                     l2469:
  7631                           
  7632                           ;main.c: 155: LCDsend(0x30);
  7633  064D  3030               	movlw	48
  7634  064E  3187  2701  3186   	fcall	_LCDsend
  7635  0651                     l2471:
  7636                           
  7637                           ;main.c: 156: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7638  0651  3034               	movlw	52
  7639  0652  3187  2701  3186   	fcall	_LCDsend
  7640  0655  3029               	movlw	41
  7641  0656                     u2867:
  7642  0656  0B89               	decfsz	9,f
  7643  0657  2E56               	goto	u2867
  7644  0658  3200               	nop2
  7645  0659                     l2473:
  7646  0659  3030               	movlw	48
  7647  065A  3187  2701  3186   	fcall	_LCDsend
  7648  065D                     l2475:
  7649                           
  7650                           ;main.c: 157: _delay((unsigned long)((5)*(1000000/4000.0)));
  7651  065D  30FA               	movlw	250
  7652  065E                     u2877:
  7653  065E  3200               	nop2
  7654  065F  0B89               	decfsz	9,f
  7655  0660  2E5E               	goto	u2877
  7656                           
  7657                           ;main.c: 158: LCDsend(0x30);
  7658  0661  3030               	movlw	48
  7659  0662  3187  2701  3186   	fcall	_LCDsend
  7660                           
  7661                           ;main.c: 159: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7662  0665  3034               	movlw	52
  7663  0666  3187  2701  3186   	fcall	_LCDsend
  7664  0669                     l2477:
  7665  0669  3029               	movlw	41
  7666  066A                     u2887:
  7667  066A  0B89               	decfsz	9,f
  7668  066B  2E6A               	goto	u2887
  7669  066C  3200               	nop2
  7670  066D                     l2479:
  7671  066D  3030               	movlw	48
  7672  066E  3187  2701  3186   	fcall	_LCDsend
  7673                           
  7674                           ;main.c: 160: _delay((unsigned long)((100)*(1000000/4000000.0)));
  7675  0671  3008               	movlw	8
  7676  0672                     u2897:
  7677  0672  0B89               	decfsz	9,f
  7678  0673  2E72               	goto	u2897
  7679  0674  0000               	nop
  7680  0675                     l2481:
  7681                           
  7682                           ;main.c: 161: LCDsend(0x30);
  7683  0675  3030               	movlw	48
  7684  0676  3187  2701  3186   	fcall	_LCDsend
  7685  0679                     l2483:
  7686                           
  7687                           ;main.c: 162: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7688  0679  3034               	movlw	52
  7689  067A  3187  2701  3186   	fcall	_LCDsend
  7690  067D  3029               	movlw	41
  7691  067E                     u2907:
  7692  067E  0B89               	decfsz	9,f
  7693  067F  2E7E               	goto	u2907
  7694  0680  3200               	nop2
  7695  0681                     l2485:
  7696  0681  3030               	movlw	48
  7697  0682  3187  2701  3186   	fcall	_LCDsend
  7698  0685                     l2487:
  7699                           
  7700                           ;main.c: 163: _delay((unsigned long)((100)*(1000000/4000000.0)));
  7701  0685  3008               	movlw	8
  7702  0686                     u2917:
  7703  0686  0B89               	decfsz	9,f
  7704  0687  2E86               	goto	u2917
  7705  0688  0000               	nop
  7706                           
  7707                           ;main.c: 164: LCDsend(0x20);
  7708  0689  3020               	movlw	32
  7709  068A  3187  2701  3186   	fcall	_LCDsend
  7710                           
  7711                           ;main.c: 165: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
  7712  068D  3024               	movlw	36
  7713  068E  3187  2701  3186   	fcall	_LCDsend
  7714  0691                     l2489:
  7715  0691  3029               	movlw	41
  7716  0692                     u2927:
  7717  0692  0B89               	decfsz	9,f
  7718  0693  2E92               	goto	u2927
  7719  0694  3200               	nop2
  7720  0695                     l2491:
  7721  0695  3020               	movlw	32
  7722  0696  3187  2701  3186   	fcall	_LCDsend
  7723                           
  7724                           ;main.c: 166: _delay((unsigned long)((5)*(1000000/4000.0)));
  7725  0699  30FA               	movlw	250
  7726  069A                     u2937:
  7727  069A  3200               	nop2
  7728  069B  0B89               	decfsz	9,f
  7729  069C  2E9A               	goto	u2937
  7730  069D                     l2493:
  7731                           
  7732                           ;main.c: 168: LCDsend2x4(0x28, 0);
  7733  069D  01F2               	clrf	LCDsend2x4@mode
  7734  069E  3028               	movlw	40
  7735  069F  3185  2592  3186   	fcall	_LCDsend2x4
  7736  06A2                     l2495:
  7737                           
  7738                           ;main.c: 169: LCDsend2x4(0x06, 0);
  7739  06A2  01F2               	clrf	LCDsend2x4@mode
  7740  06A3  3006               	movlw	6
  7741  06A4  3185  2592  3186   	fcall	_LCDsend2x4
  7742  06A7                     l2497:
  7743                           
  7744                           ;main.c: 170: LCDsend2x4(0x0f, 0);
  7745  06A7  01F2               	clrf	LCDsend2x4@mode
  7746  06A8  300F               	movlw	15
  7747  06A9  3185  2592  3186   	fcall	_LCDsend2x4
  7748  06AC                     l2499:
  7749                           
  7750                           ;main.c: 171: LCDsend2x4(0x01, 0);
  7751  06AC  01F2               	clrf	LCDsend2x4@mode
  7752  06AD  3001               	movlw	1
  7753  06AE  3185  2592  3186   	fcall	_LCDsend2x4
  7754                           
  7755                           ;main.c: 172: _delay((unsigned long)((2)*(1000000/4000.0)));
  7756  06B1  30A6               	movlw	166
  7757  06B2                     u2947:
  7758  06B2  0B89               	decfsz	9,f
  7759  06B3  2EB2               	goto	u2947
  7760  06B4  3200               	nop2
  7761  06B5                     l584:
  7762  06B5  0008               	return
  7763  06B6                     __end_of_LCDinit:
  7764                           
  7765                           	psect	text17
  7766  0701                     __ptext17:	
  7767 ;; *************** function _LCDsend *****************
  7768 ;; Defined at:
  7769 ;;		line 90 in file "main.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;  c               1    wreg     unsigned char 
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;  c               1    3[COMMON] unsigned char 
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  1    wreg      void 
  7776 ;; Registers used:
  7777 ;;		wreg, status,2, status,0, pclath, cstack
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7785 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7786 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7787 ;;Total ram usage:        2 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; Hardware stack levels required when called:    2
  7790 ;; This function calls:
  7791 ;;		_WriteI2C
  7792 ;; This function is called by:
  7793 ;;		_LCDinit
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           
  7798                           ;psect for function _LCDsend
  7799  0701                     _LCDsend:
  7800                           
  7801                           ;incstack = 0
  7802                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
  7803                           ;LCDsend@c stored from wreg
  7804  0701  00F3               	movwf	LCDsend@c
  7805  0702                     l2241:
  7806  0702                     l2243:	
  7807                           ;main.c: 92: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7808                           
  7809  0702  0023               	movlb	3	; select bank3
  7810  0703  0C0F               	rrf	15,w	;volatile
  7811  0704  0C89               	rrf	9,f
  7812  0705  3901               	andlw	1
  7813  0706  00F2               	movwf	??_LCDsend
  7814  0707  0811               	movf	17,w	;volatile
  7815  0708  391F               	andlw	31
  7816  0709  0472               	iorwf	??_LCDsend,w
  7817  070A  1D03               	btfss	3,2
  7818  070B  2F0D               	goto	u1701
  7819  070C  2F0E               	goto	u1700
  7820  070D                     u1701:
  7821  070D  2F02               	goto	l2243
  7822  070E                     u1700:
  7823  070E                     l448:
  7824                           
  7825                           ;main.c: 93: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
  7826  070E  1411               	bsf	17,0	;volatile
  7827  070F                     l449:
  7828  070F  1811               	btfsc	17,0	;volatile
  7829  0710  2F12               	goto	u1711
  7830  0711  2F13               	goto	u1710
  7831  0712                     u1711:
  7832  0712  2F0F               	goto	l449
  7833  0713                     u1710:
  7834  0713                     l2245:
  7835  0713  0C0F               	rrf	15,w	;volatile
  7836  0714  0C89               	rrf	9,f
  7837  0715  3901               	andlw	1
  7838  0716  00F2               	movwf	??_LCDsend
  7839  0717  0811               	movf	17,w	;volatile
  7840  0718  391F               	andlw	31
  7841  0719  0472               	iorwf	??_LCDsend,w
  7842  071A  1D03               	btfss	3,2
  7843  071B  2F1D               	goto	u1721
  7844  071C  2F1E               	goto	u1720
  7845  071D                     u1721:
  7846  071D  2F13               	goto	l2245
  7847  071E                     u1720:
  7848  071E                     l2247:
  7849                           
  7850                           ;main.c: 94: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7851  071E  304E               	movlw	78
  7852  071F  3186  26B6  3187   	fcall	_WriteI2C
  7853  0722                     l2249:
  7854  0722  0023               	movlb	3	; select bank3
  7855  0723  0C0F               	rrf	15,w	;volatile
  7856  0724  0C89               	rrf	9,f
  7857  0725  3901               	andlw	1
  7858  0726  00F2               	movwf	??_LCDsend
  7859  0727  0811               	movf	17,w	;volatile
  7860  0728  391F               	andlw	31
  7861  0729  0472               	iorwf	??_LCDsend,w
  7862  072A  1D03               	btfss	3,2
  7863  072B  2F2D               	goto	u1731
  7864  072C  2F2E               	goto	u1730
  7865  072D                     u1731:
  7866  072D  2F22               	goto	l2249
  7867  072E                     u1730:
  7868  072E                     l2251:
  7869                           
  7870                           ;main.c: 95: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7871  072E  0873               	movf	LCDsend@c,w
  7872  072F  3186  26B6  3187   	fcall	_WriteI2C
  7873  0732                     l2253:
  7874  0732  0023               	movlb	3	; select bank3
  7875  0733  0C0F               	rrf	15,w	;volatile
  7876  0734  0C89               	rrf	9,f
  7877  0735  3901               	andlw	1
  7878  0736  00F2               	movwf	??_LCDsend
  7879  0737  0811               	movf	17,w	;volatile
  7880  0738  391F               	andlw	31
  7881  0739  0472               	iorwf	??_LCDsend,w
  7882  073A  1D03               	btfss	3,2
  7883  073B  2F3D               	goto	u1741
  7884  073C  2F3E               	goto	u1740
  7885  073D                     u1741:
  7886  073D  2F32               	goto	l2253
  7887  073E                     u1740:
  7888  073E                     l460:
  7889                           
  7890                           ;main.c: 96: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  7891  073E  1511               	bsf	17,2	;volatile
  7892  073F                     l461:
  7893  073F  1911               	btfsc	17,2	;volatile
  7894  0740  2F42               	goto	u1751
  7895  0741  2F43               	goto	u1750
  7896  0742                     u1751:
  7897  0742  2F3F               	goto	l461
  7898  0743                     u1750:
  7899  0743                     l464:
  7900  0743  0008               	return
  7901  0744                     __end_of_LCDsend:
  7902                           
  7903                           	psect	text18
  7904  0F70                     __ptext18:	
  7905 ;; *************** function _LCDcmd *****************
  7906 ;; Defined at:
  7907 ;;		line 175 in file "main.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;  c               1    wreg     unsigned char 
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;  c               1    8[COMMON] unsigned char 
  7912 ;; Return value:  Size  Location     Type
  7913 ;;                  1    wreg      void 
  7914 ;; Registers used:
  7915 ;;		wreg, status,2, status,0, pclath, cstack
  7916 ;; Tracked objects:
  7917 ;;		On entry : 0/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7925 ;;Total ram usage:        1 bytes
  7926 ;; Hardware stack levels used:    1
  7927 ;; Hardware stack levels required when called:    3
  7928 ;; This function calls:
  7929 ;;		_LCDsend2x4
  7930 ;; This function is called by:
  7931 ;;		_main
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           
  7936                           ;psect for function _LCDcmd
  7937  0F70                     _LCDcmd:
  7938                           
  7939                           ;incstack = 0
  7940                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
  7941                           ;LCDcmd@c stored from wreg
  7942  0F70  00F8               	movwf	LCDcmd@c
  7943  0F71                     l2501:
  7944                           
  7945                           ;main.c: 177: LCDsend2x4(c, 0);
  7946  0F71  01F2               	clrf	LCDsend2x4@mode
  7947  0F72  0878               	movf	LCDcmd@c,w
  7948  0F73  3185  2592  318F   	fcall	_LCDsend2x4
  7949  0F76                     l587:
  7950  0F76  0008               	return
  7951  0F77                     __end_of_LCDcmd:
  7952                           
  7953                           	psect	text19
  7954  0592                     __ptext19:	
  7955 ;; *************** function _LCDsend2x4 *****************
  7956 ;; Defined at:
  7957 ;;		line 129 in file "main.c"
  7958 ;; Parameters:    Size  Location     Type
  7959 ;;  c               1    wreg     unsigned char 
  7960 ;;  mode            1    2[COMMON] unsigned char 
  7961 ;; Auto vars:     Size  Location     Type
  7962 ;;  c               1    5[COMMON] unsigned char 
  7963 ;;  lc              1    7[COMMON] unsigned char 
  7964 ;;  hc              1    6[COMMON] unsigned char 
  7965 ;; Return value:  Size  Location     Type
  7966 ;;                  1    wreg      void 
  7967 ;; Registers used:
  7968 ;;		wreg, status,2, status,0, pclath, cstack
  7969 ;; Tracked objects:
  7970 ;;		On entry : 0/0
  7971 ;;		On exit  : 0/0
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7974 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7975 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7977 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7978 ;;Total ram usage:        6 bytes
  7979 ;; Hardware stack levels used:    1
  7980 ;; Hardware stack levels required when called:    2
  7981 ;; This function calls:
  7982 ;;		_WriteI2C
  7983 ;; This function is called by:
  7984 ;;		_LCDinit
  7985 ;;		_LCDcmd
  7986 ;;		_LCDchar
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           
  7991                           ;psect for function _LCDsend2x4
  7992  0592                     _LCDsend2x4:
  7993                           
  7994                           ;incstack = 0
  7995                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
  7996                           ;LCDsend2x4@c stored from wreg
  7997  0592  00F5               	movwf	LCDsend2x4@c
  7998  0593                     l2145:
  7999                           
  8000                           ;main.c: 131: unsigned char hc;;main.c: 132: unsigned char lc;;main.c: 134: hc = c & 0xf
      +                          0;
  8001  0593  0875               	movf	LCDsend2x4@c,w
  8002  0594  39F0               	andlw	240
  8003  0595  00F3               	movwf	??_LCDsend2x4
  8004  0596  0873               	movf	??_LCDsend2x4,w
  8005  0597  00F6               	movwf	LCDsend2x4@hc
  8006  0598                     l2147:
  8007                           
  8008                           ;main.c: 135: lc = (c << 4) & 0xf0;
  8009  0598  0875               	movf	LCDsend2x4@c,w
  8010  0599  00F3               	movwf	??_LCDsend2x4
  8011  059A  3003               	movlw	3
  8012  059B                     u1555:
  8013  059B  35F3               	lslf	??_LCDsend2x4,f
  8014  059C  3EFF               	addlw	-1
  8015  059D  1D03               	skipz
  8016  059E  2D9B               	goto	u1555
  8017  059F  3573               	lslf	??_LCDsend2x4,w
  8018  05A0  39F0               	andlw	240
  8019  05A1  00F4               	movwf	??_LCDsend2x4+1
  8020  05A2  0874               	movf	??_LCDsend2x4+1,w
  8021  05A3  00F7               	movwf	LCDsend2x4@lc
  8022  05A4                     l2149:	
  8023                           ;main.c: 137: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8024                           
  8025  05A4  0023               	movlb	3	; select bank3
  8026  05A5  0C0F               	rrf	15,w	;volatile
  8027  05A6  0C89               	rrf	9,f
  8028  05A7  3901               	andlw	1
  8029  05A8  00F3               	movwf	??_LCDsend2x4
  8030  05A9  0811               	movf	17,w	;volatile
  8031  05AA  391F               	andlw	31
  8032  05AB  0473               	iorwf	??_LCDsend2x4,w
  8033  05AC  1D03               	btfss	3,2
  8034  05AD  2DAF               	goto	u1561
  8035  05AE  2DB0               	goto	u1560
  8036  05AF                     u1561:
  8037  05AF  2DA4               	goto	l2149
  8038  05B0                     u1560:
  8039  05B0                     l550:
  8040                           
  8041                           ;main.c: 138: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  8042  05B0  1411               	bsf	17,0	;volatile
  8043  05B1                     l551:
  8044  05B1  1811               	btfsc	17,0	;volatile
  8045  05B2  2DB4               	goto	u1571
  8046  05B3  2DB5               	goto	u1570
  8047  05B4                     u1571:
  8048  05B4  2DB1               	goto	l551
  8049  05B5                     u1570:
  8050  05B5                     l2151:
  8051  05B5  0C0F               	rrf	15,w	;volatile
  8052  05B6  0C89               	rrf	9,f
  8053  05B7  3901               	andlw	1
  8054  05B8  00F3               	movwf	??_LCDsend2x4
  8055  05B9  0811               	movf	17,w	;volatile
  8056  05BA  391F               	andlw	31
  8057  05BB  0473               	iorwf	??_LCDsend2x4,w
  8058  05BC  1D03               	btfss	3,2
  8059  05BD  2DBF               	goto	u1581
  8060  05BE  2DC0               	goto	u1580
  8061  05BF                     u1581:
  8062  05BF  2DB5               	goto	l2151
  8063  05C0                     u1580:
  8064  05C0                     l2153:
  8065                           
  8066                           ;main.c: 139: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8067  05C0  304E               	movlw	78
  8068  05C1  3186  26B6  3185   	fcall	_WriteI2C
  8069  05C4                     l2155:
  8070  05C4  0023               	movlb	3	; select bank3
  8071  05C5  0C0F               	rrf	15,w	;volatile
  8072  05C6  0C89               	rrf	9,f
  8073  05C7  3901               	andlw	1
  8074  05C8  00F3               	movwf	??_LCDsend2x4
  8075  05C9  0811               	movf	17,w	;volatile
  8076  05CA  391F               	andlw	31
  8077  05CB  0473               	iorwf	??_LCDsend2x4,w
  8078  05CC  1D03               	btfss	3,2
  8079  05CD  2DCF               	goto	u1591
  8080  05CE  2DD0               	goto	u1590
  8081  05CF                     u1591:
  8082  05CF  2DC4               	goto	l2155
  8083  05D0                     u1590:
  8084  05D0                     l2157:
  8085                           
  8086                           ;main.c: 140: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  8087  05D0  0876               	movf	LCDsend2x4@hc,w
  8088  05D1  0472               	iorwf	LCDsend2x4@mode,w
  8089  05D2  3808               	iorlw	8
  8090  05D3  3186  26B6  3185   	fcall	_WriteI2C
  8091  05D6                     l2159:
  8092  05D6  0023               	movlb	3	; select bank3
  8093  05D7  0C0F               	rrf	15,w	;volatile
  8094  05D8  0C89               	rrf	9,f
  8095  05D9  3901               	andlw	1
  8096  05DA  00F3               	movwf	??_LCDsend2x4
  8097  05DB  0811               	movf	17,w	;volatile
  8098  05DC  391F               	andlw	31
  8099  05DD  0473               	iorwf	??_LCDsend2x4,w
  8100  05DE  1D03               	btfss	3,2
  8101  05DF  2DE1               	goto	u1601
  8102  05E0  2DE2               	goto	u1600
  8103  05E1                     u1601:
  8104  05E1  2DD6               	goto	l2159
  8105  05E2                     u1600:
  8106  05E2                     l2161:
  8107                           
  8108                           ;main.c: 141: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  8109  05E2  0876               	movf	LCDsend2x4@hc,w
  8110  05E3  0472               	iorwf	LCDsend2x4@mode,w
  8111  05E4  380C               	iorlw	12
  8112  05E5  3186  26B6  3185   	fcall	_WriteI2C
  8113  05E8                     l2163:
  8114  05E8  0023               	movlb	3	; select bank3
  8115  05E9  0C0F               	rrf	15,w	;volatile
  8116  05EA  0C89               	rrf	9,f
  8117  05EB  3901               	andlw	1
  8118  05EC  00F3               	movwf	??_LCDsend2x4
  8119  05ED  0811               	movf	17,w	;volatile
  8120  05EE  391F               	andlw	31
  8121  05EF  0473               	iorwf	??_LCDsend2x4,w
  8122  05F0  1D03               	btfss	3,2
  8123  05F1  2DF3               	goto	u1611
  8124  05F2  2DF4               	goto	u1610
  8125  05F3                     u1611:
  8126  05F3  2DE8               	goto	l2163
  8127  05F4                     u1610:
  8128  05F4                     l565:
  8129  05F4                     l2165:	
  8130                           ;main.c: 142: _delay((unsigned long)((1)*(1000000/4000000.0)));
  8131                           
  8132                           
  8133                           ;main.c: 143: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  8134  05F4  0876               	movf	LCDsend2x4@hc,w
  8135  05F5  0472               	iorwf	LCDsend2x4@mode,w
  8136  05F6  3808               	iorlw	8
  8137  05F7  3186  26B6  3185   	fcall	_WriteI2C
  8138  05FA                     l2167:
  8139  05FA  0023               	movlb	3	; select bank3
  8140  05FB  0C0F               	rrf	15,w	;volatile
  8141  05FC  0C89               	rrf	9,f
  8142  05FD  3901               	andlw	1
  8143  05FE  00F3               	movwf	??_LCDsend2x4
  8144  05FF  0811               	movf	17,w	;volatile
  8145  0600  391F               	andlw	31
  8146  0601  0473               	iorwf	??_LCDsend2x4,w
  8147  0602  1D03               	btfss	3,2
  8148  0603  2E05               	goto	u1621
  8149  0604  2E06               	goto	u1620
  8150  0605                     u1621:
  8151  0605  2DFA               	goto	l2167
  8152  0606                     u1620:
  8153  0606                     l2169:
  8154                           
  8155                           ;main.c: 144: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  8156  0606  0877               	movf	LCDsend2x4@lc,w
  8157  0607  0472               	iorwf	LCDsend2x4@mode,w
  8158  0608  3808               	iorlw	8
  8159  0609  3186  26B6  3185   	fcall	_WriteI2C
  8160  060C                     l2171:
  8161  060C  0023               	movlb	3	; select bank3
  8162  060D  0C0F               	rrf	15,w	;volatile
  8163  060E  0C89               	rrf	9,f
  8164  060F  3901               	andlw	1
  8165  0610  00F3               	movwf	??_LCDsend2x4
  8166  0611  0811               	movf	17,w	;volatile
  8167  0612  391F               	andlw	31
  8168  0613  0473               	iorwf	??_LCDsend2x4,w
  8169  0614  1D03               	btfss	3,2
  8170  0615  2E17               	goto	u1631
  8171  0616  2E18               	goto	u1630
  8172  0617                     u1631:
  8173  0617  2E0C               	goto	l2171
  8174  0618                     u1630:
  8175  0618                     l2173:
  8176                           
  8177                           ;main.c: 145: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  8178  0618  0877               	movf	LCDsend2x4@lc,w
  8179  0619  0472               	iorwf	LCDsend2x4@mode,w
  8180  061A  380C               	iorlw	12
  8181  061B  3186  26B6  3185   	fcall	_WriteI2C
  8182  061E                     l2175:
  8183  061E  0023               	movlb	3	; select bank3
  8184  061F  0C0F               	rrf	15,w	;volatile
  8185  0620  0C89               	rrf	9,f
  8186  0621  3901               	andlw	1
  8187  0622  00F3               	movwf	??_LCDsend2x4
  8188  0623  0811               	movf	17,w	;volatile
  8189  0624  391F               	andlw	31
  8190  0625  0473               	iorwf	??_LCDsend2x4,w
  8191  0626  1D03               	btfss	3,2
  8192  0627  2E29               	goto	u1641
  8193  0628  2E2A               	goto	u1640
  8194  0629                     u1641:
  8195  0629  2E1E               	goto	l2175
  8196  062A                     u1640:
  8197  062A                     l574:
  8198  062A                     l2177:	
  8199                           ;main.c: 146: _delay((unsigned long)((1)*(1000000/4000000.0)));
  8200                           
  8201                           
  8202                           ;main.c: 147: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  8203  062A  0877               	movf	LCDsend2x4@lc,w
  8204  062B  0472               	iorwf	LCDsend2x4@mode,w
  8205  062C  3808               	iorlw	8
  8206  062D  3186  26B6  3185   	fcall	_WriteI2C
  8207  0630                     l2179:
  8208  0630  0023               	movlb	3	; select bank3
  8209  0631  0C0F               	rrf	15,w	;volatile
  8210  0632  0C89               	rrf	9,f
  8211  0633  3901               	andlw	1
  8212  0634  00F3               	movwf	??_LCDsend2x4
  8213  0635  0811               	movf	17,w	;volatile
  8214  0636  391F               	andlw	31
  8215  0637  0473               	iorwf	??_LCDsend2x4,w
  8216  0638  1D03               	btfss	3,2
  8217  0639  2E3B               	goto	u1651
  8218  063A  2E3C               	goto	u1650
  8219  063B                     u1651:
  8220  063B  2E30               	goto	l2179
  8221  063C                     u1650:
  8222  063C                     l577:
  8223                           
  8224                           ;main.c: 148: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  8225  063C  1511               	bsf	17,2	;volatile
  8226  063D                     l578:
  8227  063D  1911               	btfsc	17,2	;volatile
  8228  063E  2E40               	goto	u1661
  8229  063F  2E41               	goto	u1660
  8230  0640                     u1661:
  8231  0640  2E3D               	goto	l578
  8232  0641                     u1660:
  8233  0641                     l2181:
  8234                           
  8235                           ;main.c: 149: _delay((unsigned long)((50)*(1000000/4000000.0)));
  8236  0641  3004               	movlw	4
  8237  0642                     u2957:
  8238  0642  0B89               	decfsz	9,f
  8239  0643  2E42               	goto	u2957
  8240  0644                     l581:
  8241  0644  0008               	return
  8242  0645                     __end_of_LCDsend2x4:
  8243                           
  8244                           	psect	text20
  8245  06B6                     __ptext20:	
  8246 ;; *************** function _WriteI2C *****************
  8247 ;; Defined at:
  8248 ;;		line 47 in file "I2C/i2c.c"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;  data_out        1    wreg     unsigned char 
  8251 ;; Auto vars:     Size  Location     Type
  8252 ;;  data_out        1    1[COMMON] unsigned char 
  8253 ;; Return value:  Size  Location     Type
  8254 ;;                  1    wreg      char 
  8255 ;; Registers used:
  8256 ;;		wreg, status,2, status,0
  8257 ;; Tracked objects:
  8258 ;;		On entry : 0/0
  8259 ;;		On exit  : 0/0
  8260 ;;		Unchanged: 0/0
  8261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8264 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8266 ;;Total ram usage:        2 bytes
  8267 ;; Hardware stack levels used:    1
  8268 ;; Hardware stack levels required when called:    1
  8269 ;; This function calls:
  8270 ;;		Nothing
  8271 ;; This function is called by:
  8272 ;;		_tsttc
  8273 ;;		_LCDsend
  8274 ;;		_LCDrecv
  8275 ;;		_LCDsend2x4
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279                           
  8280                           ;psect for function _WriteI2C
  8281  06B6                     _WriteI2C:
  8282                           
  8283                           ;incstack = 0
  8284                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
  8285                           ;WriteI2C@data_out stored from wreg
  8286  06B6  00F1               	movwf	WriteI2C@data_out
  8287  06B7                     l2115:
  8288                           
  8289                           ;i2c.c: 49: SSP1BUF = data_out;
  8290  06B7  0871               	movf	WriteI2C@data_out,w
  8291  06B8  0023               	movlb	3	; select bank3
  8292  06B9  008C               	movwf	12	;volatile
  8293  06BA                     l2117:
  8294                           
  8295                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
  8296  06BA  1F90               	btfss	16,7	;volatile
  8297  06BB  2EBD               	goto	u1461
  8298  06BC  2EBE               	goto	u1460
  8299  06BD                     u1461:
  8300  06BD  2EBF               	goto	l2123
  8301  06BE                     u1460:
  8302  06BE  2F00               	goto	l30
  8303  06BF                     l2123:
  8304                           
  8305                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
  8306  06BF  300F               	movlw	15
  8307  06C0  0510               	andwf	16,w	;volatile
  8308  06C1  00F0               	movwf	??_WriteI2C
  8309  06C2  3008               	movlw	8
  8310  06C3  0670               	xorwf	??_WriteI2C,w
  8311  06C4  1903               	btfsc	3,2
  8312  06C5  2EC7               	goto	u1471
  8313  06C6  2EC8               	goto	u1470
  8314  06C7                     u1471:
  8315  06C7  2EDE               	goto	l2135
  8316  06C8                     u1470:
  8317  06C8                     l2125:
  8318  06C8  300F               	movlw	15
  8319  06C9  0510               	andwf	16,w	;volatile
  8320  06CA  00F0               	movwf	??_WriteI2C
  8321  06CB  300B               	movlw	11
  8322  06CC  0670               	xorwf	??_WriteI2C,w
  8323  06CD  1903               	btfsc	3,2
  8324  06CE  2ED0               	goto	u1481
  8325  06CF  2ED1               	goto	u1480
  8326  06D0                     u1481:
  8327  06D0  2EDE               	goto	l2135
  8328  06D1                     u1480:
  8329  06D1                     l2127:
  8330                           
  8331                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
  8332  06D1  1610               	bsf	16,4	;volatile
  8333  06D2                     l33:	
  8334                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
  8335                           
  8336  06D2  002E               	movlb	14	; select bank14
  8337  06D3  1C0F               	btfss	15,0	;volatile
  8338  06D4  2ED6               	goto	u1491
  8339  06D5  2ED7               	goto	u1490
  8340  06D6                     u1491:
  8341  06D6  2ED2               	goto	l33
  8342  06D7                     u1490:
  8343  06D7                     l35:
  8344                           
  8345                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
  8346  06D7  0023               	movlb	3	; select bank3
  8347  06D8  190F               	btfsc	15,2	;volatile
  8348  06D9  2EDB               	goto	u1501
  8349  06DA  2EDC               	goto	u1500
  8350  06DB                     u1501:
  8351  06DB  2F00               	goto	l30
  8352  06DC                     u1500:
  8353  06DC                     l2129:
  8354  06DC  080F               	movf	15,w	;volatile
  8355  06DD  2F00               	goto	l30
  8356  06DE                     l2135:
  8357                           
  8358                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
  8359  06DE  300F               	movlw	15
  8360  06DF  0510               	andwf	16,w	;volatile
  8361  06E0  00F0               	movwf	??_WriteI2C
  8362  06E1  3008               	movlw	8
  8363  06E2  0670               	xorwf	??_WriteI2C,w
  8364  06E3  1903               	btfsc	3,2
  8365  06E4  2EE6               	goto	u1511
  8366  06E5  2EE7               	goto	u1510
  8367  06E6                     u1511:
  8368  06E6  2EF0               	goto	l42
  8369  06E7                     u1510:
  8370  06E7                     l2137:
  8371  06E7  300F               	movlw	15
  8372  06E8  0510               	andwf	16,w	;volatile
  8373  06E9  00F0               	movwf	??_WriteI2C
  8374  06EA  300B               	movlw	11
  8375  06EB  0670               	xorwf	??_WriteI2C,w
  8376  06EC  1D03               	btfss	3,2
  8377  06ED  2EEF               	goto	u1521
  8378  06EE  2EF0               	goto	u1520
  8379  06EF                     u1521:
  8380  06EF  2F00               	goto	l30
  8381  06F0                     u1520:
  8382  06F0                     l42:
  8383  06F0  180F               	btfsc	15,0	;volatile
  8384  06F1  2EF3               	goto	u1531
  8385  06F2  2EF4               	goto	u1530
  8386  06F3                     u1531:
  8387  06F3  2EF0               	goto	l42
  8388  06F4                     u1530:
  8389  06F4                     l2139:
  8390  06F4  0C0F               	rrf	15,w	;volatile
  8391  06F5  0C89               	rrf	9,f
  8392  06F6  3901               	andlw	1
  8393  06F7  00F0               	movwf	??_WriteI2C
  8394  06F8  0811               	movf	17,w	;volatile
  8395  06F9  391F               	andlw	31
  8396  06FA  0470               	iorwf	??_WriteI2C,w
  8397  06FB  1D03               	btfss	3,2
  8398  06FC  2EFE               	goto	u1541
  8399  06FD  2EFF               	goto	u1540
  8400  06FE                     u1541:
  8401  06FE  2EF4               	goto	l2139
  8402  06FF                     u1540:
  8403  06FF                     l47:
  8404                           
  8405                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
  8406  06FF  0811               	movf	17,w	;volatile
  8407  0700                     l30:
  8408  0700  0008               	return
  8409  0701                     __end_of_WriteI2C:
  8410                           
  8411                           	psect	intentry
  8412  0004                     __pintentry:	
  8413 ;; *************** function _INTERRUPT_InterruptManager *****************
  8414 ;; Defined at:
  8415 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;		None
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;		None
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  1    wreg      void 
  8422 ;; Registers used:
  8423 ;;		wreg
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8433 ;;Total ram usage:        0 bytes
  8434 ;; Hardware stack levels used:    1
  8435 ;; This function calls:
  8436 ;;		Nothing
  8437 ;; This function is called by:
  8438 ;;		Interrupt level 1
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442  0004                     _INTERRUPT_InterruptManager:
  8443                           
  8444                           ;incstack = 0
  8445  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8446                           
  8447                           ; Regs used in _INTERRUPT_InterruptManager: [wreg]
  8448  0005  3180               	pagesel	$
  8449  0006                     i1l2021:
  8450                           
  8451                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  8452  0006  1F0B               	btfss	11,6	;volatile
  8453  0007  2809               	goto	u128_21
  8454  0008  280A               	goto	u128_20
  8455  0009                     u128_21:
  8456  0009  281A               	goto	i1l326
  8457  000A                     u128_20:
  8458  000A                     i1l2023:
  8459                           
  8460                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE3bits.BCL1IE == 1 && PIR3bits
      +                          .BCL1IF == 1)
  8461  000A  002E               	movlb	14	; select bank14
  8462  000B  1C99               	btfss	25,1	;volatile
  8463  000C  280E               	goto	u129_21
  8464  000D  280F               	goto	u129_20
  8465  000E                     u129_21:
  8466  000E  2814               	goto	i1l321
  8467  000F                     u129_20:
  8468  000F                     i1l2025:
  8469                           
  8470                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: i2c1_driver_busCollisionISR();
  8471  000F  1C8F               	btfss	15,1	;volatile
  8472  0010  2812               	goto	u130_21
  8473  0011  2813               	goto	u130_20
  8474  0012                     u130_21:
  8475  0012  2814               	goto	i1l321
  8476  0013                     u130_20:
  8477  0013  281A               	goto	i1l326
  8478  0014                     i1l321:
  8479                           
  8480                           ;interrupt_manager.c: 61: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
  8481  0014  1C19               	btfss	25,0	;volatile
  8482  0015  2817               	goto	u131_21
  8483  0016  2818               	goto	u131_20
  8484  0017                     u131_21:
  8485  0017  281A               	goto	i1l322
  8486  0018                     u131_20:
  8487  0018                     i1l2029:
  8488                           
  8489                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: i2c1_driver_i2cISR();
  8490  0018  080F               	movf	15,w	;volatile
  8491  0019  281A               	goto	i1l326
  8492  001A                     i1l322:
  8493  001A                     i1l326:	
  8494                           ;interrupt_manager.c: 68: };interrupt_manager.c: 69: }
  8495                           
  8496  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8497  001B  0009               	retfie
  8498  001C                     __end_of_INTERRUPT_InterruptManager:
  8499  007E                     btemp	set	126	;btemp
  8500  007E                     int$flags	set	126
  8501  007E                     wtemp0	set	126
  8502                           
  8503                           	psect	config
  8504                           
  8505                           ;Config register CONFIG1 @ 0x8007
  8506                           ;	External Oscillator mode selection bits
  8507                           ;	FEXTOSC = OFF, Oscillator not enabled
  8508                           ;	Power-up default value for COSC bits
  8509                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  8510                           ;	Clock Out Enable bit
  8511                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  8512                           ;	Clock Switch Enable bit
  8513                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8514                           ;	Fail-Safe Clock Monitor Enable bit
  8515                           ;	FCMEN = ON, FSCM timer enabled
  8516  8007                     	org	32775
  8517  8007  3FEC               	dw	16364
  8518                           
  8519                           ;Config register CONFIG2 @ 0x8008
  8520                           ;	Master Clear Enable bit
  8521                           ;	MCLRE = ON, MCLR pin is Master Clear function
  8522                           ;	Power-up Timer Enable bit
  8523                           ;	PWRTE = OFF, PWRT disabled
  8524                           ;	Low-Power BOR enable bit
  8525                           ;	LPBOREN = OFF, ULPBOR disabled
  8526                           ;	Brown-out reset enable bits
  8527                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  8528                           ;	Brown-out Reset Voltage Selection
  8529                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  8530                           ;	Zero-cross detect disable
  8531                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  8532                           ;	Peripheral Pin Select one-way control
  8533                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  8534                           ;	Stack Overflow/Underflow Reset Enable bit
  8535                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  8536                           ;	Background Debugger
  8537                           ;	DEBUG = OFF, Background Debugger disabled
  8538  8008                     	org	32776
  8539  8008  3FFF               	dw	16383
  8540                           
  8541                           ;Config register CONFIG3 @ 0x8009
  8542                           ;	WDT Period Select bits
  8543                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8544                           ;	WDT operating mode
  8545                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  8546                           ;	WDT Window Select bits
  8547                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8548                           ;	WDT input clock selector
  8549                           ;	WDTCCS = SC, Software Control
  8550  8009                     	org	32777
  8551  8009  3F9F               	dw	16287
  8552                           
  8553                           ;Config register CONFIG4 @ 0x800A
  8554                           ;	UserNVM self-write protection bits
  8555                           ;	WRT = OFF, Write protection off
  8556                           ;	Scanner Enable bit
  8557                           ;	SCANE = available, Scanner module is available for use
  8558                           ;	Low Voltage Programming Enable bit
  8559                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  8560  800A                     	org	32778
  8561  800A  3FFF               	dw	16383
  8562                           
  8563                           ;Config register CONFIG5 @ 0x800B
  8564                           ;	UserNVM Program memory code protection bit
  8565                           ;	CP = OFF, Program Memory code protection disabled
  8566                           ;	DataNVM code protection bit
  8567                           ;	CPD = OFF, Data EEPROM code protection disabled
  8568  800B                     	org	32779
  8569  800B  3FFF               	dw	16383

Data Sizes:
    Strings     53
    Constant    18
    Data        0
    BSS         5
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      51
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_5(CODE[10]), STR_4(CODE[3]), STR_3(CODE[7]), STR_2(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDstr@p	PTR unsigned char  size(2) Largest target is 17
		 -> main@buf(BANK0[17]), STR_1(CODE[5]), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    _main->_LCDstr
    _tsttc->_WriteI2C
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDrecv->_WriteI2C
    _LCDinit->_LCDsend2x4
    _LCDsend->_WriteI2C
    _LCDcmd->_LCDsend2x4
    _LCDsend2x4->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0    6111
                                             20 BANK0     26    26      0
                             _LCDcmd
                            _LCDinit
                            _LCDrecv
                             _LCDstr
                  _SYSTEM_Initialize
                   _i2c1_driver_open
                            _sprintf
                              _tsttc
 ---------------------------------------------------------------------------------
 (1) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    22      6    2682
                                              0 BANK0     20    14      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDstr                                               6     4      2    1235
                                              9 COMMON     5     3      2
                                              0 BANK0      1     1      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (2) _LCDchar                                              1     1      0     810
                                              8 COMMON     1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDrecv                                              5     5      0     178
                                              2 COMMON     5     5      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              8 COMMON     1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 COMMON     2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _LCDcmd                                               1     1      0     810
                                              8 COMMON     1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (3) _LCDsend2x4                                           6     5      1     788
                                              2 COMMON     6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDcmd
     _LCDsend2x4
       _WriteI2C
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _LCDrecv
     _ReadI2C
     _WriteI2C
   _LCDstr
     _LCDchar
       _LCDsend2x4
         _WriteI2C
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _i2c1_driver_open
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _tsttc
     _ReadI2C
     _WriteI2C

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      33       5       63.7%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      41      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      41      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Oct 25 17:00:49 2020

                                 l30 0700                                   l22 0FBF  
                                 l23 0FC0                                   l33 06D2  
                                 l42 06F0                                   l26 0FC5  
                                 l35 06D7                                   l47 06FF  
                ___wmul@multiplicand 0072                                  l120 07BA  
                                l161 0F8F                                  l225 07FA  
                                l410 0419                                  l402 0404  
                                l403 0405                                  l500 02C8  
                                l164 0F86                                  l421 0448  
                                l405 0409                                  l158 0F99  
                                l422 0449                                  l440 048C  
                                l433 047A                                  l409 0418  
                                l530 0343                                  l514 0309  
                                l434 047C                                  l515 030B  
                                l443 0491                                  l611 04BF  
                                l460 073E                                  l372 0391  
                                l461 073F                                  l541 0373  
                                l373 0392                                  l613 04CA  
                                l550 05B0                                  l542 0374  
                                l526 033C                                  l470 024D  
                                l551 05B1                                  l527 033E  
                                l439 048B                                  l615 04D5  
                                l464 0743                                  l448 070E  
                                l384 03C1                                  l449 070F  
                                l545 0384                                  l529 0342  
                                l385 03C2                                  l369 0385  
                                l484 028E                                  l396 03F3  
                                l581 0644                                  l565 05F4  
                                l485 0290                                  l469 024C  
                                l397 03F5                                  l574 062A  
                                l590 0F7E                                  l814 00D9  
                                l823 0140                                  l807 00B0  
                                l584 06B5                                  l496 02C1  
                                l808 0093                                  l577 063C  
                                l497 02C3                                  l578 063D  
                                l850 0FFF                                  l587 0F76  
                                l499 02C7                                  l819 0100  
                                l596 0FE0                                  l844 023E  
                                l848 0FEB                                  l795 0045  
            __size_of_PMD_Initialize 0008                                  wreg 0009  
                        ?_LCDsend2x4 0072                      __end_of_LCDchar 0F7F  
                               l1120 077F                                 l1130 07EE  
                               l1301 0FAB                                 l2201 078E  
                               l2123 06BF                                 l2115 06B7  
                               l2211 0799                                 l2203 0790  
                               l2125 06C8                                 l2117 06BA  
                               l2221 07AD                                 l2213 07A5  
                               l2205 0793                                 l2301 0770  
                               l2127 06D1                                 l2135 06DE  
                               l2151 05B5                                 l2223 07AF  
                               l2215 07A7                                 l2207 0795  
                               l2231 0F7F                                 l2303 0775  
                               l2311 07C1                                 l2137 06E7  
                               l2129 06DC                                 l2161 05E2  
                               l2153 05C0                                 l2145 0593  
                               l2241 0702                                 l2401 0240  
                               l2233 0F87                                 l2225 07B2  
                               l2217 07A9                                 l2209 0797  
                               l2305 077B                                 l2321 07DB  
                               l2313 07C4                                 l2139 06F4  
                               l2171 060C                                 l2163 05E8  
                               l2155 05C4                                 l2147 0598  
                               l2251 072E                                 l2243 0702  
                               l2411 026C                                 l2403 0240  
                               l2235 0F8A                                 l2227 07B5  
                               l2219 07AB                                 l2331 0F90  
                               l2323 07DF                                 l2315 07C9  
                               l2181 0641                                 l2173 0618  
                               l2165 05F4                                 l2157 05D0  
                               l2149 05A4                                 l2501 0F71  
                               l2253 0732                                 l2245 0713  
                               l2421 029F                                 l2413 0271  
                               l2405 0251                                 l2237 0F8B  
                               l2229 07B7                                 l2333 0F93  
                               l2341 07F5                                 l2325 07E4  
                               l2317 07CD                                 l2309 07BB  
                               l2261 0FA2                                 l2175 061E  
                               l2167 05FA                                 l2159 05D6  
                               l2247 071E                                 l2183 0FAC  
                               l2431 02D7                                 l2423 02A3  
                               l2415 027D                                 l2407 025C  
                               l2255 0F78                                 l2503 0FC6  
                               l2239 0F8E                                 l2191 0780  
                               l2335 0F96                                 l2343 07F7  
                               l2319 07D1                                 l2327 07EA  
                               l2271 0FE3                                 l2263 0FA8  
                               l2511 002F                                 l2351 0396  
                               l2177 062A                                 l2169 0606  
                               l2249 0722                                 l2185 0FB6  
                               l2441 02FD                                 l2433 02DB  
                               l2425 02AF                                 l2417 0282  
                               l2409 0260                                 l2505 0FC7  
                               l2193 0786                                 l2337 07EF  
                               l2273 0FE7                                 l2265 0FAA  
                               l2257 0F9B                                 l2601 0179  
                               l2513 0035                                 l2361 03C6  
                               l2353 03A1                                 l2179 0630  
                               l2187 0FC4                                 l2451 0330  
                               l2443 030F                                 l2435 02E7  
                               l2427 02B5                                 l2419 0294  
                               l2507 0FCB                                 l2195 0788  
                               l2339 07F4                                 l2291 0754  
                               l2283 0744                                 l2275 0FF0  
                               l2259 0F9C                                 l2611 0199  
                               l2603 017D                                 l2531 0073  
                               l2523 004A                                 l2515 003C  
                               l2371 03F9                                 l2363 03D1  
                               l2355 03A5                                 l2461 0367  
                               l2453 0347                                 l2445 031A  
                               l2437 02EC                                 l2429 02CC  
                               l2197 078A                                 l2293 0758  
                               l2285 0746                                 l2277 0FF5  
                               l2269 0FE1                                 l2621 01B9  
                               l2613 01A3                                 l2605 0188  
                               l2541 00B4                                 l2533 0082  
                               l2525 0053                                 l2517 0041  
                               l2509 002A                                 l2381 0438  
                               l2373 040D                                 l2365 03D5  
                               l2357 03B1                                 l2349 0385  
                               l2701 0544                                 l2471 0651  
                               l2463 0378                                 l2455 0352  
                               l2447 031E                                 l2439 02F8  
                               l2199 078C                                 l2295 075C  
                               l2287 074C                                 l2279 0FFB  
                               l2623 01E1                                 l2631 0212  
                               l2615 01A9                                 l2607 018E  
                               l2543 00BB                                 l2551 00CD  
                               l2535 0086                                 l2527 005F  
                               l2519 0046                                 l2391 0468  
                               l2383 043C                                 l2375 041D  
                               l2367 03E1                                 l2359 03B5  
                               l2711 0573                                 l2703 0548  
                               l2481 0675                                 l2473 0659  
                               l2457 0356                                 l2449 032A  
                               l2297 076B                                 l2289 074F  
                               l2633 0219                                 l2625 01FD  
                               l2617 01B0                                 l2609 0195  
                               l2553 00D4                                 l2545 00BF  
                               l2529 0062                                 l2393 046E  
                               l2385 044D                                 l2377 0428  
                               l2369 03E7                                 l2713 057A  
                               l2705 0550                                 l2491 0695  
                               l2483 0679                                 l2475 065D  
                               l2467 0645                                 l2459 0362  
                               l2299 076F                                 l2635 021D  
                               l2619 01B4                                 l2563 00F5  
                               l2547 00C3                                 l2539 0095  
                               l2395 0480                                 l2387 0458  
                               l2379 042C                                 l2715 057B  
                               l2707 0558                                 l2651 0492  
                               l2493 069D                                 l2485 0681  
                               l2477 0669                                 l2469 064D  
                               l2629 0209                                 l2581 0136  
                               l2573 011C                                 l2549 00C7  
                               l2637 0226                                 l2397 0490  
                               l2389 045C                                 l2717 0588  
                               l2709 055C                                 l2661 049E  
                               l2653 0495                                 l2495 06A2  
                               l2487 0685                                 l2479 066D  
                               l2591 015B                                 l2583 013C  
                               l2559 00DB                                 l2639 023A  
                               l2671 04B4                                 l2663 04A0  
                               l2655 0498                                 l2497 06A7  
                               l2489 0691                                 l2593 0161  
                               l2585 014B                                 l2569 0102  
                               l2577 0127                                 l2681 04EE  
                               l2673 04E1                                 l2665 04A1  
                               l2657 049B                                 l2499 06AC  
                               l2595 0168                                 l2587 0154  
                               l2579 0130                                 l2691 0511  
                               l2683 04F5                                 l2675 04E2  
                               l2667 04A4                                 l2659 049D  
                               l2597 016C                                 l2589 0157  
                               l2693 0521                                 l2685 04F9  
                               l2677 04E3                                 l2669 04B0  
                               l2599 0172                                 l2695 0528  
                               l2687 0506                                 l2679 04EA  
                    __end_of_LCDinit 06B6                                 l2697 052C  
                               l2689 050D                                 l2699 053D  
                    __end_of_LCDrecv 0385                      __end_of_LCDsend 0744  
                               STR_1 103F                                 STR_2 1019  
                               STR_3 1038                                 STR_4 1044  
                               STR_5 102E                                 STR_6 1008  
                               u2000 03C1                                 u2001 03C0  
                               u2010 03C6                                 u2011 03C5  
                               u2100 041D                                 u2020 03D1  
                               u2101 041C                                 u2021 03D0  
                               u2110 0428                                 u2030 03E1  
                               u2111 0427                                 u2031 03E0  
                               u2200 0490                                 u2120 0438  
                               u2040 03F3                                 u2201 048F  
                               u2121 0437                                 u2041 03F2  
                               u2210 024C                                 u2130 0448  
                               u2050 03F9                                 u2211 024B  
                               u2131 0447                                 u2051 03F8  
                               u1500 06DC                                 u2300 02C1  
                               u2220 0251                                 u2140 044D  
                               u2060 0404                                 u1501 06DB  
                               u2301 02C0                                 u2221 0250  
                               u2141 044C                                 u2061 0403  
                               _LATA 0016                                 u1510 06E7  
                               u2310 02C7                                 u2230 025C  
                               u2150 0458                                 u2070 0409  
                               _LATB 0017                                 u1511 06E6  
                               u2311 02C6                                 u2231 025B  
                               u2151 0457                                 u2071 0408  
                               _LATC 0018                                 u1520 06F0  
                               u1600 05E2                                 u2400 033C  
                               u2320 02CC                                 u2240 026C  
                               u2160 0468                                 u2080 040D  
                               _LATD 0019                                 u1521 06EF  
                               u1601 05E1                                 u2401 033B  
                               u2321 02CB                                 u2241 026B  
                               u2161 0467                                 u2081 040C  
                               _LATE 001A                                 u1530 06F4  
                               u1610 05F4                                 u2410 0342  
                               u2330 02D7                                 u2250 027D  
                               u2170 047A                                 u2090 0418  
                               u1531 06F3                                 u1611 05F3  
                               u2411 0341                                 u2331 02D6  
                               u2251 027C                                 u2171 0479  
                               u2091 0417                                 u1540 06FF  
                               u1460 06BE                                 u1620 0606  
                               u1700 070E                                 u2420 0347  
                               u2340 02E7                                 u2260 028E  
                               u2500 005F                                 u2180 0480  
                               u1541 06FE                                 u1461 06BD  
                               u1621 0605                                 u1701 070D  
                               u2421 0346                                 u2341 02E6  
                               u2261 028D                                 u2501 005E  
                               u2181 047F                                 u1470 06C8  
                               u1630 0618                                 u1710 0713  
                               u2430 0352                                 u2350 02F8  
                               u2270 0294                                 u2510 0092  
                               u2190 048B                                 u1471 06C7  
                               u1631 0617                                 u1711 0712  
                               u2431 0351                                 u2351 02F7  
                               u2271 0293                                 u2511 0091  
                               u2191 048A                                 u1480 06D1  
                               u1640 062A                                 u1560 05B0  
                               u1720 071E                                 u2440 0362  
                               u2360 0309                                 u2280 029F  
                               u2600 014B                                 u2520 00B4  
                               u1481 06D0                                 u1641 0629  
                               u1561 05AF                                 u1721 071D  
                               u2441 0361                                 u2361 0308  
                               u2281 029E                                 u2601 014A  
                               u2521 00B3                                 u1490 06D7  
                               u1650 063C                                 u1570 05B5  
                               u1730 072E                                 u2450 0373  
                               u2370 030F                                 u2290 02AF  
                               u1810 0FFB                                 u2610 015B  
                               u2530 00C3                                 u1491 06D6  
                               u1651 063B                                 u1571 05B4  
                               u1555 059B                                 u1731 072D  
                               u2451 0372                                 u2371 030E  
                               u2291 02AE                                 u1811 0FFA  
                               u2611 015A                                 u2531 00C2  
                               u1660 0641                                 u1580 05C0  
                               u1740 073E                                 u2460 0378  
                               u2380 031A                                 u1820 074C  
                               u2620 0161                                 u2540 00F4  
                               u2700 04AE                                 u1661 0640  
                               u1581 05BF                                 u1741 073D  
                               u2461 0377                                 u2381 0319  
                               u1821 074B                                 u1805 0FF1  
                               u2621 0160                                 u2605 0147  
                               u2541 00F3                                 u2701 04AB  
                               u1590 05D0                                 u1750 0743  
                               u1670 0FB6                                 u2390 032A  
                               u1910 07D1                                 u2630 0172  
                               u2550 00FF                                 u1591 05CF  
                               u1751 0742                                 u1671 0FB5  
                               u2391 0329                                 u1911 07D0  
                               u2631 0171                                 u2551 00FE  
                               u1680 0FBF                                 u2480 0FE0  
                               u1840 075C                                 u1920 07DB  
                               u1760 0FA2                                 u2640 0187  
                               u2560 011B                                 u2720 04B4  
                               u1681 0FBE                                 u2481 0FDF  
                               u1841 075B                                 u1921 07DA  
                               u1905 07C5                                 u1761 0FA1  
                               u2641 0186                                 u2561 011A  
                               u2545 00F0                                 u2721 04B3  
                        main@counter 004C                                 u1690 0FC4  
                               u1770 0FA8                                 u2650 018E  
                               u2570 0126                                 u2490 0035  
                               u2730 04BD                                 u2714 04B0  
                               u1691 0FC3                                 u2475 037B  
                               u1835 0750                                 u1771 0FA7  
                               u2651 018D                                 u2571 0125  
                               u2491 0034                                 u2731 04BA  
                               u1860 076B                                 u1940 07EA  
                               u1780 0FE7                                 u2660 01A3  
                               u2580 0136                                 u2804 04E0  
                               u1861 076A                                 u1941 07E9  
                               u1925 07D7                                 u1781 0FE6  
                               u2661 01A2                                 u2581 0135  
                               u2565 0117                                 u1950 07F4  
                               u2670 01A9                                 u2590 013C  
                               u2750 04C8                                 u1951 07F3  
                               u1855 075D                                 u1935 07E0  
                               u2671 01A8                                 u2591 013B  
                               u2751 04C5                                 u1880 077B  
                               u2680 0226                                 u1960 0391  
                               u2744 04BF                                 u1881 077A  
                               u1865 0767                                 u2681 0225  
                               u1961 0390                                 u1890 07C1  
                               u2690 023A                                 u1970 0396  
                               u2770 04D3                                 u2907 067E  
                               u1875 0771                                 u1891 07C0  
                               u1795 0FEC                                 u2691 0239  
                               u1971 0395                                 u2771 04D0  
                               u1980 03A1                                 u2764 04CA  
                               _PMD0 0796                                 u2917 0686  
                               u1981 03A0                                 _PMD1 0797  
                               u1990 03B1                                 u2790 04DE  
                               _PMD2 0798                                 u2927 0692  
                               u1991 03B0                                 u2847 0581  
                               u2791 04DB                                 _PMD3 0799  
                               u2784 04D5                                 _PMD4 079A  
                               u2937 069A                                 u2857 0648  
                               _PMD5 079B                                 u2947 06B2  
                               u2867 0656                                 u2957 0642  
                               u2877 065E                                 u2887 066A  
                               u2897 0672                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUD 0F5A                                 _WPUE 0F65  
                               _main 0492                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               start 001C                      __end_of_ReadI2C 0FC6  
     __size_of_OSCILLATOR_Initialize 0009        __end_of_OSCILLATOR_Initialize 0F90  
           __end_of_i2c1_driver_open 07FB                                ?_main 0070  
                    __end_of___lwdiv 0780                                i1l321 0014  
                              i1l322 001A                                i1l326 001A  
                    __end_of___lwmod 07EF                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                                _TRISD 0014  
                              _TRISE 0015                                _WPUC3 7A7B  
                              _WPUC4 7A7C                      __end_of_dpowers 102E  
                    __end_of_isdigit 0FAC                                main@c 0049  
                              _tsttc 0385                                status 0003  
                              wtemp0 007E                      __end_of_sprintf 023F  
                    __initialization 001E                         __end_of_main 0592  
                __size_of_LCDsend2x4 00B3          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 0034                            ??_LCDchar 0078  
                          ??_LCDinit 0078                            ??_LCDrecv 0072  
                          ??_LCDsend 0072                     __end_of_WriteI2C 0701  
                             _ANSELA 0F38                               _ANSELB 0F43  
                             _ANSELC 0F4E                               _ANSELD 0F59  
                             _ANSELE 0F64                               ?_tsttc 0070  
                             _RC3PPS 0F23                               _RC4PPS 0F24  
                             i1l2021 0006                               i1l2023 000A  
                             i1l2025 000F                               i1l2029 0018  
                             _ODCONA 0F3A                               _ODCONB 0F45  
                             _ODCONC 0F50                               _ODCOND 0F5B  
                             _ODCONE 0F66                               u130_20 0013  
                             u130_21 0012                               u131_20 0018  
                             u131_21 0017                               u128_20 000A  
                             u128_21 0009                               u129_20 000F  
                             u129_21 000E                               _LCDcmd 0F70  
                             _LCDstr 0FC6                               _OSCFRQ 0893  
                          ??_ReadI2C 0070                          LCDsend2x4@c 0075  
                        LCDrecv@mode 0076                               ___wmul 0FE1  
                          ??___lwdiv 0074                            ??___lwmod 007C  
                             main@c1 004A                               main@c2 004B  
                     _PMD_Initialize 0F7F                            ??_isdigit 0070  
                          ??_sprintf 0026                    _SYSTEM_Initialize 0F90  
            __end_of__initialization 0024                   ?_SYSTEM_Initialize 0070  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 0070  
                      __end_of_tsttc 0492               __end_of_PMD_Initialize 0F87  
                          LCDrecv@hc 0074                            LCDrecv@lc 0075  
                       ??_LCDsend2x4 0073            __end_of_SYSTEM_Initialize 0F9A  
                       sprintf@width 0030                              ??_tsttc 0072  
                         __pbssBANK0 004E                              ?_LCDcmd 0070  
                            ?_LCDstr 0079                              LCDcmd@c 0078  
                            LCDstr@c 0020                              LCDstr@p 0079  
                         __pmaintext 0492                              ?___wmul 0070  
                         __pintentry 0004                   __end_of_LCDsend2x4 0645  
                          ?_WriteI2C 0070                      ?_PMD_Initialize 0070  
                  ?_i2c1_driver_open 0070                              _LCDchar 0F77  
                            _LCDinit 0645                              _LCDrecv 023F  
                            _LCDsend 0701                   ??_i2c1_driver_open 0070  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCTUNE 0892                              _SSP1ADD 018D  
                            _SLRCONA 0F3B                              _SLRCONB 0F46  
                            _SLRCONC 0F51                              _SLRCOND 0F5C  
                            _SLRCONE 0F67                              _SSP1BUF 018C  
                            _SSP1MSK 018E                         LCDsend2x4@hc 0076  
                       LCDsend2x4@lc 0077                      __size_of_LCDcmd 0007  
                 _i2c1_driver_i2cISR 004E                      __size_of_LCDstr 001B  
                            _ReadI2C 0FAC                      __size_of___wmul 001F  
                            ___lwdiv 0744                              ___lwmod 07BB  
                         ??_WriteI2C 0070                              __ptext1 0385  
                            __ptext2 0028                              __ptext3 0F9A  
                            __ptext4 0FE1                              __ptext5 07BB  
                            __ptext6 0744                              __ptext7 07EF  
                            __ptext8 0F90                              __ptext9 0F7F  
                  __end_of_hexpowers 1008                              _dpowers 1024  
              _OSCILLATOR_Initialize 0F87                              _isdigit 0F9A  
           ??_PIN_MANAGER_Initialize 0070                              main@buf 0038  
         __size_of_SYSTEM_Initialize 000A                              _sprintf 0028  
               end_of_initialization 0024                            _PORTBbits 000D  
                          _TRISCbits 0013                       __end_of_LCDcmd 0F77  
                     __end_of_LCDstr 0FE1                       LCDsend2x4@mode 0072  
                     __end_of___wmul 1000               ?_OSCILLATOR_Initialize 0070  
                start_initialization 001E      __size_of_PIN_MANAGER_Initialize 003B  
                   WriteI2C@data_out 0071                             ??_LCDcmd 0078  
                           ??_LCDstr 007B                     ??_PMD_Initialize 0070  
                           ??___wmul 0074                    __size_of_WriteI2C 004B  
                           ?_LCDchar 0070                             ?_LCDinit 0070  
                           ?_LCDrecv 0070                             ?_LCDsend 0070  
                          ___latbits 0002                        __pcstackBANK0 0020  
                       _isdigit$1607 0070                             LCDchar@c 0078  
                           LCDsend@c 0073                          sprintf@flag 002F  
          __size_of_i2c1_driver_open 000C                          sprintf@prec 002C  
                           ?_ReadI2C 0070                     ___lwdiv@dividend 0072  
             _PIN_MANAGER_Initialize 0780                             ?___lwdiv 0070  
                           ?___lwmod 0078          _i2c1_driver_busCollisionISR 0050  
       ??_INTERRUPT_InterruptManager 0070                             ?_isdigit 0070  
                          _hexpowers 1000                     ___lwdiv@quotient 0075  
                           ?_sprintf 0020                       __size_of_tsttc 010D  
                     ___wmul@product 0074                             _LATAbits 0016  
                           _LATBbits 0017                             _PIE3bits 0719  
__size_of_INTERRUPT_InterruptManager 0018                             _PIR3bits 070F  
                           _SSP1CON1 0190                             _SSP1CON2 0191  
                           _SSP1STAT 018F                    ___wmul@multiplier 0070  
                   __size_of_LCDchar 0008                     __size_of_LCDinit 0071  
                   __size_of_LCDrecv 0146                     __size_of_LCDsend 0043  
                   __size_of_ReadI2C 001A              ??_OSCILLATOR_Initialize 0070  
                   __size_of___lwdiv 003C                     __size_of___lwmod 0034  
                           _WriteI2C 06B6                           sprintf@idx 002A  
                         sprintf@val 002D                     __size_of_isdigit 0012  
                    ___lwdiv@divisor 0070                      ___lwdiv@counter 0077  
                           __ptext10 0780                             __ptext11 0F87  
                           __ptext20 06B6                             __ptext12 0FC6  
                           __ptext13 0F77                             __ptext14 023F  
                           __ptext15 0FAC                             __ptext16 0645  
                           __ptext17 0701                             __ptext18 0F70  
                           __ptext19 0592                         _SSP1CON1bits 0190  
                       _SSP1CON2bits 0191                             _btnState 0052  
                   __size_of_sprintf 0217                     _i2c1_driver_open 07EF  
                      __size_of_main 0100                           tsttc@value 0073  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 001C  
         _INTERRUPT_InterruptManager 0004                         _SSP1STATbits 018F  
                         _INTCONbits 000B                             isdigit@c 0071  
                         _LCDsend2x4 0592                             intlevel1 0000  
                          sprintf@ap 002B                            sprintf@sp 0032  
                   ___lwmod@dividend 007A              ?_PIN_MANAGER_Initialize 0070  
                      __pstringtext1 1024                        __pstringtext2 1000  
                      __pstringtext3 1019                        __pstringtext4 102E  
                      __pstringtext5 1038                        __pstringtext6 103F  
                      __pstringtext7 1044                        __pstringtext8 0000  
                           sprintf@c 0033                             sprintf@f 0020  
                         _SSP1DATPPS 0EC6                           _SSP1CLKPPS 0EC5  
                    ___lwmod@divisor 0078                      ___lwmod@counter 007D  
     __end_of_PIN_MANAGER_Initialize 07BB  
